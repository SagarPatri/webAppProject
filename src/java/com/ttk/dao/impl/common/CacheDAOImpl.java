/**
 * @ (#) CacheDAOImpl.java Sep 12, 2005
 * Project      :
 * File         : CacheDAOImpl.java
 * Author       : Nagaraj D V
 * Company      :
 * Date Created : Sep 12, 2005
 *
 * @author       :  Nagaraj D V
 * Modified by   :  Ramakrishna K M
 * Modified date :  Sep 28, 2005
 * Reason        :  Added Some Cache Objects
 */

package com.ttk.dao.impl.common;

import java.io.Serializable;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Collection;

import javax.servlet.http.HttpServletRequest;

import oracle.jdbc.driver.OracleTypes;

import org.apache.log4j.Logger;

import com.ttk.common.TTKCommon;
import com.ttk.common.exception.TTKException;
import com.ttk.dao.BaseDAO;
import com.ttk.dao.ResourceManager;
import com.ttk.dto.BaseVO;
import com.ttk.dto.common.CacheObject;


public class CacheDAOImpl implements BaseDAO, Serializable{

	private static Logger log = Logger.getLogger(CacheDAOImpl.class); 

    //define the queries for which cache object's are to be populated
/*
 * added as per KOC 1285 Change Request  
 */                                                   
	//koc 1284
	 private static final String strRegionCode="SELECT  (STATE_TYPE_ID || CITY_TYPE_ID) AS CITY_TYPE_ID , CITY_DESCRIPTION FROM APP.TPA_REGION_CODE ORDER BY SORT_NO";//as Per  KOC 1284 Change Rerquest
	 private static final String strRegionCodelist="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM APP.TPA_GENERAL_CODE WHERE HEADER_TYPE='REGION' ORDER BY SORT_NO";
    //Added as per KOC 1285 Change Request  
    private static final String strTPADOMICILARY_HOSP_REASON ="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM APP.TPA_GENERAL_CODE WHERE HEADER_TYPE='DOM_REASON_TYPE' ORDER BY SORT_NO";
	/** This code is added for cr koc 1103
	* added eft
	 */
    private static final String strTPAGENERAL_CODE_ACCOUNT ="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM APP.TPA_GENERAL_CODE WHERE HEADER_TYPE='ACCOUNT_UPDATE' ORDER BY SORT_NO";
    private static final String strdestination_Bank ="SELECT upper( A.BANK_NAME),upper(A.BANK_NAME) FROM FIN_APP.TPA_BANK_MASTER A ORDER BY A.BANK_NAME";
    private static final String strTPAGENERAL_CODE_ACCOUNTTYPE="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM APP.TPA_GENERAL_CODE WHERE HEADER_TYPE='ACCOUNT_TYPE'";
    private static final String strPAYMENT_METHOD1 ="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PAYMENT_METHOD' AND GENERAL_TYPE_ID IN('EFT','PCA')ORDER BY SORT_NO";
	 // Changes added for Debit Note CR KOC1163
    private static final String strPAYMENT_METHOD2 ="SELECT GENERAL_TYPE_ID,(CASE GENERAL_TYPE_ID WHEN 'EFT' THEN 'With Bank Details' WHEN 'PCA' THEN 'Without Bank Details' END ) DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PAYMENT_METHOD' AND GENERAL_TYPE_ID IN('EFT','PCA')ORDER BY SORT_NO";
    //"SELECT GENERAL_TYPE_ID,DESCRIPTION FROM TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PAYMENT_METHOD' ORDER BY SORT_NO";
	//Added as per Shorfalll koc1179 CR
	//select a.general_type_id,a.description from app.tpa_general_code a where general_type_id in('SRT','OTH') ORDER BY a.general_type_id DESC
	//select a.general_type_id,a.description from app.tpa_general_code a where header_type='CLAUSE_SUB_TYPE'
	 private static final String strClauseType="select a.general_type_id,a.description from app.tpa_general_code a where general_type_id in('OTH','SRT') ORDER BY a.general_type_id ASC";
	 private static final String strClauseSubType="select a.general_type_id,a.description from app.tpa_general_code a where header_type='CLAUSE_SUB_TYPE'";
    
    /**
	 *End koc 1103
	 * End eft
	 */
	//private static final String strUSER_ROLES = "SELECT ROLE_ID, ROLE_DESC FROM APP_USER_ROLES_CODE";
    private static final String strTPA_HOSP_GRADE_CODE = "SELECT GRADE_TYPE_ID, DESCRIPTION FROM app.TPA_HOSP_GRADE_CODE ORDER BY SORT_NO";
    private static final String strTPA_COUNTRY_CODE = "SELECT COUNTRY_ID, COUNTRY_NAME as COUNTRY FROM app.TPA_COUNTRY_CODE ORDER BY COUNTRY_NAME = 'Oman' desc; ";
    private static final String strROOM_TYPES = "SELECT TC.ROOM_TYPE_ID,TC.ROOM_DESCRIPTION FROM app.TPA_HOSP_ROOM_TYPE_CODE TC ORDER BY TC.SORT_NO";
    //private static final String strTPA_STATE_CODE = "SELECT STATE_TYPE_ID, STATE_NAME FROM app.TPA_STATE_CODE where STATE_NAME IN('Muscat','Dhofar','Musandam','Buraymi','Dakhiliyah','North Batinah','South Batinah','South Sharqiyah','North Sharqiyah','Dhahirah','Wusta') ORDER BY SORT_NO";
    private static final String strROOM_TYPE = "select room_id,room_type from app.room_types";
    private static final String strTPA_STATE_CODE = "SELECT STATE_TYPE_ID, STATE_NAME FROM app.TPA_STATE_CODE ORDER BY SORT_NO";
    private static final String strTPA_INSPRODUCT_CODE = "SELECT GRADE_TYPE_ID, DESCRIPTION FROM app.TPA_HOSP_GRADE_CODE ORDER BY SORT_NO";
    private static final String strTPA_CITY_CODE = "SELECT CITY_TYPE_ID, CITY_DESCRIPTION FROM app.TPA_CITY_CODE where CITY_DESCRIPTION IN('Adam','As Sib','Al Ashkharah','Al Buraimi','Al Hamra','Al Jazer','Al Madina A Zarqa','Al Suwaiq','Bahla','Barka','Bidbid','Bidiya','Duqm','Haima','Ibra','Ibri','Izki','Jabrin','Jalan Bani Bu Hassan','Khasab','Mahooth','Manah','Masirah','Matrah','Mudhaybi','Mudhaireb','Muscat','Nizwa','Quriyat','Raysut','Rustaq','Ruwi','Saham','Shinas','Saiq','Salalah','Samail','Sohar','Sur','Tan`am','Thumrait')  ORDER BY SORT_NO";
    private static final String strTPA_HOSP_EMPANEL_STATUS_CODE = "SELECT EMPANEL_STATUS_TYPE_ID, EMPANEL_DESCRIPTION FROM app.TPA_HOSP_EMPANEL_STATUS_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_PAYER_CODE = "SELECT INS_SEQ_ID,INS_COMP_NAME FROM app.TPA_INS_INFO WHERE ins_seq_id in(16980,16423,16940);";
    private static final String strTPA_HOSP_PAYER_CODE_TARIFF = "select ins_comp_code_number,ins_comp_name from app.tpa_ins_info WHERE ins_comp_code_number in('AMT','NIA','OIC')";
    private static final String strTPA_HOSP_EMPANEL_TYPE_CODE = "SELECT EMPANEL_TYPE_ID, EMPANEL_DESCRIPTION FROM app.TPA_HOSP_EMPANEL_TYPE_CODE ORDER BY SORT_NO";
    private static final String strTPA_MOU_CODE = "SELECT MOU_TYPE_ID, DESCRIPTION FROM app.TPA_MOU_CODE ORDER BY SORT_NO";
    private static final String strTPA_COMM_CODE = "SELECT COMM_TYPE_ID, COMM_TYPE_DESC FROM app.TPA_COMM_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_CONTACT_CODE = "SELECT CONTACT_TYPE_ID, CONTACT_DESCRIPTION FROM app.TPA_HOSP_CONTACT_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_DR_SPECIALITY_CODE = "SELECT SPEC_TYPE_ID, DESCRIPTION FROM app.TPA_HOSP_DR_SPECIALITY_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_LOG_CODE = "SELECT LOG_TYPE_ID,DESCRIPTION FROM app.TPA_HOSP_LOG_CODE ORDER BY SORT_NO";
    private static final String strTPA_PTNR_LOG_CODE = "SELECT LOG_TYPE_ID,DESCRIPTION FROM app.TPA_PARTNER_LOG_CODE ORDER BY SORT_NO";

    
    //private static final String strAPP_ADDRESS_TYPE_CODE = "SELECT ADDRESS_TYPE_ID, ADDRESS_TYPE_DESC FROM APP_ADDRESS_TYPE_CODE ORDER BY SORT_NO";
    //private static final String strAPP_COMM_TYPE_CODE  = "SELECT COMM_TYPE_ID, COMM_TYPE_DESC FROM APP_COMM_TYPE_CODE  ORDER BY SORT_NO";
    //private static final String strAPP_USER_TYPE_CODE   = "SELECT USER_TYPE_ID, USER_TYPE_DESC FROM APP_USER_TYPE_CODE ORDER BY SORT_NO";
    private static final String strTPA_DESIGNATION_CODE   = "SELECT DESIGNATION_TYPE_ID, DESIGNATION_DESCRIPTION FROM app.TPA_DESIGNATION_CODE ORDER BY SORT_NO";
    private static final String strTPA_ENROL_TYPE_CODE   = "SELECT ENROL_TYPE_ID, ENROL_DESCRIPTION FROM app.TPA_ENROL_TYPE_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_ANSWER_CODE   = "SELECT ANS_TYPE_ID, ANS_DESCRIPTION FROM app.TPA_HOSP_ANSWER_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_CATEGORY_CODE = "SELECT CATEGORY_TYPE_ID, DESCRIPTION FROM app.TPA_HOSP_CATEGORY_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_CODE = "SELECT HOSP_TYPE_ID, DESCRIPTION FROM app.TPA_HOSP_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_EMPANEL_RSON_CODE  = "SELECT EMPANEL_RSON_TYPE_ID, RSON_DESCRIPTION FROM app.TPA_HOSP_EMPANEL_RSON_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_LOCATION_CODE  = "SELECT LOCATION_TYPE_ID, DESCRIPTION FROM app.TPA_HOSP_LOCATION_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_MEDICAL_CODE  = "SELECT MEDICAL_TYPE_ID, MEDICAL_DESCRIPTION FROM app.TPA_HOSP_MEDICAL_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_PLAN_CODE  = "SELECT PLAN_SEQ_ID, PLAN_DESCRIPTION FROM app.TPA_HOSP_PLAN_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_PROCEDURE_CODE  = "SELECT PROC_SEQ_ID, PROC_DESCRIPTION FROM app.TPA_HOSP_PROCEDURE_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_QUEST_CODE  = "SELECT QUEST_TYPE_ID, QUEST_DESCRIPTION FROM app.TPA_HOSP_QUEST_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_ROOMS_CODE  = "SELECT ROOM_TYPE_ID, ROOM_DESCRIPTION FROM app.TPA_HOSP_ROOMS_CODE ORDER BY SORT_NO";
    //private static final String strTPA_HOSP_WARD_CODE   = "SELECT WARD_TYPE_ID, WARD_DESCRIPTION FROM TPA_HOSP_WARD_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_MEDICAL_WARD_CODE = "SELECT tpa_hosp_ward_code.ward_type_id,tpa_hosp_ward_code.ward_description FROM app.tpa_hosp_tariff_ward,tpa_hosp_ward_code WHERE ( tpa_hosp_ward_code.ward_type_id = tpa_hosp_tariff_ward.ward_type_id ) and ( tpa_hosp_tariff_ward.general_type_id = 'MED' ) ORDER BY SORT_NO";
    private static final String strTPA_HOSP_NON_MEDICAL_WARD_CODE = "SELECT tpa_hosp_ward_code.ward_type_id,tpa_hosp_ward_code.ward_description FROM app.tpa_hosp_tariff_ward,app.tpa_hosp_ward_code WHERE ( tpa_hosp_ward_code.ward_type_id = tpa_hosp_tariff_ward.ward_type_id ) and ( tpa_hosp_tariff_ward.general_type_id = 'NMD' ) ORDER BY SORT_NO";
    private static final String strTPA_RELATIONSHIP_CODE    = "SELECT RELSHIP_TYPE_ID, RELSHIP_DESCRIPTION FROM app.TPA_RELATIONSHIP_CODE ORDER BY SORT_NO";
    private static final String strTPA_OFFICE_INFO = "SELECT TPA_OFFICE_SEQ_ID, OFFICE_NAME FROM app.TPA_OFFICE_INFO ORDER BY TPA_OFFICE_SEQ_ID";
   
    //Need Package AK in strPRODUCT_AUTHORITY_INFO
    private static final String strPRODUCT_AUTHORITY_INFO = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'AUTHORITY_TYPE' AND GENERAL_TYPE_ID IN ('CMA')";
    //private static final String strPRODUCT_AUTHORITY_INFO = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'AUTHORITY_TYPE' AND GENERAL_TYPE_ID IN('CMA')";

    private static final String strMODE_OF_CLAIMS = "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM APP.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='CLM_SOURCE' ORDER BY GC.SORT_NO";
    private static final String strCURRENCY_LIST="SELECT currency_id,currency_id as currency FROM app.tpa_currency_code ORDER BY currency_id = 'OMR' desc";
    private static final String strTPA_USER_INFO = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='TPA_USERS' ORDER BY SORT_NO";
    //KOC Cigna_insurance_resriction
    private static final String strTPA_GENERAL_CODE = "select g.general_type_id,g.description from app.tpa_general_code g where g.header_type='NOTIFICATION_INFO'";//KOC Cigna_insurance_resriction 
    private static final String strTPA_GENERAL_CODE_GROUP = "SELECT group_branch_seq_id, tpa_office_info.office_code || '-' || tpa_groups.group_name group_name FROM app.tpa_group_branch,app.tpa_groups,app.tpa_office_info WHERE ( tpa_groups.group_seq_id = tpa_group_branch.group_seq_id ) and ( tpa_office_info.tpa_office_seq_id = tpa_group_branch.tpa_office_seq_id ) and (tpa_group_branch.user_type='NIC')";//KOC Cigna_insurance_resriction
  //KOC Cigna_insurance_resriction
    private static final String strTPA_HOSP_ISSUES_CHEQUES_CODE = "SELECT ISSUE_CHEQUES_TYPE_ID,DESCRIPTION FROM app.TPA_HOSP_ISSUES_CHEQUES_CODE ORDER BY SORT_NO";
    private static final String strTPA_PAY_ORDER_CODE = "SELECT PAY_ORDER_TYPE_ID,DESCRIPTION FROM app.TPA_PAY_ORDER_CODE ORDER BY SORT_NO";
    private static final String strTPA_HOSP_MOD_REASON_CODE = "SELECT MOD_REASON_TYPE_ID, DESCRIPTION FROM app.TPA_HOSP_MOD_REASON_CODE ";
    private static final String strTPA_GENERAL_CODE_DECISION = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DECISION' ORDER BY SORT_NO";
    private static final String strTPA_GENERAL_CODE_PLAN = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PLAN' ORDER BY SORT_NO";
    private static final String strTPA_GENERAL_CODE_PROVIDER = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PROVIDER' ORDER BY SORT_NO";
    private static final String strTPA_GENERAL_CODE_ASSOCIATE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ASSOCIATE' ORDER BY SORT_NO";
    private static final String strTPA_GENERAL_CODE_ASSOCIATE_HOS="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ASSOCIATE' AND GENERAL_TYPE_ID !='EXL' ORDER BY SORT_NO"; //Insurance_corporate_wise_hosp_network
    private static final String strTPA_GENERAL_CODE_VALIDATE_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'VALIDATE_STATUS' ORDER BY SORT_NO";
    private static final String strTPA_INS_PRODUCT = "SELECT PRODUCT_SEQ_ID, PRODUCT_NAME FROM app.TPA_INS_PRODUCT ORDER BY PRODUCT_NAME";
    private static final String strTPA_ENROLMENT_TYPE_CODE= "SELECT ENROL_TYPE_ID,ENROL_DESCRIPTION FROM app.TPA_ENROLMENT_TYPE_CODE where enrol_type_id in ('IND','COR') ORDER BY SORT_NO";
    private static final String strTPA_GENERAL_CODE_HONOUR = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'HONOURING' ORDER BY SORT_NO";
    //private static final String strTPA_INS_INFO = "SELECT INS_SEQ_ID,INS_COMP_NAME FROM app.TPA_INS_INFO WHERE INS_OFFICE_GENERAL_TYPE_ID = 'IHO' and ins_Seq_id IN(16423,16960,16940)ORDER BY INS_COMP_NAME";
    private static final String strTPA_INS_INFO ="SELECT INS_SEQ_ID,INS_COMP_NAME FROM app.TPA_INS_INFO WHERE INS_OFFICE_GENERAL_TYPE_ID = 'IHO' and active_yn='Y' ORDER BY INS_COMP_NAME";
    private static final String strHEALTH_ATUTH_INFO = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='AUTHORITY_TYPE'AND GENERAL_TYPE_ID IN('CMA') ORDER by SORT_NO";
    private static final String strTPA_BRO_INFO = "SELECT INS_SEQ_ID,INS_COMP_NAME FROM app.TPA_BRO_INFO WHERE INS_OFFICE_GENERAL_TYPE_ID = 'IHO' ORDER BY INS_COMP_NAME";
    private static final String strTPA_GENERAL_CODE_PRODUCT_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PRODUCT_TYPE' ORDER BY SORT_NO";
   
    private static final String strTPA_GENERAL_CODE_PRODUCT_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PRODUCT_STATUS' AND GENERAL_TYPE_ID='PRD' ORDER BY SORT_NO";
   
    private static final String strTPA_GENERAL_CODE_ADMIN_MOU_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ADMIN_MOU_STATUS' ORDER BY SORT_NO";
    private static final String strTPA_HOSP_MOU_ARTICLE = "SELECT ARTICLE_SEQ_ID,ARTICLE FROM app.TPA_HOSP_MOU_ARTICLE";
    private static final String strTPA_GENERAL_CODE_HOSP_MOU_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'HOSP_MOU_STATUS' ORDER BY SORT_NO";
    private static final String strTPA_GENERAL_CODE_PACKAGE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PKG_AVAIL' ORDER BY SORT_NO";
    private static final String strTPA_GENERAL_CODE_SECTOR_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SECTOR_TYPE' ORDER BY SORT_NO";
    private static final String strTPA_INS_DISBURSAL_CODE = "SELECT DISB_TYPE_ID,DESCRIPTION FROM app.TPA_INS_DISBURSAL_CODE ORDER BY SORT_NO";
    private static final String strTPA_INS_FREQUENCY_CODE = "SELECT FREQUENCY_TYPE_ID,DESCRIPTION FROM app.TPA_INS_FREQUENCY_CODE ORDER BY SORT_NO";
    private static final String strTPA_GENERAL_CODE_EMP_HISTORY = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'EMP_HISTORY' ORDER BY SORT_NO";
    private static final String strTPA_GENERAL_CODE_USER_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='USER_STATUS' ORDER BY SORT_NO";
    private static final String strTPA_GENERAL_CODE_PREFIX_NAME = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='PREFIX_NAME' ORDER BY SORT_NO";
    private static final String strTPA_GENERAL_CODE_TPA_USERS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='TPA_USERS' ORDER BY SORT_NO";
    private static final String strTPA_ROLES_CODE_HOS = "SELECT ROLE_SEQ_ID,ROLE_NAME FROM app.TPA_ROLES_CODE WHERE USER_GENERAL_TYPE_ID = 'HOS' ORDER BY ROLE_NAME";
    private static final String strTPA_ROLES_CODE_INS = "SELECT ROLE_SEQ_ID,ROLE_NAME FROM app.TPA_ROLES_CODE WHERE USER_GENERAL_TYPE_ID = 'INS' ORDER BY ROLE_NAME";
    private static final String strTPA_ROLES_CODE_TTK = "SELECT ROLE_SEQ_ID,ROLE_NAME FROM app.TPA_ROLES_CODE WHERE USER_GENERAL_TYPE_ID IN ('TTK','BRO') ORDER BY ROLE_NAME";
    private static final String strTPA_ROLES_CODE_BRO = "SELECT ROLE_SEQ_ID,ROLE_NAME FROM app.TPA_ROLES_CODE WHERE USER_GENERAL_TYPE_ID = 'BRO' ORDER BY ROLE_NAME";
    private static final String strTPA_DESIGNATION_CODE_BRO = "SELECT DESIGNATION_TYPE_ID, DESIGNATION_DESCRIPTION FROM app.TPA_DESIGNATION_CODE WHERE HEADER_TYPE = 'TTK' ORDER BY SORT_NO";
    private static final String strTPA_ROLES_CODE_CAL = "SELECT ROLE_SEQ_ID,ROLE_NAME FROM app.TPA_ROLES_CODE WHERE USER_GENERAL_TYPE_ID = 'CAL' ORDER BY ROLE_NAME";
    private static final String strTPA_ROLES_CODE_COR = "SELECT ROLE_SEQ_ID,ROLE_NAME FROM app.TPA_ROLES_CODE WHERE USER_GENERAL_TYPE_ID = 'COR' ORDER BY ROLE_NAME";
    private static final String strTPA_ROLES_CODE_AGN = "SELECT ROLE_SEQ_ID,ROLE_NAME FROM app.TPA_ROLES_CODE WHERE USER_GENERAL_TYPE_ID = 'AGN' ORDER BY ROLE_NAME";
    private static final String strTPA_ROLES_CODE_DMC = "SELECT ROLE_SEQ_ID,ROLE_NAME FROM app.TPA_ROLES_CODE WHERE USER_GENERAL_TYPE_ID = 'DMC' ORDER BY ROLE_NAME";
    private static final String strTPAGENERAL_CODE_ASSOCIATE_USER_LIST = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='USER_GR_ASSOCIATE' ORDER BY SORT_NO";
    private static final String strTPAGENERAL_CODE_GROUP_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='GROUP_REGISTRATION' ORDER BY SORT_NO";
    private static final String strTPAGENERAL_CODE_DEPARTMENT_ID = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DEPARTMENT' ORDER BY SORT_NO";
    private static final String strTPA_DESIGNATION_CODE_TTK = "SELECT DESIGNATION_TYPE_ID, DESIGNATION_DESCRIPTION FROM app.TPA_DESIGNATION_CODE WHERE HEADER_TYPE = 'TTK' ORDER BY SORT_NO";
    private static final String strTPA_DESIGNATION_CODE_BAK = "SELECT DESIGNATION_TYPE_ID, DESIGNATION_DESCRIPTION FROM app.TPA_DESIGNATION_CODE WHERE HEADER_TYPE = 'BAK' ORDER BY SORT_NO";
    private static final String strTPA_DESIGNATION_CODE_CAL = "SELECT DESIGNATION_TYPE_ID, DESIGNATION_DESCRIPTION FROM app.TPA_DESIGNATION_CODE WHERE HEADER_TYPE = 'CAL' ORDER BY SORT_NO";
    private static final String strTPA_DESIGNATION_CODE_HOS = "SELECT DESIGNATION_TYPE_ID, DESIGNATION_DESCRIPTION FROM app.TPA_DESIGNATION_CODE WHERE HEADER_TYPE = 'HOS' ORDER BY SORT_NO";
    private static final String strTPA_DESIGNATION_CODE_INS = "SELECT DESIGNATION_TYPE_ID, DESIGNATION_DESCRIPTION FROM app.TPA_DESIGNATION_CODE WHERE HEADER_TYPE = 'INS' ORDER BY SORT_NO";
    private static final String strTPA_DESIGNATION_CODE_COR = "SELECT DESIGNATION_TYPE_ID, DESIGNATION_DESCRIPTION FROM app.TPA_DESIGNATION_CODE WHERE HEADER_TYPE = 'COR' ORDER BY SORT_NO";
    private static final String strTPA_DESIGNATION_CODE_DMC = "SELECT DESIGNATION_TYPE_ID, DESIGNATION_DESCRIPTION FROM app.TPA_DESIGNATION_CODE WHERE HEADER_TYPE = 'DMC' ORDER BY SORT_NO";
    private static final String strTPAGENERAL_CODE_ENROLLMENT = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ENROLLMENT' ORDER BY SORT_NO";
    private static final String strTPAGENERAL_CODE_GENDER_DETAILS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'GENDER_DETAILS' ORDER BY SORT_NO";
    private static final String strTPA_BATCH_CLARIFICATION_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'BATCH_CLARIFICATION' ORDER BY SORT_NO";
    private static final String strTPAGENERAL_CODE_INS_TERM_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'INS_TERM_STATUS' ORDER BY SORT_NO";
  //For non floater  private static final String strTPAGENERAL_CODE_POLICY_SUB_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'POLICY_SUB_TYPE' AND GENERAL_TYPE_ID ='PNF' ORDER BY SORT_NO";
    private static final String strTPAGENERAL_CODE_POLICY_SUB_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'POLICY_SUB_TYPE' ORDER BY SORT_NO";
    private static final String strTPAGENERAL_CODE_POLICY_MEDIUM = "select GENERAL_TYPE_ID,description from  app.tpa_general_code where general_type_id in ('BRKR','AGT','DRT') order by description asc";
    private static final String strPOLICY_SUB_TYPE_NONFLOATER = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'POLICY_SUB_TYPE'  AND SORT_NO = 10";
    private static final String strPOLICY_SUB_TYPE_FLOATER = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'POLICY_SUB_TYPE'  AND SORT_NO = 20";
    private static final String strPOLICY_SUB_TYPE_FLOATER_NON = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'POLICY_SUB_TYPE'  AND SORT_NO IN(10,20)";
    private static final String strPOLICY_SUB_TYPE_FLOATER_RESTRICT = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'POLICY_SUB_TYPE'  AND SORT_NO IN(20,40)";
    private static final String strTPAGENERAL_CODE_ISSUE_CHEQUE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ISSUE_CHEQUE' ORDER BY SORT_NO";
    private static final String strTPAGENERAL_CODE_OCCUPATION = "select designation_type_id,designation_description from app.tpa_designation_code where header_type='CORP'";
    private static final String strNATIONALITIES_CODE_DESC="select nationality_id,description from app.tpa_nationalities_code order by sort_no";
    private static final String strMARITALSTATUSES_CODE_DESC="select general_type_id,description from app.tpa_general_code where header_type ='MARTIAL_STATUS' order by sort_no";
    private static final String strTPAGENERAL_CODE_CLAIM = "SELECT 'PAT','PREAUTH' UNION SELECT 'CLM','CLAIM' ";
    	
    private static final String strTPAGENERAL_CODE_CATEGORY = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CATEGORY' ORDER BY SORT_NO";
    private static final String strTPAEVENTENROLLMENT = "SELECT A.EVENT_SEQ_ID, A.EVENT_NAME FROM app.TPA_EVENT A JOIN TPA_WORKFLOW B ON (A.WORKFLOW_SEQ_ID = B.WORKFLOW_SEQ_ID) WHERE SUB_GENERAL_TYPE_ID = 'ENM' ORDER BY EVENT_SEQ_ID";
    private static final String strTPAEVENTENDORSEMENT = "SELECT A.EVENT_SEQ_ID, A.EVENT_NAME FROM app.TPA_EVENT A JOIN TPA_WORKFLOW B ON (A.WORKFLOW_SEQ_ID = B.WORKFLOW_SEQ_ID) WHERE SUB_GENERAL_TYPE_ID = 'END' ORDER BY EVENT_SEQ_ID";
    private static final String strTPAEVENTCLAIMS = "SELECT A.EVENT_SEQ_ID, A.EVENT_NAME FROM app.TPA_EVENT A JOIN TPA_WORKFLOW B ON (A.WORKFLOW_SEQ_ID = B.WORKFLOW_SEQ_ID) WHERE SUB_GENERAL_TYPE_ID = 'CLM' ORDER BY EVENT_SEQ_ID";
    private static final String strTPAEVENTCODECLEANUP = "SELECT A.EVENT_SEQ_ID, A.EVENT_NAME FROM app.TPA_EVENT A JOIN TPA_WORKFLOW B ON (A.WORKFLOW_SEQ_ID = B.WORKFLOW_SEQ_ID) WHERE SUB_GENERAL_TYPE_ID = 'CCU' ORDER BY EVENT_SEQ_ID";
    private static final String strTPA_INS_PRODUCT_PLAN = "SELECT TO_CHAR(PROD_PLAN_SEQ_ID)||'#'||TO_CHAR(PLAN_AMOUNT), PROD_PLAN_NAME FROM app.TPA_INS_PRODUCT_PLAN ORDER BY PROD_PLAN_SEQ_ID";
    private static final String str_PED_CODE_DESCRIPTION = "SELECT PED_CODE_ID,PED_DESCRIPTION FROM app.TPA_PED_CODE ORDER BY SORT_NO";
    private static final String strPOLICY_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'TPA_POLICY_STATUS' ORDER BY SORT_NO";
    //added for donor
    private static final String strDONOR_CLAIM_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'TPA_DONOR_CLAIM_STATUS' ORDER BY SORT_NO";
    
    private static final String strBATCH_PRINT_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'BATCH_PRINT_STATUS' ORDER BY SORT_NO";
    private static final String strENROLLMENT_ID_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ENROLLMENT_ID_TYPE' ORDER BY SORT_NO";
    private static final String strTPA_OFFICE_TYPE_ID = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'TPA_OFFICE_TYPE_ID' AND GENERAL_TYPE_ID != 'THO'";
    //private static final String strTPA_HEAD_OFFICE_NAME = "SELECT TPA_OFFICE_SEQ_ID, OFFICE_NAME FROM (SELECT TPA_OFFICE_SEQ_ID, OFFICE_NAME, LEVEL L FROM TPA_OFFICE_INFO START WITH TPA_PARENT_SEQ_ID IS NULL CONNECT BY PRIOR TPA_OFFICE_SEQ_ID = TPA_PARENT_SEQ_ID) WHERE L <= 2 ORDER BY TPA_OFFICE_SEQ_ID";
    private static final String strTPA_HEAD_OFFICE_NAME = "SELECT tpa_office_seq_id ,office_name FROM tpa_office_info ss WHERE app.tpa_office_general_type_id IN('TZO','THO') OR tpa_office_seq_id IN (SELECT tpa_office_seq_id FROM tpa_office_info WHERE tpa_office_general_type_id IN('TBO') AND tpa_parent_seq_id IN( SELECT tpa_office_seq_id FROM tpa_office_info WHERE tpa_office_general_type_id = 'THO') )";
    private static final String strENDORSEMENTTYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ENDORSEMENT_TYPE' ORDER BY SORT_NO";
    private static final String strAMOUNT = "SELECT AMOUNT_TYPE_ID,AMOUNT_DESCRIPTION FROM app.PAT_REQUESTED_AMOUNT_CODE ORDER BY SORT_NO";
    private static final String strASSIGNED_TO = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ASSIGNED_TO' ORDER BY SORT_NO";
    private static final String strRECD_SOURCE = "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM APP.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='PAT_SOURCE' ORDER BY GC.SORT_NO";//"SELECT GENERAL_TYPE_ID,DESCRIPTION FROM TPA_GENERAL_CODE WHERE HEADER_TYPE = 'RECD_SOURCE' ORDER BY SORT_NO";
    private static final String strENCOUNTER_TYPES="SELECT TETC.ENCOUNTER_SEQ_ID,(case when TGC.DESCRIPTION is null then TETC.DESCRIPTION else '('||TGC.DESCRIPTION||') '||TETC.DESCRIPTION end)AS DESCRIPTION FROM app.TPA_ENCOUNTER_TYPE_CODES TETC LEFT OUTER JOIN app.TPA_GENERAL_CODE TGC ON (TETC.CATEGORY_TYPE=TGC.GENERAL_TYPE_ID) WHERE TETC.HEADER_TYPE='ENCOUNTER_TYPE' AND TETC.ENCOUNTER_SEQ_ID NOT IN (3,4)";
    private static final String strENCOUNTER_START_TYPES="SELECT ENCOUNTER_SEQ_ID,DESCRIPTION FROM app.TPA_ENCOUNTER_TYPE_CODES WHERE HEADER_TYPE='ENCOUNTER_START_TYPE'";
    private static final String strENCOUNTER_END_TYPES="SELECT ENCOUNTER_SEQ_ID,DESCRIPTION FROM app.TPA_ENCOUNTER_TYPE_CODES WHERE HEADER_TYPE='ENCOUNTER_END_TYPE'";
    //private static final String strTREATMENT_TYPES="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM TPA_GENERAL_CODE WHERE HEADER_TYPE ='TREATMENT_TYPE' ORDER BY SORT_NO";
    private static final String strTREATMENT_TYPES="select tetc.encounter_seq_id, tetc.description  from app.tpa_encounter_type_codes tetc where tetc.header_type = 'ENCOUNTER_START_TYPE'   and tetc.encounter_seq_id in (1, 2)";
    private static final String strPREAUTH_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PREAUTH_STATUS' AND SORT_NO NOT IN(70,80) ORDER BY SORT_NO";
    private static final String strENH_PREAUTH_STATUS = "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM APP.TPA_GENERAL_CODE GC WHERE GC.GENERAL_TYPE_ID IN ('APR','REJ')";
    private static final String strYears = "select  to_char(sysdate,'yyyy') as id,to_char(sysdate,'yyyy') as year from dual union select to_char(add_months(sysdate,-12),'yyyy') as id,to_char(add_months(sysdate,-12),'yyyy') as year from dual union select to_char(add_months(sysdate,-24),'yyyy') as id,to_char(add_months(sysdate,-24),'yyyy') as year from dual order by 1 desc";

    private static final String strCLAIM_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PREAUTH_STATUS' AND SORT_NO NOT IN(60,80) ORDER BY SORT_NO";
	//added as per koc 1274 A claimStatusAprRejFlow,preauthStatusAprRejFlow strCLAIM_STATUS_APRREJFLOW strPREAUTH_STATUS_APRREJFLOW
    private static final String strCLAIM_STATUS_APRREJFLOW = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PREAUTH_STATUS' AND SORT_NO IN(80) ORDER BY SORT_NO";//modified as per KOC 1274A
    private static final String strPREAUTH_STATUS_APRREJFLOW = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PREAUTH_STATUS' AND SORT_NO IN(80) ORDER BY SORT_NO";//modified as per bajaj cr 1274A

    private static final String strINVEST_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'INVESTGN_STATUS' ORDER BY SORT_NO";
    private static final String strHOSPITALIZATION_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'HOSPITALIZATION_TYPE' ORDER BY SORT_NO";
    private static final String strHOSPITALIZED_FOR = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'HOSPITALISED_TYPE' ORDER BY SORT_NO";
    private static final String strCLOSE_PROXIMITY = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PAT_GNRL_STATUS' ORDER BY SORT_NO";
    private static final String strPREAUTH_PRIORITY = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PREAUTH_PRIORITY' ORDER BY SORT_NO DESC" ;
    private static final String strCoIns_Comp_Name_List = "select comp_seq_id, company_name from app.tpa_ins_company order by company_name asc" ;
    private static final String strPREAUTH_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PREAUTH_TYPE' ORDER BY SORT_NO";
    private static final String strINS_TYPE = "select ins.ins_seq_id,ins.ins_comp_name from app.tpa_ins_info ins order by ins.ins_comp_name";
    private static final String strSHORTFALL_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SHORTFALL_STATUS' ORDER BY SORT_NO";
    private static final String strSHORTFALL_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SHORTFALL_TYPE' AND SORT_NO IN(10,20) ORDER BY SORT_NO";
   // private static final String strCLAIM_SHORTFALL_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SHORTFALL_TYPE' ORDER BY SORT_NO";
    private static final String strSUPPORT_DOC = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SUPPORT_DOC' AND SORT_NO IN(10,20) ORDER BY SORT_NO";
    private static final String strSpecialty = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SPECIALTY' ORDER BY SORT_NO";
    private static final String strTREATMENT_PLAN = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'TREAT_PLAN' ORDER BY SORT_NO";
    private static final String strICD_TREATMENT_PLAN = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SPECIALTY' AND SORT_NO IN(10,20) ORDER BY SORT_NO DESC";
    private static final String strLOG_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'LOG_TYPE' ORDER BY SORT_NO";
    private static final String strDATAENTRYLOG_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'LOG_TYPE' AND GENERAL_TYPE_ID IN ('NAR','COL') ORDER BY SORT_NO"; ////ParallelAlert 
    private static final String strDATAENTRYLOG_INFO = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'LOG_TYPE' AND GENERAL_TYPE_ID IN('COL','NAR') ORDER BY SORT_NO";
    private static final String strLOG_INFO = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'LOG_TYPE' AND GENERAL_TYPE_ID IN('COL','NAR') ORDER BY SORT_NO";
    private static final String strHISTORY_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'HISTORY_TYPE' ORDER BY SORT_NO";
    private static final String strCLAIM_HISTORY_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'HISTORY_TYPE' AND GENERAL_TYPE_ID NOT IN('HMP') ORDER BY SORT_NO";
	private static final String strACCOUNT_HISTORY_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'HISTORY_TYPE' AND GENERAL_TYPE_ID NOT IN('HMP','HIN') ORDER BY SORT_NO"; //added for koc 11 koc11
    //private static final String strINVESTIGATION_AGENCY = "SELECT INVEST_AGNCY_SEQ_ID,AGENCY_NAME FROM INVESTIGATION_AGENCY_DETAILS ORDER BY UPPER(AGENCY_NAME)";
	private static final String strINVESTIGATION_AGENCY = "SELECT INVEST_AGNCY_SEQ_ID,AGENCY_NAME FROM app.INVESTIGATION_AGENCY_DETAILS WHERE ACTIVE_YN = 1 ORDER BY UPPER(AGENCY_NAME)";// KOC iNVESTIGATION
	private static final String strINVEST_REASON = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'INVEST_RSON' ORDER BY SORT_NO";
    private static final String strAUTH_REASON = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'AUTH_RSON' ORDER BY SORT_NO";
    private static final String strSHORTFALL_REASON = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SHORTFALL_RSON' ORDER BY SORT_NO";
    private static final String strDURATION_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DURATION_TYPE' ORDER BY SORT_NO";
    private static final String strINVESTIGATION_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DEPARTMENT' AND GENERAL_TYPE_ID in('PRE','CLM') ORDER BY SORT_NO";
    private static final String strRCVD_FROM= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'RECD_FROM' ORDER BY SORT_NO";
    private static final String strQUALITY_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'QUALITY_STATUS' ORDER BY SORT_NO";
    private static final String strASSIGN_USERS = "SELECT CONTACT_SEQ_ID,CONTACT_NAME FROM app.TPA_USER_CONTACTS WHERE USER_GENERAL_TYPE_ID='TTK' ORDER BY CONTACT_NAME";
    private static final String strCONFLICT = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CONFLICT' ORDER BY SORT_NO";
    private static final String strRELSHIP_GENDER = "SELECT RELSHIP_TYPE_ID ||'#'||ASSOC_GENDER_REL RELSHIP,RELSHIP_DESCRIPTION FROM app.TPA_RELATIONSHIP_CODE ORDER BY SORT_NO";
    private static final String strADMIN_AUTHORITY = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ADMIN_AUTH_TYPE' ORDER BY SORT_NO";
    private static final String strALLOCATED_TYPE= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'BUFFER_ALLOC_TYPE' ORDER BY SORT_NO";
    private static final String strBatchStatus ="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'BATCH_STATUS' ORDER BY SORT_NO";
    //private static final String strCOURIER_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'COURIER_STATUS' ORDER BY SORT_NO";
    private static final String strCOURIER_STATUS = "SELECT T.GENERAL_TYPE_ID,T.DESCRIPTION FROM app.TPA_GENERAL_CODE T WHERE T.HEADER_TYPE='RECEIPT_STATUS'";
    private static final String strCONTENT_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CONTENT_TYPE' ORDER BY SORT_NO";
    private static final String strCOURIER_NAME = "SELECT COURIER_COMP_SEQ_ID,COURIER_COMP_NAME FROM app.COURIER_COMPANY ORDER BY UPPER(COURIER_COMP_NAME)";
    //added for courier cr
    private static final String strCOURIER_DOCTYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='COURIER_DOC_TYPE' ORDER BY SORT_NO";
    
    private static final String strOFFICE_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='OFFICE_TYPE' AND SORT_NO IN(10,40) ORDER BY SORT_NO";
    private static final String strBANK_HEAD_OFFICE = "SELECT BANK_SEQ_ID,BANK_NAME FROM FIN_APP.TPA_BANK_MASTER WHERE HO_ID IS NULL AND DELETED_YN='N' ORDER BY UPPER(BANK_NAME)";
    private static final String strACCT_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ACCOUNT_STATUS' ORDER BY SORT_NO";
    private static final String strTRANSACTION_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'TRANS_TYPE' ORDER BY SORT_NO";
    private static final String strDEPOSIT_TRANSACTION_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.tpa_general_code WHERE HEADER_TYPE = 'TRANS_TYPE' AND GENERAL_TYPE_ID IN('TTD') ORDER BY SORT_NO";
    private static final String strFLOATTRANSACTIONTYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'TRANS_TYPE' AND GENERAL_TYPE_ID NOT IN ('TTB') ORDER BY SORT_NO";
    private static final String strFLOAT_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'FLOAT_TYPE' ORDER BY SORT_NO";
    private static final String strCLAIM_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CLAIM_TYPE' ORDER BY SORT_NO";
    private static final String strCHEQUE_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CHEQUE_STATUS' ORDER BY SORT_NO";
    private static final String strSTALE_CHEQUE_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CHEQUE_STATUS' AND GENERAL_TYPE_ID IN('CSR','CSS') ORDER BY SORT_NO";
    //added as per KOC 1175 ChangeRequest
    private static final String strCHEQUE_STATUS_WithoutStale="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CHEQUE_STATUS' AND GENERAL_TYPE_ID IN('CSI','CSC','CSR','CSV') ORDER BY SORT_NO";
  //added as per KOC 1175 ChangeRequest
    private static final String strCOURIER_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'COURIER_TYPE' ORDER BY SORT_NO";
    private static final String strBUFFER_MODE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'BUFFER_MODE' ORDER BY SORT_NO";
    private static final String strENTRY_MODE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ENTRY_MODE' ORDER BY SORT_NO";
    private static final String strSUPPORT_DOC_BUFFER = "SELECT DISTINCT A.GENERAL_TYPE_ID,A.DESCRIPTION FROM app.TPA_GENERAL_CODE A,TPA_ENR_POLICY B WHERE (A.HEADER_TYPE='SUPPORT_DOC') AND (B.ENROL_TYPE_ID='COR') AND (B.BUFFER_ALLOWED_YN = 'Y') AND SORT_NO in(10,20,60) ORDER BY DESCRIPTION DESC";
    private static final String strBUFFER_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'BUFFER_STATUS' ORDER BY SORT_NO";
    private static final String strCLAIMS_SUPPORT_DOC = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SUPPORT_DOC' AND SORT_NO IN(10,20,30,40,50) ORDER BY SORT_NO";
    private static final String strCLAIMS_SUPPORT_DOC_BUFFER = "SELECT DISTINCT A.GENERAL_TYPE_ID,A.DESCRIPTION FROM app.TPA_GENERAL_CODE A,TPA_ENR_POLICY B WHERE (A.HEADER_TYPE='SUPPORT_DOC') AND (B.ENROL_TYPE_ID='COR') AND (B.BUFFER_ALLOWED_YN = 'Y') ORDER BY DESCRIPTION DESC";
    private static final String strVOUCHER_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'VOUCHER_STATUS' ORDER BY SORT_NO";
    private static final String strPAYMENT_METHOD = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PAYMENT_METHOD' ORDER BY SORT_NO";
    private static final String strINWARD_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'INWARD_STATUS' ORDER BY SORT_NO";
    private static final String strDOCUMENT_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DOCUMENT_TYPE' ORDER BY SORT_NO";
    private static final String strCLAIM_SOURCE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CLAIM_SOURCE' ORDER BY SORT_NO";
    private static final String strCLAIM_MODE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CLAIM_MODE' ORDER BY SORT_NO";
    private static final String strREQUEST_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DOCUMENT_TYPE' AND SORT_NO in(10,30) ORDER BY SORT_NO";
    private static final String strCLAIM_SUBTYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CLAIM_SUBTYPE' ORDER BY SORT_NO";
    //OPD_4_hosptial
    private static final String strPAYMENT_TYPE = "select gc.general_type_id,gc.description FROM app.tpa_general_code gc where gc.header_type='PAYMENT_TO' order by gc.general_type_id desc";
    private static final String strHEALTH_CHECK_TYPE = "select gc.general_type_id,gc.description FROM app.tpa_general_code gc where gc.general_type_id='TPA'";
    //OPD_4_hosptial
    private static final String strDOC_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DOC_TYPE' ORDER BY SORT_NO";
    private static final String strDOC_REASON_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DOC_REASON_TYPE' ORDER BY SORT_NO";
    private static final String strAPPROVE_REASON = " SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PAT_APP_RSON' ORDER BY SORT_NO";
    private static final String strACCOUNT_HEAD_TYPE = "SELECT WARD_TYPE_ID ||'#'|| CAPTURE_NUMBER_OF_DAYS_YN,WARD_DESCRIPTION FROM app.TPA_HOSP_WARD_CODE ORDER BY WARD_DESCRIPTION";
    private static final String strVACCINE_TYPE = "SELECT VACCINATION_ID,VACCINATION_DESCRIPTION FROM app.TPA_VACCINATION_CODE ORDER BY SORT_NO";//added for maternity
    private static final String strDischarge_Condition = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DISCHARGE_CONDITION' ORDER BY SORT_NO";
    private static final String strONLINE_ACCESS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ONLINE_ACCESS' ORDER BY SORT_NO";
    private static final String strSUMMARY_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SUMMARY_TYPE' ORDER BY SORT_NO";
    private static final String strCALLER_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CALLER_TYPE' ORDER BY SORT_NO";
    private static final String strCALL_LOG_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CALL_LOG_TYPE' ORDER BY SORT_NO";
    private static final String strCALL_REASON = "SELECT CALL_RSON_TYPE_ID,CALL_RSON_DESCRIPTION FROM app.TPA_CALL_REASON_CODE";
    private static final String strCALL_SUB_REASON = "SELECT CALL_SUB_RSON_TYPE_ID,CALL_SUB_RSON_DESCRIPTION FROM app.TPA_CALL_SUB_REASON_CODE";
    private static final String strCALL_CATEGORY = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CALL_CATEGORY' ORDER BY SORT_NO";
    private static final String strCALL_SUB_CATEGORY = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CALL_SUB_CATEGORY' ORDER BY SORT_NO";
    private static final String strCALL_ANSWER_CODE = "SELECT CALL_ANS_TYPE_ID,CALL_ANS_DESCRIPTION FROM app.TPA_CALL_ANSWER_CODE";
    private static final String strCALL_LOGGED_BY = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'LOGGED_BY' ORDER BY SORT_NO";
    private static final String strCALL_RELATE_TO = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CALL_RELATE_TO' ORDER BY SORT_NO";
    private static final String strCALL_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CALL_STATUS' ORDER BY SORT_NO";
    private static final String strRULE_ACCOUNT_HEAD_TYPE = "SELECT WARD_TYPE_ID,WARD_DESCRIPTION FROM app.TPA_HOSP_WARD_CODE ORDER BY WARD_DESCRIPTION";
    private static final String strCOURIER_SOURCE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'COURIER_SOURCE' ORDER BY SORT_NO";
    private static final String strTPA_POLICY_TEMPLATES = "SELECT TEMPLATE_ID,TEMPLATE_NAME FROM app.TPA_POLICY_TEMPLATES ORDER BY UPPER(TEMPLATE_NAME)";
    private static final String strCALL_SOURCE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CALL_SOURCE' ORDER BY SORT_NO";
    private static final String strBANK_NAME = "SELECT BANK_SEQ_ID,BANK_NAME FROM FIN_APP.TPA_BANK_MASTER WHERE UPPER(BANK_NAME) IN ('CITIBANK','UTIBANK','HDFCBANK','ICICIBANK') AND OFFICE_TYPE='IHO'";
    private static final String strCHEQUE_TEMPLATE_ID = "SELECT CHEQUE_TEMPLATE_ID,TEMPLATE_NAME FROM fin_app.CHEQUE_TEMPLATE";
    private static final String strDAYCARE_PROCEDURES= "SELECT GRP_PROC_SEQ_ID,PROC_CODE FROM app.TPA_DAY_CARE_PROCEDURE";
    private static final String strVOUCHER_REQUIRED = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'VOUCHER_REQUIRED' AND GENERAL_TYPE_ID='DVN' ORDER BY SORT_NO";
    private static final String strNHCPLETTER_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'REJECTION_LETTER_TYPE' AND GENERAL_TYPE_ID='RLH' ORDER BY SORT_NO";
    private static final String strMRLETTER_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'REJECTION_LETTER_TYPE' AND GENERAL_TYPE_ID!='RLH' ORDER BY SORT_NO";
    private static final String strLIABILITY_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'LIABILITY_STATUS' ORDER BY SORT_NO";
    private static final String strPRODUCT_CHANGE_YN = "SELECT GENERAL_TYPE_ID, CASE WHEN UPPER(DESCRIPTION) LIKE '%YES%' THEN 'YES' ELSE 'NO' END DESCRIPTION  FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'RENEWAL_PRODUCT_CHANGE' ORDER BY SORT_NO";
    private static final String strDEBIT_ASSOICATE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DEBIT_ASSOCIATE' ORDER BY SORT_NO";
    private static final String strDEBIT_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DEBIT_TYPE' ORDER BY SORT_NO";
    private static final String strDEBIT_TYPE_DRAFT = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.tpa_general_code WHERE HEADER_TYPE = 'DEBIT_TYPE' AND GENERAL_TYPE_ID IN('DDT') ORDER BY SORT_NO";
    private static final String strDAYCARE_GROUP="SELECT DAY_CARE_GROUP_ID,GROUP_NAME  FROM app.TPA_DAYCARE_GROUP";
    private static final String strCURRENCY_GROUP="SELECT currency_id,currency_id as currency FROM app.tpa_currency_code ORDER BY currency_id = 'OMR' desc";
    private static final String strNETWORK_GROUP="SELECT EMPANEL_TYPE_ID,EMPANEL_DESCRIPTION  FROM app.TPA_HOSP_EMPANEL_TYPE_CODE ORDER BY SORT_NO";
    //private static final String strPROVIDER_NETWORK_GROUP="select GENERAL_TYPE_ID,DESCRIPTION FROM app.tpa_general_code where header_type = 'PROVIDER_NETWORK' ORDER BY SORT_NO";
    private static final String strPROVIDER_NETWORK_GROUP="SELECT thi.hosp_seq_id,thi.hosp_name||'['||thi.empanel_number||']' as hosp_details FROM app.tpa_hosp_info thi join app.tpa_hosp_address tha ON (thi.hosp_seq_id=tha.hosp_seq_id) join app.tpa_hosp_empanel_status thes on (tha.hosp_seq_id=thes.hosp_seq_id) join app.tpa_hosp_code thc on (thi.hosp_type_id=thc.hosp_type_id) where  thes.empanel_status_type_id='EMP'";
    private static final String strTREATMENT_TYPE_ALLOWED="select  tic.icd_code,tic.icd_description FROM app.tpa_icd_codes tic where tic.icd_code in ('N97.0','N97.1','N97.2','N97.8','N97.9')";    
    private static final String strDEDUCTIBLES_PUB_NETWORK="SELECT thi.hosp_seq_id,thi.hosp_name||'['||thi.empanel_number||']' as hosp_details FROM app.tpa_hosp_info thi WHERE thi.provider_sector_type='SGO'";
    private static final String strDEDUCTIBLES_PRI_NETWORK="SELECT thi.hosp_seq_id,thi.hosp_name||'['||thi.empanel_number||']' as hosp_details FROM app.tpa_hosp_info thi WHERE thi.provider_sector_type='SPR'";
    private static final String strPATIENT_GROUP="select general_type_id,description FROM app.tpa_general_code where header_type='CLM_TYPE' order by sort_no";
    private static final String strGOV_HOSPITAL_GROUP="SELECT thi.hosp_seq_id provider_type_id, '[' || thi.hosp_licenc_numb || '] ' || thi.hosp_name as provider_name  FROM app.tpa_hosp_info thi ORDER BY thi.hosp_name";
    private static final String strMATERNITY_GROUP="select tmg.mat_group_seq_id,tmg.maternity_group_name FROM app.tpa_maternity_groups tmg";
    private static final String strDRUGS_GROUP="select a.activity_code,a.activity_description||' - '||b.service_name as Description FROM app.TPA_ACTIVITY_MASTER_DETAILS a join app.tpa_service_details b on (a.service_seq_id=b.service_seq_id) where a.activity_type_seq_id =5";
    private static final String strSERVICES_LIST="select distinct a.master_activity_code as Activity_code,c.benefit_desc as description FROM app.tpa_activity_details a"+
                                                  " join app.tpa_activity_benefit_codes c on (a.benefit_seq_id=c.benefit_seq_id) where a.activity_type_id=6:: varchar";
                                                
    private static final String strDAY_CARE_LIST="select unique a.master_activity_code,c.benefit_desc FROM app.tpa_activity_details a"+
                                                 " join app.tpa_activity_benefit_codes c on (a.benefit_seq_id=c.benefit_seq_id) where a.activity_type_id=8 and a.master_activity_code='17.25'";
    
    private static final String strCHRONIC_CONDITION_LIST="select day_care_icd_group_id,group_name FROM app.tpa_daycare_icd_group where day_care_icd_group_id='ICD001' order by day_care_icd_group_id";
    private static final String strDIETICIAN_NEUTRICIAN_LIST="select unique a.master_activity_code,c.benefit_desc FROM app.tpa_activity_details a join app.tpa_activity_benefit_codes c on (a.benefit_seq_id=c.benefit_seq_id) "+
                                                       " where a.activity_type_id in (8,3) and a.master_activity_code='61.01'";
    private static final String strWOMEN_HORMONAL_LIST="select distinct tic.icd_code,tic.icd_description FROM app.tpa_icd_codes tic where tic.icd_code in ('N97.0','N97.1','N97.2','N97.8','N97.9')";	
    //added for KOC-1310
    private static final String strCANCER_ICD_LIST = "select icd_code,icd_code FROM app.tpa_cancer_icd_code order by cancer_code_id";
    private static final String strCANCER_GROUP = "SELECT DAY_CARE_GROUP_ID,GROUP_NAME  FROM app.TPA_DAYCARE_GROUP where DAY_CARE_GROUP_ID='GR0777'";
        
    
    private static final String strMONTH = "SELECT GENERAL_TYPE_ID, DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'MONTH'";
    private static final String strDISABILITY_TYPE = "SELECT GENERAL_TYPE_ID, DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DISABILITY_TYPE'";
    private static final String strDAYCARE_PRODUCT = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DAYCARE_PRODUCT' ORDER BY SORT_NO";
    private static final String strSYETM_OF_MEDICINE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SYSTEM_OF_MEDICINE' ORDER BY SORT_NO";
    private static final String strCLAIM_MEDICAL_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'AIL_CLAIM_TYPE' ORDER BY SORT_NO";
    private static final String strCASE_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'DEPARTMENT' AND GENERAL_TYPE_ID in('PRE','CLM') ORDER BY SORT_NO";
    private static final String strWEB_LOGIN_LINK_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'WEBLOGIN_LINK' ORDER BY SORT_NO";
    private static final String strWEB_LOGIN_LINK_REPORT = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'WEBLOGIN_LINK_REPORTS' ORDER BY SORT_NO";
    private static final String strWEB_LOGIN_HR_ADITION = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'WEBLOGIN_HR_ADDITION' ORDER BY SORT_NO";
    private static final String strWEB_LOGIN_EMP_ADDITION = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'WEBLOGIN_EMPLOYEE_ADDITION' ORDER BY SORT_NO";
    private static final String strWEB_LOGIN_DOI_SETTINGS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'WEBLOGIN_DOI_SETTINGS' ORDER BY SORT_NO";
    private static final String strWEB_LOGIN_SUM_SETTINGS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'WEBLOGIN_SUM_SETTINGS' ORDER BY SORT_NO";
    private static final String strWEB_LOGIN_CANCELLATION = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'WEBLOGIN_CANCELLATION' ORDER BY SORT_NO";
    private static final String strWEB_LOGIN_SOFTCOPY_UPLOAD = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'POLICY_UPLOAD' ORDER BY SORT_NO";
    private static final String strWEB_LOGIN_MEM_CONFIG_ADSL_Y = "SELECT A.GENERAL_TYPE_ID, A.DESCRIPTION FROM app.TPA_GENERAL_CODE A WHERE A.HEADER_TYPE = 'WEBLOGIN_MEM_CONFIG'";
    private static final String strWEB_LOGIN_MEM_CONFIG_ADSL_N ="SELECT A.GENERAL_TYPE_ID, A.DESCRIPTION FROM app.TPA_GENERAL_CODE A WHERE A.HEADER_TYPE = 'WEBLOGIN_MEM_CONFIG' AND A.GENERAL_TYPE_ID != 'MCE'";
    private static final String strWEB_LOGIN_SEND_MAIL_GEN_TYPE_ID="SELECT A.GENERAL_TYPE_ID,A.DESCRIPTION FROM app.TPA_GENERAL_CODE A WHERE A.HEADER_TYPE = 'WEBLOGIN_MAIL_CONFIG' ORDER BY A.SORT_NO";
    private static final String strWEB_LOGIN_MAIL_CONTENT="SELECT a.general_type_id,a.description FROM app.tpa_general_code a WHERE a.header_type = 'SUM_INSURED_IN_MAIL' ORDER BY a.sort_no";
    private static final String strEmployeeStatus = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'TPA_POLICY_STATUS' AND GENERAL_TYPE_ID in('POA','POC') ORDER BY SORT_NO";
    private static final String strEMP_PWD_GENERATION = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'EMP_PWD_GENERATION' ORDER BY SORT_NO";
    private static final String strREL_WINDOW_PERIOD = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'REL_WINDOW_PERIOD' ORDER BY SORT_NO";
    private static final String strINTIMATION_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'INTIMATION_STATUS' AND GENERAL_TYPE_ID!='PIY' ORDER BY SORT_NO";
    private static final String strINTIMATION_ACCESS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'INTIMATION_ACCESS' ORDER BY GENERAL_TYPE_ID DESC";
    private static final String strCASH_BENEFIT = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CASH_BENEFIT' ORDER BY SORT_NO";
    
    //added for KOC-1273
    private static final String strCRITICAL_GROUPS = "select critical_group_id,group_name FROM app.tpa_critical_group";
    
    private static final String strCASE_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CASE_STATUS' ORDER BY SORT_NO";
    private static final String strSINCE_WHEN_CODING = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SINCE_WHEN' AND GENERAL_TYPE_ID NOT IN('S45') ORDER BY SORT_NO";
    private static final String strSINCE_WHEN_CALLCENTER = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SINCE_WHEN' AND GENERAL_TYPE_ID NOT IN('S15') ORDER BY SORT_NO";
    private static final String strCLAIMS_PENDING ="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'CLAIMS_PENDING' ORDER BY SORT_NO";
    private static final String strIOB_SELECT_BATCH ="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SELECT_BATCH_IOB' ORDER BY SORT_NO";
    private static final String strNOTIFICATION_ACCESS ="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'NOTIFICATION_ACCESS' ORDER BY DESCRIPTION DESC";
    private static final String strONLINE_ASS_REQ_RELATED = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ONLINE_QUERY' ORDER BY SORT_NO";
    private static final String strONLINE_ASSISTANCE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ONLINE_ASSISTANCE' ORDER BY SORT_NO";
    private static final String strSURGERY_TYPE="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SURGERY_TYPE' ORDER BY SORT_NO";
    private static final String strONLINE_RATING="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ONLINE_RATING' ORDER BY SORT_NO DESC";
    private static final String strONLINE_FEEDBACK_TYPE="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ONLINE_FEEDBACK_TYPE' ORDER BY SORT_NO";
    private static final String strONLINE_FEEDBACK_STATUS="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ONLINE_FEEDBACK_STATUS' ORDER BY SORT_NO";
    private static final String strONLINE_FEEDBACK_RESPONSE="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ONLINE_FEEDBACK_RESPONSE' ORDER BY SORT_NO";
    private static final String strONLINEASSIST_FEEDBACK_TYPE="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ONLINE_FEEDBACK_TYPE' AND GENERAL_TYPE_ID NOT IN('OFE') ORDER BY SORT_NO";
    private static final String strRELATIONSHIP_COMBINATION ="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'RELATIONSHIP_COMBINATION' ORDER BY SORT_NO";
    private static final String strSURGERY_TYPE_MANDATORYYN="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SURGERY_TYPE_MANDATORY' ORDER BY SORT_NO DESC";
    private static final String strPRODUCT_NETWORK_TYPES="select a.general_type_id,a.description  FROM app.tpa_general_code a where a.header_type='PROVIDER_NETWORK' order by a.sort_no";
    private static final String strTDS_BATCH_QUARTER="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'TDS_BATCH_QUARTER' ORDER BY SORT_NO";
    private static final String strMATERNITY_TYPE="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'MATERNITY TYPE' ORDER BY SORT_NO";
    //Fax status report cache
    private static final String strFax_Status = "SELECT GENERAL_TYPE_ID, DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'MESSAGE_STATUS' ORDER BY SORT_NO";
    private static final String strFax_Gen_Users = "SELECT GENERAL_TYPE_ID, DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'FAX_GENERATED_USER' ORDER BY SORT_NO DESC";

    //Adding Notification cache in Empanelment Group registration --15/05/2008
    private static final String strNOTIFICATION_INFO = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'NOTIFICATION_INFO' ORDER BY SORT_NO";

    //Adding cache for Customer care view log history --25/09/2008
    private static final String strLOG_HISTORY = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'LOG_HISTORY' ORDER BY SORT_NO";

//  Adding cache for Online Assistance status --27/10/2008
    private static final String strSUPPORT_ONLINE_QUERY = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SUPPORT_ONLINE_QUERY' ORDER BY SORT_NO";

    //Adding cache for TDS Hostpital Status, Category-- 27/07/2009
    private static final String strHOSP_OWNER_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'HOSP_OWNER_TYPE' ORDER BY SORT_NO";
    private static final String strTDS_HOSP_CATEGORY = "SELECT TDS_SUBCAT_TYPE_ID,TDS_SUBCAT_NAME FROM app.TDS_HOSP_SUB_CATEGORY";

    //Adding cache for TDS Remittance Status -- 07/08/2009
    private static final String strTDS_REMIT_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'TDS_REMITTANCE_STATUS' ORDER BY SORT_NO";

    //Adding cache for TDS Insurance Company DropDown
    private static final String strTDS_INS_INFO = "SELECT ABBREVATION_CODE,ORIGINAL_NAME FROM app.TPA_INS_INFO_MAPPING ORDER BY ORIGINAL_NAME";
    private static final String strTDS_ACK_INFO = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'ACKN_QUARTER' ORDER BY SORT_NO";

    //Adding cache for TDS claims under TDS Configuration -- 22/02/2010
    private static final String strINCLUDE_EXCLUDE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'INCLUDE_EXCLUDE' ORDER BY SORT_NO";

    //Added for IBM......koc-1216
	private static final String strWEB_OPT_SETTINGS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'WEBLOGIN_SUM_SETTINGS' ORDER BY SORT_NO"; // added by praveen
    private static final String strMaternityICDGroup = "SELECT ICD_CODE,DESCRIPTION FROM app.MATERNITY_TEMP ORDER BY ICD_CODE";
	//added for koc 1278
    private static final String strAILMENT_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'AILMENT_TYPE' ORDER BY SORT_NO";
	//added for koc 1278
	//physiotherapy cr 1320
	private static final String strPHYSIO_MSG_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE A WHERE HEADER_TYPE = 'TPA_PHYSIO_STATUS' ORDER BY A.SORT_NO"; // added by thirumalai	
	//physiotherapy cr 1320

    //added for koc 1349
    private static final String strWellness_ACCESS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'WEBLOGIN_ASSISTANCE' ORDER BY GENERAL_TYPE_ID DESC";
	//added for koc 1349
    //Ended...
   // koc1179
    private static final String strCLAIM_SHORTFALL_STATUS ="select tg.general_type_id,tg.description FROM app.tpa_general_code tg where tg.header_type='SHORTFALL_REQUEST_TYPE' AND tg.sort_no='1630'";
	//Shortfall CR KOC1179
    private static final String strCLAIM_SHORTFALL_TYPE_NEW = "SELECT a.GENERAL_TYPE_ID,a.DESCRIPTION FROM app.TPA_GENERAL_CODE a WHERE a.HEADER_TYPE='SHORTFALL_TYPE' AND a.GENERAL_TYPE_ID='ADS'";
    private static final String strCLAIM_SHORTFALL_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SHORTFALL_TYPE' ORDER BY SORT_NO";
    //Shortfall CR KOC1179
    private static final String strCLAIM_SHORTFALL_TEMPLATE_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SHORTFALL_TEMPLATE_TYPE' ORDER BY SORT_NO";
   // Shortfall CR KOC1179
  //shortfall phase1   
    private static final String strCLAIM_SHORTFALL_TEMPLATE_NETWORK_TYPE = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'SHORTFALL_TEMPLATE_TYPE' and GENERAL_TYPE_ID in ('DSCL','DSCS','DSFO') ORDER BY SORT_NO";   
  //shortfall phase1
  //private static final String strCLAIM_SHORTFALL_UNDER_CLAUSE = "SELECT E.CLAUSE_SEQ_ID,E.CLAUSE_NUMBER FROM app.CLM_GENERAL_DETAILS A JOIN APP.CLM_ENROLL_DETAILS B ON(A.CLAIM_SEQ_ID=B.CLAIM_SEQ_ID) LEFT OUTER JOIN APP.TPA_ENR_POLICY  C ON(B.POLICY_SEQ_ID=C.POLICY_SEQ_ID) LEFT OUTER JOIN APP.TPA_INS_PROD_POLICY  D ON((C.POLICY_SEQ_ID=D.POLICY_SEQ_ID AND C.ENROL_TYPE_ID='COR') OR (C.PRODUCT_SEQ_ID = D.PRODUCT_SEQ_ID AND C.ENROL_TYPE_ID!='COR')) LEFT OUTER JOIN APP.TPA_PROD_POLICY_CLAUSES E ON (D.PROD_POLICY_SEQ_ID=E.PROD_POLICY_SEQ_ID) WHERE E.ACTIVE_YN='Y' AND E.CLAUSE_YN='Y' AND A.CLAIM_SEQ_ID=?";
  //  changed according to  request for cr modification
  // By Ibrahim  private static final String strCLAIM_SHORTFALL_UNDER_CLAUSE = "SELECT E.CLAUSE_SEQ_ID,(E.CLAUSE_NUMBER||'-'||F.DESCRIPTION) AS CLAUSE_NUMBER FROM app.CLM_GENERAL_DETAILS A JOIN APP.CLM_ENROLL_DETAILS B ON(A.CLAIM_SEQ_ID=B.CLAIM_SEQ_ID) LEFT OUTER JOIN APP.TPA_ENR_POLICY  C ON(B.POLICY_SEQ_ID=C.POLICY_SEQ_ID) LEFT OUTER JOIN APP.TPA_INS_PROD_POLICY  D ON((C.POLICY_SEQ_ID=D.POLICY_SEQ_ID AND C.ENROL_TYPE_ID='COR') OR (C.PRODUCT_SEQ_ID = D.PRODUCT_SEQ_ID AND C.ENROL_TYPE_ID!='COR')) LEFT OUTER JOIN APP.TPA_PROD_POLICY_CLAUSES E ON (D.PROD_POLICY_SEQ_ID=E.PROD_POLICY_SEQ_ID) LEFT OUTER JOIN APP.TPA_GENERAL_CODE  F ON(e.clause_sub_type=f.general_type_id) WHERE E.ACTIVE_YN='Y' AND E.CLAUSE_YN='Y' AND E.CLAUSE_TYPE='SRT' AND A.CLAIM_SEQ_ID=?";
    //  private static final String strCLAIM_SHORTFALL_UNDER_CLAUSE="SELECT E.CLAUSE_SEQ_ID,(E.CLAUSE_NUMBER||'-'||F.DESCRIPTION) AS CLAUSE_NUMBER FROM app.CLM_GENERAL_DETAILS A JOIN APP.CLM_ENROLL_DETAILS B ON(A.CLAIM_SEQ_ID=B.CLAIM_SEQ_ID) LEFT OUTER JOIN APP.TPA_ENR_POLICY  C ON(B.POLICY_SEQ_ID=C.POLICY_SEQ_ID) LEFT OUTER JOIN APP.TPA_INS_PROD_POLICY  D ON((C.POLICY_SEQ_ID=D.POLICY_SEQ_ID AND C.ENROL_TYPE_ID='COR') OR (C.PRODUCT_SEQ_ID = D.PRODUCT_SEQ_ID AND C.ENROL_TYPE_ID!='COR')) LEFT OUTER JOIN APP.TPA_PROD_POLICY_CLAUSES E ON (D.PROD_POLICY_SEQ_ID=E.PROD_POLICY_SEQ_ID) LEFT OUTER JOIN APP.TPA_GENERAL_CODE  F ON(e.clause_sub_type=f.general_type_id) WHERE E.ACTIVE_YN='Y' AND E.CLAUSE_YN='Y' AND E.CLAUSE_TYPE='SRT' AND A.CLAIM_SEQ_ID=? order by F.DESCRIPTION";//By Manjusir
    private static final String strCLAIM_SHORTFALL_UNDER_CLAUSE="SELECT E.CLAUSE_SEQ_ID,(E.CLAUSE_NUMBER || '-' || F.DESCRIPTION) AS CLAUSE_NUMBER,e.PROD_POLICY_SEQ_ID,b.POLICY_SEQ_ID FROM app.CLM_GENERAL_DETAILS A  JOIN APP.CLM_ENROLL_DETAILS B ON (A.CLAIM_SEQ_ID = B.CLAIM_SEQ_ID) LEFT OUTER JOIN APP.TPA_ENR_POLICY C ON (B.POLICY_SEQ_ID = C.POLICY_SEQ_ID) LEFT OUTER JOIN APP.TPA_INS_PROD_POLICY D ON (((C.POLICY_SEQ_ID = D.POLICY_SEQ_ID AND C.ENROL_TYPE_ID = 'COR' AND ADMINISTRATION_PKG.prod_policy_clauses_exist(C.POLICY_SEQ_ID,'POL')>0) or ( C.ENROL_TYPE_ID = 'COR' AND C.PRODUCT_SEQ_ID = D.PRODUCT_SEQ_ID and ADMINISTRATION_PKG.prod_policy_clauses_exist(D.PROD_POLICY_SEQ_ID,'PROD')>0 AND ADMINISTRATION_PKG.prod_policy_clauses_exist(C.POLICY_SEQ_ID,'POL')<1  )) OR (C.PRODUCT_SEQ_ID = D.PRODUCT_SEQ_ID AND C.ENROL_TYPE_ID != 'COR')) LEFT OUTER JOIN APP.TPA_PROD_POLICY_CLAUSES E ON (D.PROD_POLICY_SEQ_ID = E.PROD_POLICY_SEQ_ID) LEFT OUTER JOIN APP.TPA_GENERAL_CODE F ON (e.clause_sub_type = f.general_type_id) WHERE E.ACTIVE_YN = 'Y' AND E.CLAUSE_YN = 'Y' AND E.CLAUSE_TYPE = 'SRT' AND A.CLAIM_SEQ_ID=? order by F.DESCRIPTION";//by ram on 2 sep 2013    //Ended...
   
    private static final String strdesignation_BRO		=	"SELECT DESIGNATION_TYPE_ID, DESIGNATION_DESCRIPTION FROM app.TPA_DESIGNATION_CODE WHERE HEADER_TYPE = 'TTK' ORDER BY SORT_NO";
   //AK
    private static final String struserRole_BRO	=" SELECT A.ROLE_SEQ_ID,A.ROLE_NAME  FROM app. TPA_ROLES_CODE A where A.USER_GENERAL_TYPE_ID = 'BRO'";
    
    //private static final String strConnection ="Connection";
    
    //added for 2koc
    //added for bajaj enhan
   //private static final String strrem_Type = "SELECT A.GENERAL_TYPE_ID,A.DESCRIPTION FROM app.TPA_GENERAL_CODE A WHERE A.HEADER_TYPE LIKE 'DURATION_TYPE' AND A.GENERAL_TYPE_ID!='DTY' ORDER BY A.SORT_NO";
  
    private static final String strrem_Type 			= "SELECT A.GENERAL_TYPE_ID,A.DESCRIPTION FROM app.TPA_GENERAL_CODE A WHERE HEADER_TYPE='ESCALATION_DURATION_TYPE' ORDER BY A.SORT_NO";
    private static final String strrson_Type 			= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='INS_INT_RSON_TYPE' ORDER BY SORT_NO";
   //added for bajaj enhan
   
   private static final String strCOURIERDSP_STATUS 	= "SELECT T.GENERAL_TYPE_ID,T.DESCRIPTION FROM app.TPA_GENERAL_CODE T WHERE T.HEADER_TYPE='DISPATCH_STATUS'"; 
   private static final String strIMMUNE_TYPE 			= "SELECT VC.IMMUNIZATION_TYPE_ID,VC.IMMUNIZATION_DESCRIPTION FROM app.CHILD_VACCINATION_CODE VC ORDER BY VC.SORT_NO";//added for koc 1315
   private static final String strWELLCHILD_TYPE 		= "SELECT T.WELL_CHILD_TEST_TYPE_ID,T.WELL_CHILD_TEST_DESCRIPTION FROM app.WELL_CHILD_TESTS T ORDER BY T.SORT_NO";//added for koc 1316
   private static final String strROUTADULT_TYPE 		= "SELECT R.ROUT_ADULT_VACC_TYPE_ID,R.ROUT_ADULT_VACC_DESCRIPTION FROM app.ROUT_ADULT_VACCINATION_CODE R ORDER BY R.SORT_NO";//added for koc 1308 
   private static final String STR_INSAPPROVAL_STATUS 	= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='INSURER_RECOMMEND_STATUS' ORDER BY SORT_NO";
   private static final String STR_LEVELS_LIST 			= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='LEVEL_TYPE' ORDER BY SORT_NO";//added for hyundai buffer
   private static final String STR_SUP_CLAIM_TYPE 		= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='BUFFER_CLAIM_TYPE' ORDER BY SORT_NO";//added for hyundai buffer
   private static final String STR_SUP_BUFFER_TYPE 		= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='BUFFER_TYPE' ORDER BY SORT_NO";//added for hyundai buffer
   private static final String STR_BufferTypeList 		= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='BUFFER_LEVEL_TYPE' ORDER BY SORT_NO";//added for hyundai buffer
   private static final String STR_NormalBufferTypeList = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE A WHERE A.HEADER_TYPE='BUFFER_TYPE' AND SORT_NO NOT IN( 30)";
   private static final String STR_ProviderList = "SELECT I.HOSP_LICENC_NUMB AS PROVIDER_ID,I.HOSP_NAME AS PROVIDER_NAME FROM app.TPA_HOSP_INFO I JOIN APP.TPA_HOSP_EMPANEL_STATUS S ON (I.HOSP_SEQ_ID=S.HOSP_SEQ_ID) WHERE S.EMPANEL_STATUS_TYPE_ID='EMP' ORDER BY I.HOSP_NAME";

   private static final String STR_CorporateList = "SELECT R.GROUP_ID,R.GROUP_NAME FROM app.TPA_GROUP_REGISTRATION R";

   private static final String STR_MemberClaimFromList= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE  WHERE HEADER_TYPE='CLAIM_FROM' ORDER BY SORT_NO";
   private static final String STR_ServiceTypes = "SELECT S.SERVICE_SEQ_ID,S.SERVICE_NAME FROM app.TPA_SERVICE_DETAILS S ORDER BY S.SERVICE_SEQ_ID";
   private static final String STR_ActivityTypes = "SELECT C.ACTIVITY_TYPE_ID,C.ACTIVITY_TYPE_CODE FROM app.TPA_ACTIVITY_TYPE_CODES C ORDER BY C.ACTIVITY_TYPE_ID";
   private static final String STR_ClaimsSubmissionTypesList = "SELECT GC.GENERAL_TYPE_ID,CASE WHEN GC.GENERAL_TYPE_ID='DTC' THEN 'Claim Submission' WHEN GC.GENERAL_TYPE_ID='DTR' THEN 'Claim Re-Submission' END AS DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE ='DOCUMENT_TYPE' ORDER BY GC.SORT_NO";
   private static final String str_AuthorizationTypeList = "SELECT C.GENERAL_TYPE_ID,CASE WHEN C.GENERAL_TYPE_ID='PRE' THEN 'Pre_authorization' ELSE C.DESCRIPTION END AS DESCRIPTION FROM app.TPA_GENERAL_CODE C WHERE C.GENERAL_TYPE_ID IN ('PRE','CLM')";
   private static final String str_PreauthStatusList="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PREAUTH_STATUS'";
   private static final String str_SystemOfMedicines="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='SYSTEM_OF_MEDICINE' ORDER BY SORT_NO";
   private static final String str_AccidentRelatedCases="SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='AIL_CLAIM_TYPE' ORDER BY GC.SORT_NO";

   private static final String str_BenefitTypes="SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='BENIFIT_TYPE' and GC.GENERAL_TYPE_ID in('DNTL','OPTS','OPTC','MTI','IPT','PED','HEAC','COC','AYH') ORDER BY GC.SORT_NO";//"SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='BENIFIT_TYPE' ORDER BY GC.SORT_NO";
   private static final String str_PenefitTypes="select general_type_id ,description from app.tpa_general_code where header_type='BENIFIT_TYPE' and general_type_id in ('GEN1','PHY1','PEC1','MTI','DNTL','OPTC' ) ORDER BY DESCRIPTION ASC";
   private static final String str_BenefitTypesCallcenter="SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='BENIFIT_TYPE' and GC.GENERAL_TYPE_ID!='HEAC' UNION SELECT DISTINCT case clause_id when 'cls.15' then 'CHRO' else 'PED' end  GENERAL_TYPE_ID, CLAUSE_NAME FROM app.TPA_INS_PROD_POL_CLAUSES where CLAUSE_ID in ('cls.15','cls.16') ORDER BY 1";
   private static final String str_DenialDescriptionsList="SELECT DENIAL_CODE,DENIAL_DESCRIPTION FROM app.TPA_DENIAL_CODES ORDER BY DENIAL_CODE";
   private static final String str_OutPatientEncounterTypes="SELECT C.ENCOUNTER_SEQ_ID,DECODE(GC.DESCRIPTION,NULL,C.DESCRIPTION,'('||GC.DESCRIPTION||')'||C.DESCRIPTION) AS DESCRIPTION  FROM app.TPA_ENCOUNTER_TYPE_CODES C LEFT OUTER join app.TPA_GENERAL_CODE GC ON (C.CATEGORY_TYPE=GC.GENERAL_TYPE_ID) WHERE C.BENEFIT_GEN_TYPE_ID = 'OPTS'";
   private static final String str_ModifiersList="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE  WHERE HEADER_TYPE='MODIFIER_TYPE'";
   private static final String str_UnitTypesList="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE  WHERE HEADER_TYPE='UNIT_TYPE'";
   private static final String str_TariffTypesList="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='POLICY_TARIFF_TYPE' ORDER BY SORT_NO";
   private static final String str_ObservationTypesList="SELECT S.OBSERVATION_TYPE_ID,S.OBSERVATION_DESC FROM app.TPA_OBSERVATION_TYPE_CODES S ORDER BY S.SORT_NO";
   private static final String str_ObservationCodesList="SELECT OBSERVATION_SEQ_ID, OBSERVATION_DESC  FROM app.TPA_OBSERVATION_CODES  WHERE HEADER_TYPE_ID = 'OBSERVATION_CODE'";
   private static final String str_ObservationValueTypesList="SELECT OBSERVATION_SEQ_ID, OBSERVATION_DESC  FROM app.TPA_OBSERVATION_CODES  WHERE HEADER_TYPE_ID = 'OBSERVATION_VALUE_TYPE'";
   
 //projectX
   private static final String strREGISTER_AUTHORITY 	= "SELECT D.GENERAL_TYPE_ID,D.DESCRIPTION FROM app.TPA_GENERAL_CODE  D WHERE D.HEADER_TYPE ='AUTHORITY_TYPE' and general_type_id in('CMA')ORDER BY D.SORT_NO"; 
   private static final String strPROVIDER_TYPE 		= "SELECT PROVIDER_TYPE_ID,PROVIDER_NAME FROM app.DHA_PROVIDER_TYPE ORDER BY SORT_NO";
   private static final String strPRIMARY_NETWORK 		= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='PROVIDER_NETWORK' and description in ('A+','GN','Gold','A','RN','Silver','B','RN2','Green','R3') ORDER BY SORT_NO";
   private static final String strDESCRIPTION_CODES 	= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='HOSPDOCS_TYPE' ORDER BY SORT_NO";
   private static final String strCONSULTATION_CODES 	= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='CONSULTATION_TYPE' ORDER BY SORT_NO";
   private static final String strNATIONALITY_CODES 	= "SELECT NATIONALITY_ID,DESCRIPTION AS COUNTRY FROM app.TPA_NATIONALITIES_CODE ORDER BY COUNTRY";
   private static final String strPROVIDER_GROUP	 	= "select gc.general_type_id,gc.description FROM app.tpa_general_code gc where gc.header_type='PROVIDER_GROUPS' order by gc.sort_no";
   //private static final String strGROUPPROVIDER_LIST	= "SELECT P.PROVIDER_ID AS PROVIDER_ID,(P.PROVIDER_NAME||' :'||P.PROVIDER_ID) AS PROVIDER_NAME FROM app.DHA_PROVIDERS_MASTER P  ORDER BY P.PROVIDER_NAME";
   private static final String strGROUPPROVIDER_LIST	= "select hgi.hosp_group_seq_id,hgi.group_name FROM app.Hosp_group_info hgi";
   private static final String strSECTOR_TYPE	 		= "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE ='SECTOR_TYPE' ORDER BY GC.SORT_NO";
   private static final String strBENIFIT_TYPE	 		= "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='BENIFIT_TYPE' ORDER BY GC.SORT_NO";
   private static final String strSPECIALITY_TYPE 		= "SELECT M.SPECIALTY_ID,M.SPECIALTY FROM app.DHA_CLNSN_SPECIALTIES_MASTER M ORDER BY M.SPECIALTY_ID";
   private static final String strMODE_TYPE		 		= "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='PAT_SOURCE' ORDER BY GC.SORT_NO";
   //private static final String strPAYER_CODE	 		= "SELECT I.INS_COMP_CODE_NUMBER, I.INS_COMP_NAME FROM app.TPA_INS_INFO I WHERE I.INS_COMP_CODE_NUMBER = 'TPA033' UNION ALL SELECT I.INS_COMP_CODE_NUMBER, I.INS_COMP_NAME FROM app.TPA_INS_INFO I WHERE I.INS_COMP_CODE_NUMBER != 'TPA033' and ins_Seq_id in (16423,16960,16940) ORDER BY INS_COMP_NAME";
   private static final String strPAYER_CODE	 		= "SELECT I.INS_COMP_CODE_NUMBER, I.INS_COMP_NAME FROM app.TPA_INS_INFO I WHERE I.INS_COMP_CODE_NUMBER = 'TPA033' UNION ALL SELECT I.INS_COMP_CODE_NUMBER, I.INS_COMP_NAME FROM app.TPA_INS_INFO I WHERE I.INS_COMP_CODE_NUMBER != 'TPA033' and i.active_yn='Y' ORDER BY INS_COMP_NAME";
   private static final String strPROVIDER_CODE	 		= "SELECT HI.HOSP_LICENC_NUMB,HI.HOSP_NAME FROM app.TPA_HOSP_INFO HI JOIN APP.TPA_HOSP_EMPANEL_STATUS ES ON (HI.HOSP_SEQ_ID=ES.HOSP_SEQ_ID) ORDER BY HI.HOSP_LICENC_NUMB";//WHERE ES.EMPANEL_STATUS_TYPE_ID='EMP'
   private static final String strNETWORK_TYPE	 		= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='PROVIDER_NETWORK' and description in ('A+','GN','Gold','A','RN','Silver','B','RN2','Green','RN3') ORDER BY SORT_NO";
   private static final String strCORPORATES	 		= "SELECT GR.GROUP_ID,GR.GROUP_NAME FROM app.TPA_GROUP_REGISTRATION GR ORDER BY GR.GROUP_NAME";
   private static final String strPAYERSEARCH_CODE	 	= "SELECT I.INS_SEQ_ID,I.INS_COMP_NAME FROM app.TPA_INS_INFO I ORDER BY I.INS_COMP_NAME";
   private static final String strPROVIDERSEARCH_CODE	= "SELECT HI.HOSP_SEQ_ID,HI.HOSP_NAME FROM app.TPA_HOSP_INFO HI JOIN APP.TPA_HOSP_EMPANEL_STATUS ES ON (HI.HOSP_SEQ_ID=ES.HOSP_SEQ_ID) ORDER BY HI.HOSP_LICENC_NUMB";//WHERE ES.EMPANEL_STATUS_TYPE_ID='EMP' 
   private static final String strNETWORKSEARCH_TYPE	= "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='PROVIDER_NETWORK' ORDER BY GC.SORT_NO";
   private static final String strCORPORATESSEARCH 		= "SELECT GR.GROUP_REG_SEQ_ID,GR.GROUP_NAME FROM app.TPA_GROUP_REGISTRATION GR ORDER BY GR.GROUP_ID";
   private static final String strSERVICENAME	 		= "SELECT D.SERVICE_SEQ_ID,D.SERVICE_NAME FROM app.TPA_SERVICE_DETAILS D ORDER BY D.SORT_NO";
   private static final String strProfessionalsNames	= "select m.clinitian_id as profession_id,m.professional_name,m.clini_standard as standard, m.start_date,m.end_date FROM app.dha_clinicians_list_master m order by m.professional_name";
   //private static final String strNETWIRKTYPEFOR_TARIFF	= "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='PROVIDER_NETWORK' AND GC.SORT_NO >= (SELECT GC.SORT_NO FROM app.TPA_GENERAL_CODE GC JOIN APP.TPA_HOSP_INFO HP ON GC.GENERAL_TYPE_ID=HP.PRIMARY_NETWORK WHERE GC.HEADER_TYPE='PROVIDER_NETWORK' AND HP.HOSP_LICENC_NUMB = ?)";
   //private static final String strNETWIRKTYPEFOR_TARIFF	= "{CALL HOSPITAL_EMPANEL_PKG.TARIFF_NETWORK_TYPE(?,?)}";
   private static final String strNETWIRKTYPEFOR_TARIFF	= "{CALL HOSPITAL_EMPANEL_PKG_TARIFF_NETWORK_TYPE(?,?)}";
   private static final String strINS="SELECT INS_COMP_CODE_NUMBER,INS_COMP_NAME,INS_SEQ_ID FROM app.TPA_INS_INFO WHERE INS_OFFICE_GENERAL_TYPE_ID = 'IHO' and PAYER_AUTHORITY = ?  ORDER BY INS_COMP_NAME";
   private static final String strPROVIDERCODEADMINTARIFF	= "SELECT HI.HOSP_LICENC_NUMB,HI.HOSP_NAME FROM app.TPA_HOSP_INFO HI JOIN APP.TPA_HOSP_EMPANEL_STATUS ES ON (HI.HOSP_SEQ_ID=ES.HOSP_SEQ_ID) WHERE HI.HOSP_CATAGORY=? ORDER BY HI.HOSP_LICENC_NUMB";//FOR GROUP AND INDIVIDUAL PROVIDERS
   private static final String strProviderNames			= "SELECT HI.HOSP_SEQ_ID,HI.HOSP_NAME FROM app.TPA_HOSP_INFO HI JOIN APP.TPA_HOSP_EMPANEL_STATUS ES ON (HI.HOSP_SEQ_ID=ES.HOSP_SEQ_ID) WHERE ES.EMPANEL_STATUS_TYPE_ID='EMP' ORDER BY HI.HOSP_LICENC_NUMB"; 
   private static final String strHaadGroup				= "SELECT CATEGORY_TYPE_SEQ_ID ID,ACTIVITY_TYPE as NAME FROM app.TPA_HAAD_CATEGORY_TYPE"; 
   private static final String strHaadfactor				= "SELECT ID,COLUMN_NAME FROM app.HAAD_GENERL_CODE ORDER BY ID";
   private static final String strSpeciality				= "SELECT REF_SPE_SEQ_ID,SPECIALIST_NAME FROM app.TPA_REFERRAL_SPECIALISTS";
   
   private static final String strMaternityEncounters	= "SELECT C.ENCOUNTER_SEQ_ID,case when GC.DESCRIPTION is NULL then C.DESCRIPTION else '('||GC.DESCRIPTION||')'||C.DESCRIPTION  end AS DESCRIPTION FROM app.TPA_ENCOUNTER_TYPE_CODES C LEFT OUTER join app.TPA_GENERAL_CODE GC ON (C.CATEGORY_TYPE=GC.GENERAL_TYPE_ID) WHERE C.CATEGORY_TYPE IN ('OUTP','INPN')";
   private static final String strActivityServiceTypes	= "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='SERVICE_TYPE' ORDER BY GC.SORT_NO";
   private static final String strActivityServiceCodes	= "SELECT SERVICE_CODE,SERVICE_DESCREPTION FROM app.TPA_IP_SERVICE_DETAILS";
   private static final String strGroupCountry	= "select y.id,y.val FROM app.intx.tpa_grp_master_codes y where y.grp='Country_distribution'";
   private static final String strEthnicProfile	= "select eth_typ_id,ethinisity_name FROM app.TPA_ETHINICITY_CODE";
   private static final String strGroupCurrency	= "SELECT M.ID,M.CURR_NAME FROM app.TPA_CURRENCY_MASTER M ORDER BY M.SORT_ORDER";
   private static final String strNoOfEmployees	= "select no_of_emp_id,no_of_emp_desc FROM app.TPA_NO_OF_EMP";
   private static final String strAverageAgeEmployees	= "select avg_age_seq_id,avg_age FROM app.intx.TPA_EMP_AVG_AGE";
   private static final String strEmployeeGenderBreak	= "select gen_brk_mastr_id,gen_brk_mastr_desc FROM app.GEN_BRK_MASTR";
   private static final String strGlobalCoverge	= "SELECT GLOB_COVG_ID,GLOB_DESC FROM app.TPA_GLOB_COVG G ORDER BY G.GLOB_COVG_ID";
   private static final String strFamilyCoverage	= "select fmly_covg_type_id,family_cogerage FROM app.TPA_FMLY_COVG";
   private static final String strProvDocsType			= "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE='PROVHOSPDOCS_TYPE' ORDER BY SORT_NO";
   
   private static final String strNameOfInsurer	= "SELECT C.ID,C.VAL,C.GRP FROM app.TPA_GRP_MASTER_CODES C WHERE C.GRP = 'INSURER_NAME'";
   private static final String strNameOfTPA	= "SELECT C.ID,C.VAL,C.GRP FROM app.TPA_GRP_MASTER_CODES C WHERE C.GRP = 'TPA_NAME'";
   private static final String strEligibility	= "SELECT C.ID,C.VAL,C.GRP FROM app.TPA_GRP_MASTER_CODES C WHERE C.GRP = 'ELIGIBILITY_DESC'";
   private static final String strPlanName	= "SELECT C.ID,C.VAL,C.GRP FROM app.TPA_GRP_MASTER_CODES C WHERE C.GRP = 'PLAN_NAME'";
   private static final String strAreaOfCover	= "SELECT C.ID,C.VAL,C.GRP FROM app.TPA_GRP_MASTER_CODES C WHERE C.GRP = 'AREA_COVERAGE'";
   private static final String strSystemOfMedicineGroup	= "SELECT GM.ID,GM.VAL FROM app.TPA_GRP_MASTER_CODES GM WHERE GM.GRP='ALTERNET_MEDICINE'";

   private static final String strROOM_TYPE_INPATIENT	= "SELECT T.ROOM_TYPE_ID,T.R_TYPE FROM app.ROOM_TYPE T";
   private static final String strOUTPATIENTCOVERAGE	= "SELECT T.ID,T.VAL FROM app.TPA_GRP_MASTER_CODES T WHERE GRP='GRP_OP_COVERAGE'";
   private static final String strCapitationCategory	= "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='POL_BENIFIT_TYPE' ";
   private static final String strCountryCodeList ="select jk.currency_id,jk.currency_id FROM app.tpa_country_code hj join app.tpa_currency_code jk on (hj.country_id=jk.country_id) where jk.currency_id='OMR' union all select jk.currency_id,jk.currency_id FROM app.tpa_country_code hj join app.tpa_currency_code jk on (hj.country_id=jk.country_id) where jk.currency_id<>'OMR'";//select jk.currency_id,jk.currency_id FROM app.tpa_country_code hj join app.tpa_currency_code jk on (hj.country_id=jk.country_id)";
   private static final String strInsCompanyList="select ins_comp_code_number,ins_comp_name FROM app.tpa_ins_info ORDER BY ins_comp_name";
   private static final String strPREAUTH_CATEGORY="SELECT 'Recheck required','Recheck required' union SELECT 'Not checked','Not checked' union SELECT 'Checked','Checked'";
   

   private static final String strDataType="select distinct COALESCE(mig_yn,'N') as data_flag,case when mig_yn is null then 'System Data' ELSE 'Migrated Data'  end as data_type FROM app.clm_authorization_details";
   private static final String strProductList="select product_seq_id,product_name FROM app.tpa_ins_product order by product_name";
   private static final String strCorporateList="SELECT R.GROUP_ID,R.GROUP_NAME FROM app.TPA_GROUP_REGISTRATION R";
   
   
   private static final String strCategory="select ac.activity_type_seq_id,ac.activity_type_code FROM app.tpa_activity_type_codes ac";
   private static final String haadCategory="select hc.category_type_seq_id,hc.activity_type FROM app.tpa_haad_category_type hc";
 
   private static final String alStateValueList = "SELECT DISTINCT A.STATE_TYPE_ID,A.STATE_NAME FROM app.TPA_STATE_CODE A  ORDER BY A.STATE_NAME ";
   // APP added by govind before table name TPA_GEOGRAPHICAL_LOCATIONS
   private static final String strGeoLocationList= "SELECT G.LOCATION_ID,G.LOCATION_NAME FROM app.TPA_GEOGRAPHICAL_LOCATIONS G WHERE G.LOCATION_ID NOT IN('1','9')";
   
   //  select avg_age_seq_id,avg_age FROM app.intx.TPA_EMP_AVG_AGE
   private static final String strGeoCountryList = "SELECT C.EMIRATES_COUNTRY_ID,C.NAME FROM app.TPA_GEOGRAPHICAL_COUNTRIES C WHERE C.LOCATION_ID =";
   private static final String strEmirateList = "SELECT C.STATE_TYPE_ID,C.STATE_NAME FROM app.TPA_STATE_CODE C WHERE C.COUNTRY_ID=";
  // private static final String strAuthInsuList = "SELECT INS_SEQ_ID,INS_COMP_NAME FROM app.TPA_INS_INFO WHERE INS_OFFICE_GENERAL_TYPE_ID = 'IHO' and PAYER_AUTHORITY =";
  
   
   private static final String strAuditUserRoleList = "select rc.role_seq_id,rc.role_name FROM app.tpa_roles_code rc order by rc.role_name";
   
  
   private static final String strXMLDashboards = "select general_type_id,DESCRIPTION FROM app.TPA_GENERAL_CODE where HEADER_TYPE ='XML Download Upload count' order by sort_no";
 //  select avg_age_seq_id,avg_age FROM app.intx.TPA_EMP_AVG_AGE
   private static final String strTPA_ROLES_CODE_PTR = "SELECT ROLE_SEQ_ID,ROLE_NAME FROM app.TPA_ROLES_CODE WHERE USER_GENERAL_TYPE_ID = 'PTR' ORDER BY ROLE_NAME";
   private static final String strPARTNER_PREAUTH_STATUS = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'PREAUTH_STATUS' AND SORT_NO NOT IN(60,80) ORDER BY SORT_NO";
   private static final String strpartnerName ="SELECT P.PTNR_SEQ_ID,P.PARTNER_NAME FROM app.TPA_PARTNER_INFO P JOIN APP.TPA_PARTNER_EMPANEL_STATUS E ON (P.PTNR_SEQ_ID=E.PTNR_SEQ_ID) WHERE E.EMPANEL_STATUS_TYPE_ID = 'EMP'";
 //partner encounter types
   private static final String strPartnerEncounterTypes = "SELECT ENCOUNTER_CODE , ENCOUNTER_TYPE  FROM app.( SELECT 'Elective'  ENCOUNTER_TYPE,'1' ENCOUNTER_CODE  FROM app.DUAL UNION ALL SELECT 'Emergency' ENCOUNTER_TYPE,'2' ENCOUNTER_CODE   FROM app.DUAL)";
   private static final String strMain4benifitTypes	 		= "SELECT GC.GENERAL_TYPE_ID,INITCAP(GC.DESCRIPTION) AS DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='BENIFIT_TYPE' AND GC.GENERAL_TYPE_ID NOT IN ('HEAC', 'DAYC' , 'CB', 'IPRE', 'PAHC', 'IEMA')  ORDER BY GC.SORT_NO";
   private static final String strapbenifitTypes= "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='BENIFIT_TYPE' and GC.GENERAL_TYPE_ID!='HEAC'UNION SELECT DISTINCT case clause_id when 'cls.15' then 'CHRO' else 'PED' end  GENERAL_TYPE_ID, CLAUSE_NAME FROM app.TPA_INS_PROD_POL_CLAUSES where CLAUSE_ID in ('cls.15','cls.16') ORDER BY 1"; 
 
   //bikki
   
 
   private static final String stralmaxBenifitList="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='24' and a.rule_name='Inpatient' order by a.sort_number";
   private static final String stralnetworkList="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='22' and a.rule_name='Inpatient' order by a.sort_number";
   private static final String stralinpatientAreaOfCover="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='25' and a.rule_name='Inpatient' order by a.sort_number";
   private static final String stralroomType="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='27' and a.rule_name='Inpatient' order by a.sort_number";
   private static final String stralmaxChildAgeLimit="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='28' and a.rule_name='Inpatient' order by a.sort_number";
   private static final String stralcompanionCharges="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='29' and a.rule_name='Inpatient' order by a.sort_number";
   private static final String straloutpatientAreaOfCover="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='6' and a.rule_name='Outpatient' order by a.sort_number";
   private static final String straloutpatientAreaOfCover2="SELECT a.fact_id,a.descriptn  FROM app.pri_factors_cal A where a.bid='6' and a.rule_name='Outpatient' and a.hide_val like ";
   private static final String straladditionalHospitalCoverage="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='14' and a.rule_name='Outpatient' order by a.sort_number";
   //private static final String stralconsultationCD="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid=11 and a.rule_name='Outpatient' order by a.sort_number";
   private static final String stralconsultationCD="SELECT a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='11' and a.rule_name='Outpatient' order by a.sort_number"; 
   private static final String straldrugsLimit="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='8' and a.rule_name='Outpatient' order by a.sort_number";
   private static final String straldrugsCopay="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='9' and a.rule_name='Outpatient' order by a.sort_number";
   private static final String stralphysiotherapyLimit="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='12' and a.rule_name='Outpatient' order by a.sort_number";
   private static final String stralphysiotherapyCopay="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='13' and a.rule_name='Outpatient' order by a.sort_number";
   private static final String strallaboratoryCD="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='10' and a.rule_name='Outpatient' order by a.sort_number";
   
   //private static final String stralinpatientCopay="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid=30 and a.rule_name='Inpatient' order by a.sort_number";
   private static final String stralinpatientCopay="SELECT a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='30' and a.rule_name='Inpatient' order by a.sort_number";
   private static final String stralnormalDeliveryLimit=" SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='38' and a.rule_name='Maternity IP' order by a.sort_number";
   
    private static final String stralincomeGroup="SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.PRI_GENERAL_CODE WHERE HEADER_TYPE = 'INCOME GROUP'"; 
    
   
    private static final String stralCSectionLimit="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='39' and a.rule_name='Maternity IP' order by a.sort_number";

   private static final String strCountryCurrencyCode = "select tcc.currency_id,tc.country_name FROM app.tpa_currency_code tcc left outer join app.tpa_country_code tc on(tcc.country_id=tc.country_id) order by tc.country_name";
   
   
   private static final String strSubmissionCatagory = "SELECT G.GENERAL_TYPE_ID,G.DESCRIPTION FROM app.TPA_GENERAL_CODE G WHERE G.HEADER_TYPE = 'PROCESS_TYPE' order by G.SORT_NO";
   private static final String STR_PrebenefitTypes	= "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='BENIFIT_TYPE' AND GC.GENERAL_TYPE_ID NOT IN ('HEAC','CB')ORDER BY GC.SORT_NO";
   private static final String strPaymentTo ="SELECT G.GENERAL_TYPE_ID,G.DESCRIPTION FROM app.TPA_GENERAL_CODE G WHERE G.HEADER_TYPE = 'PAYMENT_TO_TYPE'";
   private static final String strClaimBatchProviderList="select hi.hosp_seq_id,hi.hosp_name from app.tpa_hosp_info hi join app.tpa_hosp_empanel_status thes on (hi.hosp_seq_id = thes.hosp_seq_id) where thes.empanel_status_type_id='EMP'  order by hi.hosp_name";
   //  select avg_age_seq_id,avg_age FROM app.intx.TPA_EMP_AVG_AGE
   
  
    private static final String stralmaternityOutpatientCopay="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='50' and a.rule_name='Maternity OP' order by a.fact_id";
    private static final String stralmaternityInpatientCopay="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='40' and a.rule_name='Maternity IP' order by a.fact_id";
    private static final String stralmaternityOutpatientVisits=" SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='51' and a.rule_name='Maternity OP' order by a.fact_id";
    private static final String straldinpatientCopay="SELECT  a.fact_id,a.descriptn FROM app.pri_factors_cal A where a.bid='15' and a.rule_name='Outpatient' order by a.fact_id";
    private static final String stralpremiumRefundApplicable="select Fact_Id,Descriptn FROM app.PRI_FACTORS_CAL where key_id = 'PREMIUM_REFUND_ADJUSTMENT' and Rule_Code = 'OP'";
     private static final String stralinpatientBenefit="select a.general_type_id a , a.description FROM app.pri_general_code a where a.header_type='BENEFIT_APPLY'";
    private static final String straloutpatientBenefit="select a.general_type_id a , a.description FROM app.pri_general_code a where a.header_type='BENEFIT_APPLY'";
    //b
    private static final String stralrenewalYN="select a.general_type_id a,a.description FROM app.pri_general_code a where a.header_type='NEW_RENEWAL'";
  // private static final String straladministrativeServiceType="select a.general_type_id a,a.description FROM app.pri_general_code a where a.header_type IN ('CAPITATION')";
    private static final String straladministrativeServiceType="select a.general_type_id a,a.description FROM app.pri_general_code a where a.header_type IN('NON-CAPITATION','CAPITATION') order by a.sort_no";
    private static final String stralauthorityType="select u.general_type_id,u.description FROM app.pri_general_code u where u.header_type='AUTH_TYPE' order by u.sort_no"; 
  // private static final String stralinsuranceCompanyName="select i.ins_seq_id,i.ins_comp_name FROM app.tpa_ins_info i where i.payer_authority=?";
   private static final String stralinsuranceCompanyName="SELECT distinct T.INS_COMPANY_NAME,T.INS_COMPANY_NAME FROM app.PRIC_TAB_PAST T WHERE T.AUTHOR_TYPE = ?"; // modified for pricing tool
    private static final String stralmaternityPricing=" select gc.general_type_id,gc.description FROM app.pri_general_code gc where gc.header_type='MATERNITY_IP_AND_OP_PRICING'";
    private static final String strIpClmsPmtMethod="select g.general_type_id,g.description FROM app.tpa_general_code g where g.general_type_id in ('FFS','IRD')";
    //  select avg_age_seq_id,avg_age FROM app.intx.TPA_EMP_AVG_AGE
    
    private static final String stralinsuranceCompanyName1="SELECT INS_COMP_CODE_NUMBER,INS_COMP_NAME,INS_SEQ_ID FROM app.TPA_INS_INFO WHERE INS_OFFICE_GENERAL_TYPE_ID = 'IHO' and PAYER_AUTHORITY = ?  ORDER BY INS_COMP_NAME";
    
    private static final String strexist_Comp_Prod1="select PRODUCT_NAME,PRODUCT_NAME FROM app.PRIC_PAST_DATA_REF";
    private static final String strexist_Comp_Prod2="select PRODUCT_NAME,PRODUCT_NAME FROM app.PRIC_PAST_DATA_REF";
  
    // govind
    // private static final String strAuthInsuList = "SELECT INS_SEQ_ID,INS_COMP_NAME FROM app.TPA_INS_INFO WHERE INS_OFFICE_GENERAL_TYPE_ID = 'IHO' and PAYER_AUTHORITY =";
   
   //  private static final String strAuthInsuList = "SELECT distinct T.INS_COMPANY_NAME,T.INS_COMPANY_NAME FROM app.PRIC_TAB_PAST T WHERE T.AUTHOR_TYPE =";
    private static final String strAuthInsuList1 = "SELECT distinct T.INS_COMPANY_NAME,T.INS_COMPANY_NAME FROM app.PRIC_TAB_PAST T WHERE T.AUTHOR_TYPE =";
    
  //  private static final String strPreviousProductListPL = "SELECT distinct PRODUCT_NAME,PRODUCT_NAME FROM app.Pric_Tab_Past WHERE POLICY_NUMBER  like ";
  
    private static final String strPreviousProductListPL ="SELECT distinct PRODUCT_NAME,PRODUCT_NAME FROM app.PRIC_TAB_PAST WHERE ','||POLICY_NUMBER||',' like ";
   // private static final String strPreviousProductListPL = "SELECT distinct PRODUCT_NAME,PRODUCT_NAME FROM app.Pric_Tab_Past WHERE POLICY_NUMBER  like ";
    private static final String strPreviousProductList = "SELECT distinct PRODUCT_NAME,PRODUCT_NAME   FROM app.Pric_Tab_Past WHERE corp_id  = 'NA'";
    
    private static final String strmodeofpreapprovalforEnhanced = "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='PAT_SOURCE' AND GC.GENERAL_TYPE_ID NOT IN ('ONL1','PTNR') ORDER BY GC.SORT_NO";
  
    private static final String strpolicyStatusForProductSync = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'TPA_POLICY_STATUS' AND SORT_NO IN (10,50,60)  ORDER BY SORT_NO";
    
    private static final String strPOLICY_STATUS_FOR_SCHEME = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'TPA_POLICY_STATUS' AND GENERAL_TYPE_ID <>'POD'  ORDER BY SORT_NO";
    private static final String strPARTNER_LIST = "SELECT P.PTNR_SEQ_ID,P.PARTNER_NAME FROM APP.TPA_PARTNER_INFO P JOIN APP.TPA_PARTNER_EMPANEL_STATUS E ON (P.PTNR_SEQ_ID=E.PTNR_SEQ_ID) WHERE E.EMPANEL_STATUS_TYPE_ID = 'EMP'";
    private static final String strPRIMARY_NETWORK_CHECKBOX = "SELECT GENERAL_TYPE_ID,a.description||'-'||c.ins_comp_code_number as desc_code FROM app.TPA_GENERAL_CODE a FULL OUTER JOIN app.tpa_ins_info c ON a.ins_seq_id=c.ins_seq_id WHERE description in ('A+','GN','Gold','A','RN','Silver','B','RN2','Green','RN3') ORDER BY SORT_NO";
    
    private static final String strMemberLocation = "SELECT T.LOCATION_CODE,(T.LOCATION_NAME||'('||T.LOCATION_CODE||')') LOCATION_NAME FROM APP.TPA_MEM_LOCATION_CODE T ORDER BY LOCATION_NAME";
    private static final String str_Network_Type_For_AMT = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE a FULL OUTER JOIN app.tpa_ins_info c ON a.ins_seq_id=c.ins_seq_id WHERE c.ins_comp_name = 'Al madina takaful insurance company' and description in ('Gold','Silver','Green') ORDER BY SORT_NO";
    private static final String str_Network_Type_For_NIA = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE a FULL OUTER JOIN app.tpa_ins_info c ON a.ins_seq_id=c.ins_seq_id WHERE c.ins_comp_name =  'The New india assurance Company' and description in ( 'A+', 'A', 'B') ORDER BY SORT_NO";
    private static final String str_Network_Type_For_OIC = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE a FULL OUTER JOIN app.tpa_ins_info c ON a.ins_seq_id=c.ins_seq_id WHERE c.ins_comp_name = 'Oman United insurance company' and description in ('GN','RN','RN2','RN3') ORDER BY SORT_NO";
    private static final String strProductSubType = "SELECT GENERAL_TYPE_ID,DESCRIPTION FROM app.TPA_GENERAL_CODE WHERE HEADER_TYPE = 'POLICY_SUB_TYPE'  and general_type_id in ('PFL','PNF')  ORDER BY description asc";	
    
    private static final String strGroup_Accounts = "SELECT distinct sub_benefits_id,sub_benefits_name as sub_benefits FROM app.rule_benefit_limits WHERE benefit_name='In-Patient' ORDER BY sub_benefits_name";
    private static final String strMapped_Codes  = "select master_activity_code,activity_code,activity_description from app.tpa_activity_master_details";
   
    private static final String strAdmission_Type  = "SELECT GC.GENERAL_TYPE_ID,GC.DESCRIPTION FROM app.TPA_GENERAL_CODE GC WHERE GC.HEADER_TYPE='BENIFIT_TYPE' and GC.GENERAL_TYPE_ID in('IPT','OPTS') ORDER BY GC.SORT_NO";
    
    private static final String str_Passport_Issued_Country = "SELECT COUNTRY_ID,COUNTRY_NAME FROM app.TPA_COUNTRY_CODE order by country_name asc";
    private static final String str_Applicable_Ins_Company = "SELECT  INS_COMP_CODE_NUMBER||'|'|| INS_COMP_NAME,INS_COMP_NAME FROM app.TPA_INS_INFO WHERE INS_OFFICE_GENERAL_TYPE_ID = 'IHO' and ACTIVE_YN='Y'";
    private static final String str_Ins_Network_Type = "SELECT insurance_network_type,Network_type_name from app.tpa_insurance_network_type";
    
    /**
     * This method populates the appropriate query to be loaded based on the identifier
     * @param strIdentifier String object which identifies the query to be executed
     * @return Collection of value objects
     * @exception throws TTKException
     */
    public Collection loadObjects(String strIdentifier) throws TTKException
    {
    	   String strQuery = "";
           //System.out.println("strIdentifier="+strIdentifier);
           if (strIdentifier.equals("spreauthCategory"))
           {
        	
               strQuery = strPREAUTH_CATEGORY;
           } 
      
       else if(strIdentifier.equals("claims"))
        {
        	strQuery = strTPAGENERAL_CODE_CLAIM;
        }
           else if(strIdentifier.equals("insuranceCompanyName"))
   	    {
        	   
   	        strQuery = stralinsuranceCompanyName;
   	        
   	    }
           if (strIdentifier.equals("existCompProd1"))
           {
               strQuery = strexist_Comp_Prod1;
           } 
           if (strIdentifier.equals("existCompProd2"))
           {
               strQuery = strexist_Comp_Prod2;
           } 
        
           else if(strIdentifier.equals("GeoLocations"))
           {
           	strQuery = strGeoLocationList;
           }
           else if(strIdentifier.equals("DataType"))
        {
        	strQuery = strDataType;
        }
        
       else if(strIdentifier.equals("productList"))
        {
        	strQuery = strProductList;
        }
        
       else if(strIdentifier.equals("CorporateList"))
        {
        	strQuery = strCorporateList;
        }
           else  if(strIdentifier.equals("claims"))
        {
        	strQuery = strTPAGENERAL_CODE_CLAIM;
        }
        
        else if(strIdentifier.equals("insurenceCompanyList"))
        {
        	strQuery = strInsCompanyList;
        }
        else if(strIdentifier.equals("category"))
        {
            strQuery = strCategory;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A   
        else if(strIdentifier.equals("haadCategory"))
        {
            strQuery = haadCategory;      
        }
        if(strIdentifier.equals("partnerName"))
        {
        	strQuery = strpartnerName;
        }
        else if(strIdentifier.equals("allCurencyCode"))
        {
        	strQuery = strCountryCodeList;
        }
       //added for hyundai buffer 
        else if(strIdentifier.equals("normalbufferTypeList"))
        {
            strQuery = STR_NormalBufferTypeList;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A        
        
        // cur report
        else if(strIdentifier.equals("benefitTypes"))
        {
            strQuery = str_BenefitTypes;      
        }
        else if(strIdentifier.equals("patientTypes"))
        {
            strQuery = str_PenefitTypes;      
        }
        
        else if(strIdentifier.equals("benefitTypescallcenter"))
        {
            strQuery = str_BenefitTypesCallcenter;      
        }
        else if(strIdentifier.equals("corporateList"))
        {
            strQuery = STR_CorporateList;      
        }
        // cur report
        
        
        else if(strIdentifier.equals("ProviderList"))
        {
            strQuery = STR_ProviderList;      
        }//end of else if(strIdentifier.equals("ProviderList"))
        else if(strIdentifier.equals("MemberClaimFromList"))
        {
            strQuery = STR_MemberClaimFromList;      
        }//end of else if(strIdentifier.equals("ProviderList"))
        else if(strIdentifier.equals("serviceTypes"))
        {
            strQuery = STR_ServiceTypes;      
        }//end of else if(strIdentifier.equals("serviceTypes"))
        else if(strIdentifier.equals("activityTypes"))
        {
            strQuery = STR_ActivityTypes;      
        }//end of else if(strIdentifier.equals("activityTypes"))
        else if(strIdentifier.equals("claimsSubmissionTypes"))
        {
            strQuery = STR_ClaimsSubmissionTypesList;      
        }//end of else if(strIdentifier.equals("claimsSubmissionTypes"))
        else if(strIdentifier.equals("OutPatientEncounterTypes"))
        {
            strQuery = str_OutPatientEncounterTypes;      
        }//end of else if(strIdentifier.equals("OutPatientEncounterTypes"))
        else if(strIdentifier.equals("denialDescriptions"))
        {
            strQuery = str_DenialDescriptionsList;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A
        else if(strIdentifier.equals("modifiers"))
        {
            strQuery = str_ModifiersList;      
        }//end of else if(strIdentifier.equals("modifiers"))
        else if(strIdentifier.equals("unitTypes"))
        {
            strQuery = str_UnitTypesList;      
        }//end of else if(strIdentifier.equals("unitTypes"))
        else if(strIdentifier.equals("observationTypes"))
        {
            strQuery = str_ObservationTypesList;      
        }//end of else if(strIdentifier.equals("observationTypes"))//1274A  
        else if(strIdentifier.equals("observationCodes"))
        {
            strQuery = str_ObservationCodesList;      
        }//end of else if(strIdentifier.equals("observationCodes"))//1274A
        else if(strIdentifier.equals("observationValueTypes"))
        {
            strQuery = str_ObservationValueTypesList;      
        }//end of else if(strIdentifier.equals("observationValueTypes"))//1274A
        else if(strIdentifier.equals("authorization"))
        {
            strQuery = str_AuthorizationTypeList;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A
        else if(strIdentifier.equals("preauthStatusList"))
        {
            strQuery = str_PreauthStatusList;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A
        else if(strIdentifier.equals("systemOfMedicines"))
        {
            strQuery = str_SystemOfMedicines;      
        }//end of else if(strIdentifier.equals("systemOfMedicines"))//1274A
        else if(strIdentifier.equals("accidentRelatedCases"))
        {
            strQuery = str_AccidentRelatedCases;      
        }//end of else if(strIdentifier.equals("accidentRelatedCases"))//1274A
        
        else if(strIdentifier.equals("tariffTypes"))
        {
            strQuery = str_TariffTypesList;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))
        else if(strIdentifier.equals("bufferTypeList"))
        {
            strQuery = STR_BufferTypeList;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A
        if(strIdentifier.equals("supClaimTypeID"))
        {
            strQuery = STR_SUP_CLAIM_TYPE;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A
        if(strIdentifier.equals("supBufferTypeID"))
        {
            strQuery = STR_SUP_BUFFER_TYPE;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A
        if(strIdentifier.equals("levelslist"))
        {
            strQuery = STR_LEVELS_LIST;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A
        //end  for hyundai buffer 
        //added for kocb broker login
        if(strIdentifier.equals("designationBRO"))
        {
            strQuery = strdesignation_BRO;
        }//end of else if(strIdentifier.equals("ailmentType"))
        
        //AK
        
        if(strIdentifier.equals("userRoleBRO"))
        {
            strQuery = struserRole_BRO;
        }//end of else if(strIdentifier.equals("ailmentType"))
        

        //physiotherapy cr 1320
        if(strIdentifier.equals("physioMsgStatus"))
        {
            strQuery = strPHYSIO_MSG_STATUS;
        }//end of else if(strIdentifier.equals("accountupdate"))
        //physiotherapy cr 1320
        if(strIdentifier.equals("insApprovalStatus"))
        {
            strQuery = STR_INSAPPROVAL_STATUS;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A
        
        if(strIdentifier.equals("insReqType"))
        {
            strQuery = strrson_Type;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A
		 if(strIdentifier.equals("remType"))
       {
           strQuery = strrem_Type;      
       }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A
		
		 if(strIdentifier.equals("claimStatusAprRejFlow"))
        {
            strQuery = strCLAIM_STATUS_APRREJFLOW;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A
        if(strIdentifier.equals("preauthStatusAprRejFlow"))
        {
            strQuery = strPREAUTH_STATUS_APRREJFLOW;
        }//end of else if(strIdentifier.equals("preauthStatusAprRejFlow"))//1274A
        
        //added for koc 1349
        if(strIdentifier.equals("wellnessAccess"))
        {
            strQuery = strWellness_ACCESS;
        }//end of else if(strIdentifier.equals("ailmentType"))
        //added for koc 1349

        if(strIdentifier.equals("roomTypeInpatient"))
        {
            strQuery = strROOM_TYPE_INPATIENT;
        }//end of else if(strIdentifier.equals("ailmentType"))
        
        if(strIdentifier.equals("outPatientCoverageGroup"))
        {
            strQuery = strOUTPATIENTCOVERAGE;
        }//end of else if(strIdentifier.equals("ailmentType"))
        
        //added for koc 1278
        if(strIdentifier.equals("ailmentType"))
        {
            strQuery = strAILMENT_TYPE;
        }//end of else if(strIdentifier.equals("ailmentType"))
        //added for koc 1278
           //added as per koC 1285
        if(strIdentifier.equals("domHospReason"))
        {
            strQuery = strTPADOMICILARY_HOSP_REASON;
        }//end of else if(strIdentifier.equals("accountupdate"))
        
        /*
		 * This code is added for cr koc 1103
		 * added eft
		 */
        if(strIdentifier.equals("accountupdate"))
        {
            strQuery = strTPAGENERAL_CODE_ACCOUNT;
        }//end of else if(strIdentifier.equals("accountupdate"))
		//Added as per Shortyfall KOC1179 CR
        else if(strIdentifier.equals("clausefor"))
        {
        	strQuery=strClauseType;
        }//end of else if(strIdentifier.equals("clausefor"))
        
        else if(strIdentifier.equals("clausesubtype"))
        {
        	strQuery=strClauseSubType;
        }//end of else if(strIdentifier.equals("clausesubtype"))
        //Added as per Shortyfall KOC1179 CR
        else if(strIdentifier.equals("destnationbank"))
        {
            strQuery = strdestination_Bank;
        }//end of else if(strIdentifier.equals("destnationbank"))

        else if(strIdentifier.equals("alCityList"))
        {
            strQuery = strdestination_Bank;
        }//end of else if(strIdentifier.equals("alCityList"))
        else if(strIdentifier.equals("accounttype"))
        {
            strQuery = strTPAGENERAL_CODE_ACCOUNTTYPE;
        }//end of else if(strIdentifier.equals("accounttype"))
        else if(strIdentifier.equals("paymentMethod1"))
        {
            strQuery = strPAYMENT_METHOD1;
        }//end of else if(strIdentifier.equals("paymentMethod1"))
         // Changes added for Debit Note CR KOC1163
        else if(strIdentifier.equals("paymentMethod2"))
        {
            strQuery = strPAYMENT_METHOD2;
        }//end of else if(strIdentifier.equals("paymentMethod2"))
        //	End changes added for Debit Note CR KOC1163
        
      else if(strIdentifier.equals("regioncode"))//Added as per KKOCRegion Based Premium KOC 1284
        {
            strQuery = strRegionCode;
        }//end of else if(strIdentifier.equals("regioncode"))
        
        else if(strIdentifier.equals("allregioncode"))//Added as per KKOCRegion Based Premium KOC 1284
        {
            strQuery = strRegionCodelist;
        }//end of else if(strIdentifier.equals("allregioncode"))
        /*
		 *End koc 1103
		 * End eft
		 */
        else if(strIdentifier.equals("gradeCode"))
        {
            strQuery = strTPA_HOSP_GRADE_CODE;
        }//end of if(strIdentifier.equals("gradeCode"))
        else if(strIdentifier.equals("countryCode") || strIdentifier.equals("payOrderCountryCode"))
        {
            strQuery = strTPA_COUNTRY_CODE;
        }//end of else if(strIdentifier.equals("countryCode") || strIdentifier.equals("payOrderCountryCode"))
        else if(strIdentifier.equals("roomTypes"))
        {
            strQuery = strROOM_TYPES;
        }//end of else if(strIdentifier.equals("countryCode") || strIdentifier.equals("payOrderCountryCode")) 
        else if(strIdentifier.equals("roomType"))
        {
            strQuery = strROOM_TYPE;
        }
        else if(strIdentifier.equals("stateCode") || strIdentifier.equals("payOrderStateCode"))
        {
            strQuery = strTPA_STATE_CODE;
        }//end of else if(strIdentifier.equals("stateCode") || strIdentifier.equals("payOrderStateCode"))
      

        else if(strIdentifier.equals("productCode"))
        {
            strQuery = strTPA_INSPRODUCT_CODE;
        }

        else if(strIdentifier.equals("cityCode") || strIdentifier.equals("payOrderCityCode"))
        {
            strQuery = strTPA_CITY_CODE;
        }//end of else if(strIdentifier.equals("cityCode") || strIdentifier.equals("payOrderCityCode"))
        else if(strIdentifier.equals("empanelStatusCode"))
        {
            strQuery = strTPA_HOSP_EMPANEL_STATUS_CODE;
        }//end of else if(strIdentifier.equals("empanelStatusCode"))
        else if(strIdentifier.equals("payerlist"))
        {
            strQuery = strTPA_HOSP_PAYER_CODE;
        }//end of else if(strIdentifier.equals("payerlist"))
        else if(strIdentifier.equals("payerlistfortariff"))
        {
            strQuery = strTPA_HOSP_PAYER_CODE_TARIFF;
        }//end of else if(strIdentifier.equals("payerlistfortariff"))
        else if(strIdentifier.equals("empanelTypeCode"))
        {
            strQuery = strTPA_HOSP_EMPANEL_TYPE_CODE;
        }//end of else if(strIdentifier.equals("empanelTypeCode"))
        
         else if(strIdentifier.equals("mouCode"))
        {
            strQuery = strTPA_MOU_CODE;
        }//end of else if(strIdentifier.equals("mouCode"))
        else if(strIdentifier.equals("commCode"))
        {
            strQuery = strTPA_COMM_CODE;
        }//end of else if(strIdentifier.equals("commCode"))
        else if(strIdentifier.equals("contactTypeCode"))
        {
            strQuery = strTPA_HOSP_CONTACT_CODE;
        }//end of else if(strIdentifier.equals("contactTypeCode"))
        else if(strIdentifier.equals("drSpecialityCode"))
        {
            strQuery = strTPA_HOSP_DR_SPECIALITY_CODE;
        }//end of else if(strIdentifier.equals("drSpecialityCode"))
        else if(strIdentifier.equals("logTypeCode"))
        {
            strQuery = strTPA_HOSP_LOG_CODE;
        }//end of else if(strIdentifier.equals("logTypeCode"))
        else if(strIdentifier.equals("partnerLogTypeCode"))
        {
            strQuery = strTPA_PTNR_LOG_CODE;
        }//end of else if(strIdentifier.equals("logTypeCode"))
        else if(strIdentifier.equals("designationTypeID"))
        {
            strQuery = strTPA_DESIGNATION_CODE;
        }//end of else if(strIdentifier.equals("designationTypeID"))
        else if(strIdentifier.equals("enrolTypeCode"))
        {
            strQuery = strTPA_ENROL_TYPE_CODE;
        }//end of else if(strIdentifier.equals("enrolTypeCode"))
        else if(strIdentifier.equals("answerCode"))
        {
            strQuery = strTPA_HOSP_ANSWER_CODE;
        }//end of else if(strIdentifier.equals("answerCode"))
        else if(strIdentifier.equals("categoryCode"))
        {
            strQuery = strTPA_HOSP_CATEGORY_CODE;
        }//end of else if(strIdentifier.equals("categoryCode"))
        else if(strIdentifier.equals("hospCode"))
        {
            strQuery = strTPA_HOSP_CODE;
        }//end of else if(strIdentifier.equals("hospCode"))
        else if(strIdentifier.equals("empanelRsonCode"))
        {
            strQuery = strTPA_HOSP_EMPANEL_RSON_CODE;
        }//end of else if(strIdentifier.equals("empanelRsonCode"))
        else if(strIdentifier.equals("locationCode"))
        {
            strQuery = strTPA_HOSP_LOCATION_CODE;
        }//end of else if(strIdentifier.equals("locationCode"))
        else if(strIdentifier.equals("medicalCode"))
        {
            strQuery = strTPA_HOSP_MEDICAL_CODE;
        }//end of else if(strIdentifier.equals("medicalCode"))
		
        else if(strIdentifier.equals("planCode"))
        {
            strQuery = strTPA_HOSP_PLAN_CODE;
        }//end of else if(strIdentifier.equals("planCode"))
        else if(strIdentifier.equals("procedureCode"))
        {
            strQuery = strTPA_HOSP_PROCEDURE_CODE;
        }//end of else if(strIdentifier.equals("procedureCode"))
        else if(strIdentifier.equals("questCode"))
        {
            strQuery = strTPA_HOSP_QUEST_CODE;
        }//end of else if(strIdentifier.equals("questCode"))
        else if(strIdentifier.equals("roomsCode"))
        {
            strQuery = strTPA_HOSP_ROOMS_CODE;
        }//end of else if(strIdentifier.equals("roomsCode"))
        else if(strIdentifier.equals("medicalWardCode"))
        {
            strQuery = strTPA_HOSP_MEDICAL_WARD_CODE;
        }//end of else if(strIdentifier.equals("medicalWardCode"))
        else if(strIdentifier.equals("nonMedicalWardCode"))
        {
            strQuery = strTPA_HOSP_NON_MEDICAL_WARD_CODE;
        }//end of else if(strIdentifier.equals("nonMedicalWardCode"))
        else if(strIdentifier.equals("relationshipCode"))
        {
            strQuery = strTPA_RELATIONSHIP_CODE;
        }//end of else if(strIdentifier.equals("relationshipCode"))
        else if(strIdentifier.equals("officeInfo"))
        {
            strQuery = strTPA_OFFICE_INFO;
        }//end of else if(strIdentifier.equals("officeInfo"))
        
        //Start Ak
        else if(strIdentifier.equals("productAuthority"))
        {
            strQuery = strPRODUCT_AUTHORITY_INFO;
        }  //end of else if(strIdentifier.equals("officeInfo"))
        
        //END AK
        else if(strIdentifier.equals("modeOfClaims"))
        {
            strQuery = strMODE_OF_CLAIMS;
        }//end of else if(strIdentifier.equals("modeOfClaims"))
        else if(strIdentifier.equals("currencyList"))
        {
            strQuery = strCURRENCY_LIST;
        }//end of else if(strIdentifier.equals("currencyList"))
        else if(strIdentifier.equals("userInfo"))
        {
            strQuery = strTPA_USER_INFO;
        }//end of else if(strIdentifier.equals("userInfo"))

        //KOC Cigna_insurance_resriction
        else if(strIdentifier.equals("alStateValueList"))
        {
        	strQuery = alStateValueList;
        } 
        else if(strIdentifier.equals("userRestriction"))
        {
            strQuery = strTPA_GENERAL_CODE;
        }//end of else if(strIdentifier.equals("userRestriction"))
        
        else if(strIdentifier.equals("userRestrictionGroup"))
        {
            strQuery = strTPA_GENERAL_CODE_GROUP;
        }//end of else if(strIdentifier.equals("userRestrictionGroup"))
        
        
      //KOC Cigna_insurance_resriction
        else if(strIdentifier.equals("chequeCode"))
        {
        	strQuery = strTPA_HOSP_ISSUES_CHEQUES_CODE;
        }//end of else if(strIdentifier.equals("chequeCode"))
        else if(strIdentifier.equals("payOrderType"))
        {
        	strQuery = strTPA_PAY_ORDER_CODE;
        }//end of else if(strIdentifier.equals("payOrderType"))
        else if(strIdentifier.equals("modReason"))
        {
            strQuery = strTPA_HOSP_MOD_REASON_CODE;
        }//end of else if(strIdentifier.equals("modReason"))
        else if(strIdentifier.equals("generalCodeDecision"))
        {
            strQuery = strTPA_GENERAL_CODE_DECISION;
        }//end of else if(strIdentifier.equals("generalCodeDecision"))
        else if(strIdentifier.equals("generalCodePlan"))
        {
            strQuery = strTPA_GENERAL_CODE_PLAN;
        }//end of else if(strIdentifier.equals("generalCodePlan"))
        else if(strIdentifier.equals("providerStatus"))
        {
            strQuery = strTPA_GENERAL_CODE_PROVIDER;
        }//end of else if(strIdentifier.equals("providerStatus"))
        else if(strIdentifier.equals("associateCode"))
        {
            strQuery = strTPA_GENERAL_CODE_ASSOCIATE;
        }//end of else if(strIdentifier.equals("associateCode"))
      //Insurance_corporate_wise_hosp_network
        else if(strIdentifier.equals("associateHosCode"))
        {
            strQuery = strTPA_GENERAL_CODE_ASSOCIATE_HOS;
        }//end of else if(strIdentifier.equals("associateCode"))
      //Insurance_corporate_wise_hosp_network
        else if(strIdentifier.equals("validationStatus"))
        {
            strQuery = strTPA_GENERAL_CODE_VALIDATE_STATUS;
        }//end of else if(strIdentifier.equals("validationStatus"))
        else if (strIdentifier.equals("productCode"))
        {
        	strQuery = strTPA_INS_PRODUCT;
        }//end of else if (strIdentifier.equals("productCode"))
        else if (strIdentifier.equals("enrollTypeCode"))
        {
        	strQuery = strTPA_ENROLMENT_TYPE_CODE;
        }//end of else if (strIdentifier.equals("enrollTypeCode"))
        else if (strIdentifier.equals("honourCode"))
        {
            strQuery = strTPA_GENERAL_CODE_HONOUR;
        }//end of else if (strIdentifier.equals("honourCode"))
        else if (strIdentifier.equals("insuranceCompany"))
        {
            strQuery = strTPA_INS_INFO;
        }//end of else if (strIdentifier.equals("insuranceCompany"))
        else if (strIdentifier.equals("healthAuthorities"))
        {
            strQuery = strHEALTH_ATUTH_INFO;
        }//end of else if (strIdentifier.equals("healthAuthorities"))
        else if (strIdentifier.equals("brokerCompany"))
        {
            strQuery = strTPA_BRO_INFO;
        }//end of else if (strIdentifier.equals("brokerCompany"))
        else if (strIdentifier.equals("productTypeCode"))
        {
            strQuery = strTPA_GENERAL_CODE_PRODUCT_TYPE;
        }//end of else if (strIdentifier.equals("productTypeCode"))
        
        else if (strIdentifier.equals("productStatusCode"))
        {
            strQuery = strTPA_GENERAL_CODE_PRODUCT_STATUS;
        }//end of else if (strIdentifier.equals("productStatusCode"))
       
   
        else if (strIdentifier.equals("mouAdminStatusCode"))
        {
            strQuery = strTPA_GENERAL_CODE_ADMIN_MOU_STATUS;
        }//end of else if (strIdentifier.equals("mouAdminStatusCode"))
        else if (strIdentifier.equals("mouArticle"))
        {
            strQuery = strTPA_HOSP_MOU_ARTICLE;
        }//end of else if (strIdentifier.equals("mouArticle"))
        else if (strIdentifier.equals("mouHospStatusCode"))
        {
            strQuery = strTPA_GENERAL_CODE_HOSP_MOU_STATUS;
        }//end of else if (strIdentifier.equals("mouHospStatusCode"))
        else if (strIdentifier.equals("packageCode"))
        {
            strQuery = strTPA_GENERAL_CODE_PACKAGE;
        }//end of else if (strIdentifier.equals("packageCode"))
        else if (strIdentifier.equals("sectorTypeCode"))
        {
            strQuery = strTPA_GENERAL_CODE_SECTOR_TYPE;
        }//end of else if (strIdentifier.equals("sectorTypeCode"))
        else if (strIdentifier.equals("fundDisbursalCode"))
        {
            strQuery = strTPA_INS_DISBURSAL_CODE;
        }//end of else if (strIdentifier.equals("fundDisbursalCode"))
        
        else if (strIdentifier.equals("BRO"))  //For TTK users
        {
            strQuery = strTPA_ROLES_CODE_BRO;
        }//end of else if (strIdentifier.equals("TTK"))
        
        else if(strIdentifier.equals("designationBRO"))
        {
            strQuery = strTPA_DESIGNATION_CODE_BRO;
        }//end of else if(strIdentifier.equals("designationTTK"))
        
        else if (strIdentifier.equals("frequencyCode"))
        {
            strQuery = strTPA_INS_FREQUENCY_CODE;
        }//end of else if (strIdentifier.equals("frequencyCode"))
        else if (strIdentifier.equals("empHistory"))
        {
            strQuery = strTPA_GENERAL_CODE_EMP_HISTORY;
        }//end of else if (strIdentifier.equals("empHistory"))
        else if (strIdentifier.equals("userStatus"))
        {
            strQuery = strTPA_GENERAL_CODE_USER_STATUS;
        }//end of else if (strIdentifier.equals("userStatus"))
        else if (strIdentifier.equals("prefix"))
        {
            strQuery = strTPA_GENERAL_CODE_PREFIX_NAME;
        }//end of else if (strIdentifier.equals("prefix"))
        else if (strIdentifier.equals("tpaUsers"))
        {
            strQuery = strTPA_GENERAL_CODE_TPA_USERS;
        }//end of else if (strIdentifier.equals("tpaUsers"))
        else if (strIdentifier.equals("HOS"))  // For NHCP users
        {
            strQuery = strTPA_ROLES_CODE_HOS;
        }//end of else if (strIdentifier.equals("HOS"))
        else if (strIdentifier.equals("PTR"))  // For Partner 
        {
            strQuery = strTPA_ROLES_CODE_PTR;
        }//end of else if (strIdentifier.equals("PTR"))
        else if (strIdentifier.equals("INS"))  //For Insurance users
        {
            strQuery = strTPA_ROLES_CODE_INS;
        }//end of else if (strIdentifier.equals("INS"))
        else if (strIdentifier.equals("TTK"))  //For TTK users
        {
            strQuery = strTPA_ROLES_CODE_TTK;
        }//end of else if (strIdentifier.equals("TTK"))
        else if (strIdentifier.equals("CAL"))  //For Callcenter users
        {
            strQuery = strTPA_ROLES_CODE_CAL;
        }//end of else if (strIdentifier.equals("CAL"))
        else if (strIdentifier.equals("COR"))  //For Corporate users
        {
            strQuery = strTPA_ROLES_CODE_COR;
        }//end of else if (strIdentifier.equals("COR"))
        else if (strIdentifier.equals("AGN"))  //For Agent users
        {
            strQuery = strTPA_ROLES_CODE_AGN;
        }//end of else if (strIdentifier.equals("AGN"))
        else if (strIdentifier.equals("DMC"))  //For DMC users
        {
            strQuery = strTPA_ROLES_CODE_DMC;
        }//end of else if (strIdentifier.equals("DMC"))
        else if (strIdentifier.equals("associateUsers"))
        {
            strQuery = strTPAGENERAL_CODE_ASSOCIATE_USER_LIST;
        }//end of else if (strIdentifier.equals("associateUsers"))
        else if (strIdentifier.equals("groupType"))
        {
            strQuery = strTPAGENERAL_CODE_GROUP_TYPE;
        }//end of else if (strIdentifier.equals("groupType"))
        else if (strIdentifier.equals("departmentID"))
        {
            strQuery = strTPAGENERAL_CODE_DEPARTMENT_ID;
        }//end of else if (strIdentifier.equals("departmentID"))
        else if(strIdentifier.equals("designationTTK"))
        {
            strQuery = strTPA_DESIGNATION_CODE_TTK;
        }//end of else if(strIdentifier.equals("designationTTK"))
        else if(strIdentifier.equals("designationBAK"))
        {
            strQuery = strTPA_DESIGNATION_CODE_BAK;
        }//end of else if(strIdentifier.equals("designationBAK"))
        else if(strIdentifier.equals("designationCAL"))
        {
            strQuery = strTPA_DESIGNATION_CODE_CAL;
        }//end of else if(strIdentifier.equals("designationCAL"))
        else if(strIdentifier.equals("designationHOS"))
        {
            strQuery = strTPA_DESIGNATION_CODE_HOS;
        }//end of else if(strIdentifier.equals("designationHOS"))
        else if(strIdentifier.equals("designationINS"))
        {
            strQuery = strTPA_DESIGNATION_CODE_INS;
        }//end of else if(strIdentifier.equals("designationINS"))
        else if(strIdentifier.equals("designationCOR"))
        {
            strQuery = strTPA_DESIGNATION_CODE_COR;
        }//end of else if(strIdentifier.equals("designationCOR"))
        else if(strIdentifier.equals("designationDMC"))
        {
            strQuery = strTPA_DESIGNATION_CODE_DMC;
        }//end of else if(strIdentifier.equals("designationDMC"))
        else if(strIdentifier.equals("enrollment"))
        {
            strQuery = strTPAGENERAL_CODE_ENROLLMENT;
        }//end of else if(strIdentifier.equals("enrollment"))
        else if(strIdentifier.equals("gender"))
        {
            strQuery = strTPAGENERAL_CODE_GENDER_DETAILS;
        }//end of else if(strIdentifier.equals("gender"))
        else if(strIdentifier.equals("clarificationstatus"))
        {
        	strQuery = strTPA_BATCH_CLARIFICATION_STATUS;
        }//end of else if(strIdentifier.equals("clarificationstatus"))
        else if(strIdentifier.equals("INSStatusTypeID"))
        {
            strQuery = strTPAGENERAL_CODE_INS_TERM_STATUS;
        }//end of else if(strIdentifier.equals("INSStatusTypeID"))
        else if(strIdentifier.equals("subTypeID"))
        {
            strQuery = strTPAGENERAL_CODE_POLICY_SUB_TYPE;
        }//end of else if(strIdentifier.equals("subTypeID"))
        else if(strIdentifier.equals("policyMedium"))
        {
            strQuery = strTPAGENERAL_CODE_POLICY_MEDIUM;
        }//end of else if(strIdentifier.equals("policyMedium"))
        else if(strIdentifier.equals("nonFloater"))
        {
            strQuery = strPOLICY_SUB_TYPE_NONFLOATER;
        }//end of else if(strIdentifier.equals("nonFloater"))
        else if(strIdentifier.equals("floater"))
        {
            strQuery = strPOLICY_SUB_TYPE_FLOATER;
        }//end of else if(strIdentifier.equals("floater"))
        else if(strIdentifier.equals("floaterNonFloater"))
        {
            strQuery = strPOLICY_SUB_TYPE_FLOATER_NON;
        }//end of else if(strIdentifier.equals("floaterNonFloater"))
        else if(strIdentifier.equals("floaterRestrict"))
        {
            strQuery = strPOLICY_SUB_TYPE_FLOATER_RESTRICT;
        }//end of else if(strIdentifier.equals("floaterRestrict"))
        else if(strIdentifier.equals("issueCheque"))
        {
            strQuery = strTPAGENERAL_CODE_ISSUE_CHEQUE;
        }//end of else if(strIdentifier.equals("issueCheque"))
        else if(strIdentifier.equals("occupation"))
        {
            strQuery = strTPAGENERAL_CODE_OCCUPATION;
        }//end of else if(strIdentifier.equals("occupation"))
        else if(strIdentifier.equals("nationalities"))
        {
            strQuery = strNATIONALITIES_CODE_DESC;
        }//end of else if(strIdentifier.equals("nationalities"))
        else if(strIdentifier.equals("maritalStatuses"))
        {
            strQuery = strMARITALSTATUSES_CODE_DESC;
        }//end of else if(strIdentifier.equals("maritalStatuses"))
        else if(strIdentifier.equals("memberCategory"))
        {
            strQuery = strTPAGENERAL_CODE_CATEGORY;
        }//end of else if(strIdentifier.equals("memberCategory"))
        else if(strIdentifier.equals("enrollmentWorkflow"))
        {
            strQuery = strTPAEVENTENROLLMENT;
        }//end of else if(strIdentifier.equals("enrollmentWorkflow"))
        else if(strIdentifier.equals("endorsementWorkflow"))
        {
            strQuery = strTPAEVENTENDORSEMENT;
        }//end of else if(strIdentifier.equals("endorsementWorkflow"))
        else if(strIdentifier.equals("claimsWorkflow"))
        {
            strQuery = strTPAEVENTCLAIMS;
        }//end of else if(strIdentifier.equals("claimsWorkflow"))
        else if(strIdentifier.equals("codecleanupWorkflow"))
        {
            strQuery = strTPAEVENTCODECLEANUP;
        }//end of else if(strIdentifier.equals("codecleanupWorkflow"))
        else if(strIdentifier.equals("productPlan"))
        {
            strQuery = strTPA_INS_PRODUCT_PLAN;
        }//end of else if(strIdentifier.equals("productPlan"))
        else if(strIdentifier.equals("icdDescription"))
        {
            strQuery = str_PED_CODE_DESCRIPTION;
        }//end of else if(strIdentifier.equals("icdDescription"))
        else if(strIdentifier.equals("policyStatus"))
        {
            strQuery = strPOLICY_STATUS;
        }//end of else if(strIdentifier.equals("policyStatus"))
        //ADDED FOR DONOR
        else if(strIdentifier.equals("donorClaimStatus"))
        {
            strQuery = strDONOR_CLAIM_STATUS;
        }//end of else if(strIdentifier.equals("policyStatus"))
        
        else if(strIdentifier.equals("printStatus"))
        {
            strQuery = strBATCH_PRINT_STATUS;
        }//end of else if(strIdentifier.equals("printStatus"))
        else if(strIdentifier.equals("genEnrollmentID"))
        {
            strQuery = strENROLLMENT_ID_TYPE;
        }//end of else if(strIdentifier.equals("genEnrollmentID"))
        else if(strIdentifier.equals("ttkofficetype"))
        {
            strQuery = strTPA_OFFICE_TYPE_ID;
        }//end of else if(strIdentifier.equals("ttkofficetype"))
        else if(strIdentifier.equals("ttkheadofficelist"))
        {
            strQuery = strTPA_HEAD_OFFICE_NAME;
        }//end of else if(strIdentifier.equals("ttkheadofficelist"))
        else if(strIdentifier.equals("endorsementType"))
        {
            strQuery = strENDORSEMENTTYPE;
        }//end of else if(strIdentifier.equals("endorsementType"))
        else if(strIdentifier.equals("amount"))
        {
            strQuery = strAMOUNT;
        }//end of else if(strIdentifier.equals("amount"))
        else if(strIdentifier.equals("assignedTo"))
        {
            strQuery = strASSIGNED_TO;
        }//end of else if(strIdentifier.equals("assignedTo"))
        else if(strIdentifier.equals("source"))
        {
            strQuery = strRECD_SOURCE;
        }//end of else if(strIdentifier.equals("source"))
        else if(strIdentifier.equals("encounterTypes"))
        {
            strQuery = strENCOUNTER_TYPES;
        }//end of else if(strIdentifier.equals("encounterTypes"))
        else if(strIdentifier.equals("encounterStartTypes"))
        {
            strQuery = strENCOUNTER_START_TYPES;
        }//end of else if(strIdentifier.equals("encounterTypes"))
        else if(strIdentifier.equals("encounterEndTypes"))
        {
            strQuery = strENCOUNTER_END_TYPES;
        }//end of else if(strIdentifier.equals("encounterEndTypes"))
        else if(strIdentifier.equals("treatmentTypes"))
        {
            strQuery = strTREATMENT_TYPES;
        }//end of else if(strIdentifier.equals("encounterTypes"))
        else if(strIdentifier.equals("preauthStatus"))
        {
            strQuery = strPREAUTH_STATUS;
        }//end of else if(strIdentifier.equals("preauthStatus"))
        else if(strIdentifier.equals("preauthEnhStatus"))
        {
            strQuery = strENH_PREAUTH_STATUS;
        }//end of else if(strIdentifier.equals("preauthEnhStatus"))
        else if(strIdentifier.equals("newDeletion"))
        {
        	strQuery=strYears;
        }//else if(strIdentifier.equals("newDeletion"))
		
        else if(strIdentifier.equals("claimStatus"))
        {
            strQuery = strCLAIM_STATUS;
        }//end of else if(strIdentifier.equals("claimStatus"))
        else if(strIdentifier.equals("partnerpreauthStatus"))
        {
            strQuery = strPARTNER_PREAUTH_STATUS;
        }//else if(strIdentifier.equals("partnerpreauthStatus"))
        else if(strIdentifier.equals("investStatus"))
        {
            strQuery = strINVEST_STATUS;
        }//end of else if(strIdentifier.equals("investStatus"))
        else if(strIdentifier.equals("hospitalizationType"))
        {
            strQuery = strHOSPITALIZATION_TYPE;
        }//end of else if(strIdentifier.equals("hospitalizationType"))
        else if(strIdentifier.equals("hospitalizedFor"))
        {
            strQuery = strHOSPITALIZED_FOR;
        }//end of else if(strIdentifier.equals("hospitalizedFor"))
        else if(strIdentifier.equals("closeProximity"))
        {
            strQuery = strCLOSE_PROXIMITY;
        }//end of else if(strIdentifier.equals("closeProximity"))
        else if(strIdentifier.equals("preauthPriority"))
        {
            strQuery = strPREAUTH_PRIORITY;
        }//end of else if(strIdentifier.equals("preauthPriority"))
        else if(strIdentifier.equals("coInsCompNameList"))
        {
            strQuery = strCoIns_Comp_Name_List;
        }
        else if(strIdentifier.equals("preauthType"))
        {
            strQuery = strPREAUTH_TYPE;
        }//end of else if(strIdentifier.equals("preauthType"))
        else if(strIdentifier.equals("InsComp"))
        {
            strQuery = strINS_TYPE;
        }//end of else if(strIdentifier.equals("preauthType"))

        else if(strIdentifier.equals("shortfallStatus"))
        {
            strQuery = strSHORTFALL_STATUS;
        }//end of else if(strIdentifier.equals("shortfallStatus"))
		 else if(strIdentifier.equals("claimShortfallStatus"))
        {
            strQuery = strCLAIM_SHORTFALL_STATUS;
        }//end of else if(strIdentifier.equals("shortfallStatus"))
     
        else if(strIdentifier.equals("shortfallType"))
        {
            strQuery = strSHORTFALL_TYPE;
        }//end of else if(strIdentifier.equals("shortfallType"))
        else if(strIdentifier.equals("claimShortfallType"))
        {
            strQuery = strCLAIM_SHORTFALL_TYPE;
        }//end of else if(strIdentifier.equals("claimShortfallType"))
		//Shortfall CR KOC1179
        else if(strIdentifier.equals("claimShortfallTypeNew"))
        {
            strQuery = strCLAIM_SHORTFALL_TYPE_NEW;
        }//end of else if(strIdentifier.equals("claimShortfallType"))
	
        else if(strIdentifier.equals("claimShortfallTemplateType"))
        {
            strQuery = strCLAIM_SHORTFALL_TEMPLATE_TYPE;
        }//end of else if(strIdentifier.equals("claimShortfallTemplateType"))
        //End Shortfall CR KOC1179
        //shortfall phase1
        else if(strIdentifier.equals("claimShortfallTemplateNetworkType"))
        {
            strQuery = strCLAIM_SHORTFALL_TEMPLATE_NETWORK_TYPE;
        }//end of else if(strIdentifier.equals("claimShortfallTemplateType"))
        
      //shortfall phase1
        else if(strIdentifier.equals("documentType"))
        {
            strQuery = strSUPPORT_DOC;
        }//end of else if(strIdentifier.equals("documentType"))
        else if(strIdentifier.equals("specialty"))
        {
            strQuery = strSpecialty;
        }//end of else if(strIdentifier.equals("specialty"))
        else if(strIdentifier.equals("treatmentPlan"))
        {
            strQuery = strTREATMENT_PLAN;
        }//end of else if(strIdentifier.equals("treatmentPlan"))
        else if(strIdentifier.equals("treatmentPlanICD"))
        {
            strQuery = strICD_TREATMENT_PLAN;
        }//end of else if(strIdentifier.equals("treatmentPlanICD"))
        else if(strIdentifier.equals("logType"))
        {
            strQuery = strLOG_TYPE;
        }//end of else if(strIdentifier.equals("logType"))
        else if(strIdentifier.equals("logInfo"))
        {
            strQuery = strLOG_INFO;
        }//end of else if(strIdentifier.equals("logInfo"))
        else if(strIdentifier.equals("dataEntrylogType")) //ParallelAlert
        {
            strQuery = strDATAENTRYLOG_TYPE;
        }//end of else if(strIdentifier.equals("logType"))
        else if(strIdentifier.equals("dataEntrylogInfo"))
        {
            strQuery = strDATAENTRYLOG_INFO;
        }//end of else if(strIdentifier.equals("logInfo"))
        else if(strIdentifier.equals("historyType"))
        {
            strQuery = strHISTORY_TYPE;
        }//end of else if(strIdentifier.equals("historyType"))
        else if(strIdentifier.equals("claimHistoryType"))
        {
            strQuery = strCLAIM_HISTORY_TYPE;
        }//end of else if(strIdentifier.equals("claimHistoryType"))
		else if(strIdentifier.equals("accountHistoryType")) //koc11 koc 11
        {
            strQuery = strACCOUNT_HISTORY_TYPE; 
        }//end of else if(strIdentifier.equals("claimHistoryType"))
        else if(strIdentifier.equals("agencyType"))
        {
            strQuery = strINVESTIGATION_AGENCY;
        }//end of else if(strIdentifier.equals("agencyType"))
        else if(strIdentifier.equals("investReason"))
        {
            strQuery = strINVEST_REASON;
        }//end of else if(strIdentifier.equals("investReason"))
        else if(strIdentifier.equals("authReason"))
        {
            strQuery = strAUTH_REASON;
        }//end of else if(strIdentifier.equals("authReason"))
        else if(strIdentifier.equals("shortfallReason"))
        {
            strQuery = strSHORTFALL_REASON;
        }//end of else if(strIdentifier.equals("shortfallReason"))
        else if(strIdentifier.equals("durationType"))
        {
            strQuery = strDURATION_TYPE;
        }//end of else if(strIdentifier.equals("durationType"))
        else if(strIdentifier.equals("investType"))
        {
            strQuery = strINVESTIGATION_TYPE;
        }//end of else if(strIdentifier.equals("investType"))
        else if(strIdentifier.equals("receivedFrom"))
        {
            strQuery = strRCVD_FROM;
        }//end of else if(strIdentifier.equals("receivedFrom"))
        else if(strIdentifier.equals("qualityStatus"))
        {
            strQuery = strQUALITY_STATUS;
        }//end of else if(strIdentifier.equals("qualityStatus"))
        else if(strIdentifier.equals("assignUsers"))
        {
            strQuery = strASSIGN_USERS;
        }//end of else if(strIdentifier.equals("assignUsers"))
        else if(strIdentifier.equals("conflict"))
        {
            strQuery = strCONFLICT;
        }//end of else if(strIdentifier.equals("conflict"))
        else if(strIdentifier.equals("relshipGender"))
        {
            strQuery = strRELSHIP_GENDER;
        }//end of else if(strIdentifier.equals("relshipGender"))
        else if(strIdentifier.equals("adminAuthority"))
        {
            strQuery = strADMIN_AUTHORITY;
        }//end of else if(strIdentifier.equals("adminAuthority"))
        else if(strIdentifier.equals("allocatedType"))
        {
            strQuery = strALLOCATED_TYPE;
        }//end of else if(strIdentifier.equals("allocatedType"))
        else if(strIdentifier.equals("batchStatus"))
        {
            strQuery = strBatchStatus;
        }//end of else if(strIdentifier.equals("batchStatus"))
        else if(strIdentifier.equals("courierStatus"))
        {
            strQuery = strCOURIER_STATUS;
        }//end of else if(strIdentifier.equals("courierStatus"))
       
        else if(strIdentifier.equals("contentType"))
        {
            strQuery = strCONTENT_TYPE;
        }//end of else if(strIdentifier.equals("contentType"))
        else if(strIdentifier.equals("courierName"))
        {
            strQuery = strCOURIER_NAME;
        }//end of else if(strIdentifier.equals("courierName"))
        //added for courier
        else if(strIdentifier.equals("courierDocType"))
        {
            strQuery = strCOURIER_DOCTYPE;
        }//end of else if(strIdentifier.equals("courierName"))
        //end added for courier
        else if(strIdentifier.equals("officeType"))
        {
            strQuery = strOFFICE_TYPE;
        }//end of else if(strIdentifier.equals("officeType"))
        else if(strIdentifier.equals("headOffice"))
        {
            strQuery = strBANK_HEAD_OFFICE;
        }//end of else if(strIdentifier.equals("headOffice"))
        else if(strIdentifier.equals("acctStatus"))
        {
            strQuery = strACCT_STATUS;
        }//end of else if(strIdentifier.equals("acctStatus"))
        else if(strIdentifier.equals("transType"))
        {
            strQuery = strTRANSACTION_TYPE;
        }//end of else if(strIdentifier.equals("transType"))
        else if(strIdentifier.equals("transTypeDeposit"))
        {
            strQuery = strDEPOSIT_TRANSACTION_TYPE;
        }//end of else if(strIdentifier.equals("transTypeDeposit"))
        else if(strIdentifier.equals("floatTransType"))
        {
            strQuery = strFLOATTRANSACTIONTYPE;
        }//end of else if(strIdentifier.equals("floatTransType"))
        else if(strIdentifier.equals("floatType"))
        {
            strQuery = strFLOAT_TYPE;
        }//end of else if(strIdentifier.equals("floatType"))
        else if(strIdentifier.equals("claimType"))
        {
            strQuery = strCLAIM_TYPE;
        }//end of else if(strIdentifier.equals("claimType"))
        else if(strIdentifier.equals("chequeStatus"))
        {
            strQuery = strCHEQUE_STATUS;
        }//end of else if(strIdentifier.equals("chequeStatus"))
        else if(strIdentifier.equals("chequeStatusStale"))
        {
            strQuery = strSTALE_CHEQUE_STATUS;
        }//end of else if(strIdentifier.equals("chequeStatusStale"))
        
        //added as  per KOC 1175 Change request
        else if(strIdentifier.equals("chequeStatuswithoutStale"))
        {
            strQuery = strCHEQUE_STATUS_WithoutStale;
        }//end of else if(strIdentifier.equals("chequeStatusStale"))
        //added as  per KOC 1175 Change request
        else if(strIdentifier.equals("courierType"))
        {
            strQuery = strCOURIER_TYPE;
        }//end of else if(strIdentifier.equals("courierType"))
        else if(strIdentifier.equals("bufferMode"))
        {
            strQuery = strBUFFER_MODE;
        }//end of else if(strIdentifier.equals("bufferMode"))
        else if(strIdentifier.equals("entryMode"))
        {
            strQuery = strENTRY_MODE;
        }//end of else if(strIdentifier.equals("entryMode"))
        else if(strIdentifier.equals("supportBuffer"))
        {
            strQuery = strSUPPORT_DOC_BUFFER;
        }//end of else if(strIdentifier.equals("supportBuffer"))
        else if(strIdentifier.equals("bufferStatus"))
        {
            strQuery = strBUFFER_STATUS;
        }//end of else if(strIdentifier.equals("bufferStatus"))
        else if(strIdentifier.equals("claimsSupportDoc"))
        {
            strQuery = strCLAIMS_SUPPORT_DOC;
        }//end of else if(strIdentifier.equals("claimsSupportDoc"))
        else if(strIdentifier.equals("claimsSupportBuffer"))
        {
            strQuery = strCLAIMS_SUPPORT_DOC_BUFFER;
        }//end of else if(strIdentifier.equals("claimsSupportBuffer"))
        else if(strIdentifier.equals("voucherStatus"))
        {
            strQuery = strVOUCHER_STATUS;
        }//end of else if(strIdentifier.equals("voucherStatus"))
        else if(strIdentifier.equals("paymentMethod"))
        {
            strQuery = strPAYMENT_METHOD;
        }//end of else if(strIdentifier.equals("paymentMethod"))
        else if(strIdentifier.equals("inwardStatus"))
        {
            strQuery = strINWARD_STATUS;
        }//end of else if(strIdentifier.equals("inwardStatus"))
        else if(strIdentifier.equals("claimDocumentType"))
        {
            strQuery = strDOCUMENT_TYPE;
        }//end of else if(strIdentifier.equals("claimDocumentType"))
        else if(strIdentifier.equals("claimSource"))
        {
            strQuery = strCLAIM_SOURCE;
        }//end of else if(strIdentifier.equals("claimSource"))
        else if(strIdentifier.equals("claimMode"))
        {
            strQuery = strCLAIM_MODE;
        }//end of else if(strIdentifier.equals("claimMode"))
        else if(strIdentifier.equals("requestType"))
        {
            strQuery = strREQUEST_TYPE;
        }//end of else if(strIdentifier.equals("requestType"))
        else if(strIdentifier.equals("claimSubType"))
        {
            strQuery = strCLAIM_SUBTYPE;
        }//end of else if(strIdentifier.equals("claimSubType"))
        
        //OPD_4_hosptial     
        
        else if(strIdentifier.equals("PaymentType"))
        {
            strQuery = strPAYMENT_TYPE;
        }//end of else if(strIdentifier.equals("PaymentType")) 
        
        else if(strIdentifier.equals("healthCheckType"))
        {
            strQuery = strHEALTH_CHECK_TYPE;
        }//end of else if(strIdentifier.equals("healthCheckType"))    
        
        //OPD_4_hosptial
        
        else if(strIdentifier.equals("docType"))
        {
            strQuery = strDOC_TYPE;
        }//end of else if(strIdentifier.equals("docType"))
        else if(strIdentifier.equals("docReasonType"))
        {
            strQuery = strDOC_REASON_TYPE;
        }//end of else if(strIdentifier.equals("docReasonType"))
        else if(strIdentifier.equals("approveReason"))
        {
            strQuery = strAPPROVE_REASON;
        }//end of else if(strIdentifier.equals("approveReason"))
        else if(strIdentifier.equals("accountHead"))
        {
            strQuery = strACCOUNT_HEAD_TYPE;
        }//end of else if(strIdentifier.equals("accountHead"))
        
        //added for maternity
        else if(strIdentifier.equals("vaccineType"))
        {
            strQuery = strVACCINE_TYPE;
        }//end of else if(strIdentifier.equals("accountHead"))
      // end added for maternity
        else if(strIdentifier.equals("dischargeCondition"))
        {
            strQuery = strDischarge_Condition;
        }//end of else if(strIdentifier.equals("dischargeCondition"))
        else if(strIdentifier.equals("onlineAccess"))
        {
            strQuery = strONLINE_ACCESS;
        }//end of else if(strIdentifier.equals("onlineAccess"))
        else if(strIdentifier.equals("summaryType"))
        {
            strQuery = strSUMMARY_TYPE;
        }//end of else if(strIdentifier.equals("summaryType"))
        else if(strIdentifier.equals("callerType"))
        {
            strQuery = strCALLER_TYPE;
        }//end of else if(strIdentifier.equals("callerType"))
        else if(strIdentifier.equals("callLogType"))
        {
            strQuery = strCALL_LOG_TYPE;
        }//end of else if(strIdentifier.equals("callLogType"))
        else if(strIdentifier.equals("callReason"))
        {
            strQuery = strCALL_REASON;
        }//end of else if(strIdentifier.equals("callReason"))
        else if(strIdentifier.equals("callSubReason"))
        {
            strQuery = strCALL_SUB_REASON;
        }//end of else if(strIdentifier.equals("callSubReason"))
        else if(strIdentifier.equals("callCategory"))
        {
            strQuery = strCALL_CATEGORY;
        }//end of else if(strIdentifier.equals("callCategory"))
        else if(strIdentifier.equals("callSubCategory"))
        {
            strQuery = strCALL_SUB_CATEGORY;
        }//end of else if(strIdentifier.equals("callSubCategory"))
        else if(strIdentifier.equals("callAnswerCode"))
        {
            strQuery = strCALL_ANSWER_CODE;
        }//end of else if(strIdentifier.equals("callAnswerCode"))
        else if(strIdentifier.equals("callLoggedBY"))
        {
            strQuery = strCALL_LOGGED_BY;
        }//end of else if(strIdentifier.equals("callLoggedBY"))
        else if(strIdentifier.equals("callRelateTo"))
        {
            strQuery = strCALL_RELATE_TO;
        }//end of else if(strIdentifier.equals("callRelateTo"))
        else if(strIdentifier.equals("callStatus"))
        {
            strQuery = strCALL_STATUS;
        }//end of else if(strIdentifier.equals("callStatus"))
        else if(strIdentifier.equals("ruleAccountHead"))
        {
            strQuery = strRULE_ACCOUNT_HEAD_TYPE;
        }//end of else if(strIdentifier.equals("ruleAccountHead"))
        else if(strIdentifier.equals("courierSource"))
        {
            strQuery = strCOURIER_SOURCE;
        }//end of else if(strIdentifier.equals("courierSource"))
        else if(strIdentifier.equals("template"))
        {
            strQuery = strTPA_POLICY_TEMPLATES;
        }//end of else if(strIdentifier.equals("template"))
        else if(strIdentifier.equals("callSource"))
        {
            strQuery = strCALL_SOURCE;
        }//end of else if(strIdentifier.equals("callSource"))
        else if(strIdentifier.equals("bankName"))
        {
            strQuery = strBANK_NAME;
        }//end of else if(strIdentifier.equals("bankName"))
        else if(strIdentifier.equals("chequeTemplate"))
        {
            strQuery = strCHEQUE_TEMPLATE_ID;
        }//end of else if(strIdentifier.equals("chequeTemplate"))
        else if(strIdentifier.equals("dayCareProcedures"))
        {
            strQuery = strDAYCARE_PROCEDURES;
        }//end of else if(strIdentifier.equals("dayCareProcedures"))
        else if(strIdentifier.equals("voucherRequired"))
        {
            strQuery = strVOUCHER_REQUIRED;
        }//end of else if(strIdentifier.equals("voucherRequired"))
        else if(strIdentifier.equals("nhcpLetterType"))
        {
            strQuery = strNHCPLETTER_TYPE;
        }//end of else if(strIdentifier.equals("nhcpLetterType"))
        else if(strIdentifier.equals("mrLetterType"))
        {
            strQuery = strMRLETTER_TYPE;
        }//end of else if(strIdentifier.equals("mrLetterType"))
        else if(strIdentifier.equals("liabilityStatus"))
        {
            strQuery = strLIABILITY_STATUS;
        }//end of else if(strIdentifier.equals("liabilityStatus"))
        else if(strIdentifier.equals("productChange"))
        {
            strQuery = strPRODUCT_CHANGE_YN;
        }//end of else if(strIdentifier.equals("productChange"))
        else if(strIdentifier.equals("debitAssoc"))
        {
            strQuery = strDEBIT_ASSOICATE;
        }//end of else if(strIdentifier.equals("debitAssoc"))
        else if(strIdentifier.equals("debitType"))
        {
            strQuery = strDEBIT_TYPE;
        }//end of else if(strIdentifier.equals("debitType"))
        else if(strIdentifier.equals("debitTypeDraft"))
        {
            strQuery = strDEBIT_TYPE_DRAFT;
        }//end of else if(strIdentifier.equals("debitTypeDraft"))
        else if(strIdentifier.equals("durationMonths"))
        {
            strQuery = strMONTH;
        }//end of else if(strIdentifier.equals("durationMonths"))
        else if(strIdentifier.equals("daycareGroup"))
        {
        	strQuery=strDAYCARE_GROUP;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("currencyGroup"))
        {
        	strQuery=strCURRENCY_GROUP;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("networkGroup"))
        {
        	strQuery=strNETWORK_GROUP;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("providerNetworkGroup"))
        {
        	strQuery=strPROVIDER_NETWORK_GROUP;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("treatementType"))
        {
        	strQuery=strTREATMENT_TYPE_ALLOWED;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("deductablesPubNetwork"))
        {
        	strQuery=strDEDUCTIBLES_PUB_NETWORK;
        }//end of else if(strIdentifier.equals("deductablesPubNetwork"))
        else if(strIdentifier.equals("deductablesPriNetwork"))
        {
        	strQuery=strDEDUCTIBLES_PRI_NETWORK;
        }//end of else if(strIdentifier.equals("deductablesPriNetwork"))
        else if(strIdentifier.equals("patientGroup"))
        {
        	strQuery=strPATIENT_GROUP;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("govHospitalGroup"))
        {
        	strQuery=strGOV_HOSPITAL_GROUP;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("maternityGroup"))
        {
        	strQuery=strMATERNITY_GROUP;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("drugsGroup"))
        {
        	strQuery=strDRUGS_GROUP;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("servicesList"))
        {
        	strQuery=strSERVICES_LIST;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("dayCareList"))
        {
        	strQuery=strDAY_CARE_LIST;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("chronicCondition"))
        {
        	strQuery=strCHRONIC_CONDITION_LIST;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        else if(strIdentifier.equals("dieticianNeutricianList"))
        {
        	strQuery=strDIETICIAN_NEUTRICIAN_LIST;
        }//end of else if(strIdentifier.equals("daycareGroup"))womenHormonalList
        else if(strIdentifier.equals("womenHormonalList"))
        {
        	strQuery=strWOMEN_HORMONAL_LIST;
        }//end of else if(strIdentifier.equals("daycareGroup"))
      //added for KOC-1310
        else if(strIdentifier.equals("cancerICDS"))
        {
        	strQuery=strCANCER_ICD_LIST; 
        }
        //ended
        //added for KOC-1310
        else if(strIdentifier.equals("cancerGroup"))
        {
        	strQuery=strCANCER_GROUP;
        }
        
        else if(strIdentifier.equals("maternityICDGroup"))
        {
        	strQuery=strMaternityICDGroup;
        }//end of else if(strIdentifier.equals("daycareGroup"))
        
        
        
        
        else if(strIdentifier.equals("disabilityType"))
        {
        	strQuery=strDISABILITY_TYPE;
        }//end of else if(strIdentifier.equals("disabilityType"))
        else if(strIdentifier.equals("daycareProduct"))
        {
        	strQuery=strDAYCARE_PRODUCT;
        }//end of else if(strIdentifier.equals("daycareProduct"))
        else if(strIdentifier.equals("medicineSystem"))
        {
        	strQuery=strSYETM_OF_MEDICINE;
        }//end of else if(strIdentifier.equals("medicineSystem"))
        else if(strIdentifier.equals("ailmentClaimType"))
        {
        	strQuery=strCLAIM_MEDICAL_TYPE;
        }//end of else if(strIdentifier.equals("ailmentClaimType"))
        else if(strIdentifier.equals("caseType"))
        {
        	strQuery=strCASE_TYPE;
        }//end of else if(strIdentifier.equals("caseType"))
        else if(strIdentifier.equals("webloginLink"))
        {
        	strQuery=strWEB_LOGIN_LINK_TYPE;
        }//end of else if(strIdentifier.equals("webloginLink"))
        else if(strIdentifier.equals("webloginLinkReport"))
        {
        	strQuery=strWEB_LOGIN_LINK_REPORT;
        }//end of else if(strIdentifier.equals("webloginLinkReport"))
        else if(strIdentifier.equals("webloginHRAddition"))
        {
        	strQuery=strWEB_LOGIN_HR_ADITION;
        }//end of else if(strIdentifier.equals("webloginHRAddition"))
        else if(strIdentifier.equals("webloginEmpAddition"))
        {
        	strQuery=strWEB_LOGIN_EMP_ADDITION;
        }//end of else if(strIdentifier.equals("webloginEmpAddition"))
        else if(strIdentifier.equals("webloginDOI"))
        {
        	strQuery=strWEB_LOGIN_DOI_SETTINGS;
        }//end of else if(strIdentifier.equals("webloginDOI"))
        else if(strIdentifier.equals("webloginAddSuminsured"))
        {
        	strQuery=strWEB_LOGIN_SUM_SETTINGS;
        }//end of else if(strIdentifier.equals("webloginAddSuminsured"))
        //Added for IBM....koc-1216
		//added by Praveen
		else if(strIdentifier.equals("webloginOptin"))
		{
			strQuery=strWEB_OPT_SETTINGS;
		}//end of else if(strIdentifier.equals("webloginOptin"))
		 //Ended...
        else if(strIdentifier.equals("webloginCancellation"))
        {
        	strQuery=strWEB_LOGIN_CANCELLATION;
        }//end of else if(strIdentifier.equals("webloginCancellation"))
        else if(strIdentifier.equals("webloginSoftcopy"))
        {
        	strQuery=strWEB_LOGIN_SOFTCOPY_UPLOAD;
        }//end of else if(strIdentifier.equals("webloginSoftcopy"))
        else if(strIdentifier.equals("webloginSendMailGenTypeID"))
        {
        	strQuery=strWEB_LOGIN_SEND_MAIL_GEN_TYPE_ID;
        }//end of else if(strIdentifier.equals("webloginSendMailGenTypeID"))
        else if(strIdentifier.equals("webloginMailGenTypeID"))
        {
        	strQuery=strWEB_LOGIN_MAIL_CONTENT;
        }//end of else if(strIdentifier.equals("webloginMailGenTypeID"))
        else if(strIdentifier.equals("webloginMemConfigAdslY"))
        {
        	strQuery=strWEB_LOGIN_MEM_CONFIG_ADSL_Y;
        }//end of else if(strIdentifier.equals("webloginMemConfigAdslY"))
        else if(strIdentifier.equals("webloginMemConfigAdslN"))
        {
        	strQuery=strWEB_LOGIN_MEM_CONFIG_ADSL_N;
        }//end of else if(strIdentifier.equals("webloginMemConfigAdslN"))
        else if(strIdentifier.equals("faxGenUsers"))
        {
        	strQuery=strFax_Gen_Users;
        }//end of else if(strIdentifier.equals("faxGenUsers"))
        else if(strIdentifier.equals("faxStatus"))
        {
        	strQuery=strFax_Status;
        }//end of else if(strIdentifier.equals("faxStatus"))
        else if(strIdentifier.equals("empStatus"))
        {
        	strQuery=strEmployeeStatus;
        }//end of else if(strIdentifier.equals("empStatus"))
        else if(strIdentifier.equals("empPwdGen"))
        {
        	strQuery=strEMP_PWD_GENERATION;
        }//end of else if(strIdentifier.equals("empPwdGen"))
        else if(strIdentifier.equals("relWindowPeriod"))
        {
        	strQuery=strREL_WINDOW_PERIOD;
        }//end of else if(strIdentifier.equals("relWindowPeriod"))
        else if(strIdentifier.equals("intimationStatus"))
        {
        	strQuery=strINTIMATION_STATUS;
        }//end of else if(strIdentifier.equals("intimationStatus"))
        else if(strIdentifier.equals("intimationAccess"))
        {
        	strQuery=strINTIMATION_ACCESS;
        }//end of else if(strIdentifier.equals("intimationAccess"))
        else if(strIdentifier.equals("notificinfo"))
        {
        	strQuery=strNOTIFICATION_INFO;
        }//end of else if(strIdentifier.equals("notificinfo"))
        else if(strIdentifier.equals("viewloghistory"))
        {
        	strQuery=strLOG_HISTORY;
        }//end of else if(strIdentifier.equals("viewloghistory"))
        else if(strIdentifier.equals("onlinequerystatus"))
        {
        	strQuery=strSUPPORT_ONLINE_QUERY;
        }//end of else if(strIdentifier.equals("onlinequerystatus"))
        else if(strIdentifier.equals("cashBenefit"))
        {
        	strQuery=strCASH_BENEFIT;
        }//end of else if(strIdentifier.equals("cashBenefit"))
        
        else if(strIdentifier.equals("criticalGroups"))
        {
        	
        	strQuery=strCRITICAL_GROUPS;
        }
        
        else if(strIdentifier.equals("caseStatus"))
        {
        	strQuery=strCASE_STATUS;
        }//end of else if(strIdentifier.equals("caseStatus"))
        else if(strIdentifier.equals("sinceWhen"))
        {
        	strQuery=strSINCE_WHEN_CODING;
        }//end of else if(strIdentifier.equals("sinceWhen"))
        else if(strIdentifier.equals("sinceWhenCall"))
        {
        	strQuery=strSINCE_WHEN_CALLCENTER;
        }//end of else if(strIdentifier.equals("sinceWhenCall"))
        else if(strIdentifier.equals("claimspending"))
        {
        	strQuery=strCLAIMS_PENDING;
        }//end of else if(strIdentifier.equals("claimspending"))
        else if(strIdentifier.equals("iobSelectBatch"))
        {
        	strQuery=strIOB_SELECT_BATCH;
        }//end of else if(strIdentifier.equals("iobSelectBatch"))
        else if(strIdentifier.equals("notificationAccess"))
        {
        	strQuery=strNOTIFICATION_ACCESS;
        }//end of else if(strIdentifier.equals("notificationAccess"))
        else if(strIdentifier.equals("reqRelated"))
        {
        	strQuery=strONLINE_ASS_REQ_RELATED;
        }//end of else if(strIdentifier.equals("reqRelated"))
        else if(strIdentifier.equals("onlineAssistance"))
        {
        	strQuery=strONLINE_ASSISTANCE;
        }//end of else if(strIdentifier.equals("onlineAssistance"))
        //TDS Drop Down values
        else if(strIdentifier.equals("hospOwnerType"))
        {
        	strQuery=strHOSP_OWNER_TYPE;
        }//end of else if(strIdentifier.equals("HospOwnerType"))
        else if(strIdentifier.equals("tdsHospCategory"))
        {
        	strQuery=strTDS_HOSP_CATEGORY;
        }//end of else if(strIdentifier.equals("tdsHospCategory"))
        else if(strIdentifier.equals("tdsRemittanceStatus"))
        {
        	strQuery=strTDS_REMIT_STATUS;
        }//end of else if(strIdentifier.equals("tdsRemittanceStatus"))
        else if(strIdentifier.equals("tdsInsuranceInfo"))
        {
        	strQuery=strTDS_INS_INFO;
        }//end of else if(strIdentifier.equals("tdsInsuranceInfo"))
        else if(strIdentifier.equals("tdsAckInfo"))
        {
        	strQuery=strTDS_ACK_INFO;
        }//end of else if(strIdentifier.equals("tdsAckInfo"))
        else if(strIdentifier.equals("tdsClaimsInclExcl"))
        {
        	strQuery=strINCLUDE_EXCLUDE;
        }//end of else if(strIdentifier.equals("tdsClaimsInclExcl"))
        else if(strIdentifier.equals("surgeryType"))
        {
        	strQuery=strSURGERY_TYPE;
        }//end of  else if(strIdentifier.equals("surgeryType"))
        else if(strIdentifier.equals("onlineRating"))
        {
        	strQuery=strONLINE_RATING;
        }//end of  else if(strIdentifier.equals("onlineRating"))
        else if(strIdentifier.equals("onlineFeedbackType"))
        {
        	strQuery=strONLINE_FEEDBACK_TYPE;
        }//end of  else if(strIdentifier.equals("onlineFeedbackType"))
        else if(strIdentifier.equals("onlineFeedbackStatus"))
        {
        	strQuery=strONLINE_FEEDBACK_STATUS;
        }//end of  else if(strIdentifier.equals("onlineFeedbackStatus"))
        else if(strIdentifier.equals("onlineFeedbackResponse"))
        {
        	strQuery=strONLINE_FEEDBACK_RESPONSE;
        }//end of  else if(strIdentifier.equals("onlineFeedbackResponse"))
        else if(strIdentifier.equals("onlineassistFeedBackType"))
        {
        	strQuery=strONLINEASSIST_FEEDBACK_TYPE;
        }//end of  else if(strIdentifier.equals("onlineassistFeedBAckType"))
        else if(strIdentifier.equals("relationshipCombination"))
        {
        	strQuery=strRELATIONSHIP_COMBINATION;
        }//end of else if(strIdentifier.equals("relationshipCombination"))
        else if(strIdentifier.equals("surgerytypeMandatoryYN"))
        {
        	strQuery=strSURGERY_TYPE_MANDATORYYN;
        }//end of else if(strIdentifier.equals("surgerytypeMandatoryYN"))
        else if(strIdentifier.equals("productNetworkTypes"))
        {
        	strQuery=strPRODUCT_NETWORK_TYPES;
        }//end of else if(strIdentifier.equals("surgerytypeMandatoryYN"))
        else if(strIdentifier.equals("tdsbatchQuarter"))
        {
        	strQuery=strTDS_BATCH_QUARTER;
        }//end of  else if(strIdentifier.equals("tdsbatchQuarter"))
        else if(strIdentifier.equals("MaternityType"))
        {
        	strQuery=strMATERNITY_TYPE;
        }//end of else if(strIdentifier.equals("MaternityType"))
        //added for 2koc
        else if(strIdentifier.equals("courierStatusDsp"))
        {
            strQuery = strCOURIERDSP_STATUS;
        }//end of else if(strIdentifier.equals("courierStatus"))
        
        //end added for 2koc

 //added for koc 1315
        else if(strIdentifier.equals("immuneType"))
        {
            strQuery = strIMMUNE_TYPE;
        }//end of else if(strIdentifier.equals("accountHead"))
      // end added for koc 1315
      //added for koc 1316
        else if(strIdentifier.equals("wellchildType"))
        {
            strQuery = strWELLCHILD_TYPE;
        }//end of else if(strIdentifier.equals("accountHead"))
      // end added for koc 1316
      //added for koc 1315
        else if(strIdentifier.equals("routAdultType"))
        {
            strQuery = strROUTADULT_TYPE;
        }//end of else if(strIdentifier.equals("accountHead"))
      // end added for koc 1315
        
        //intx
        else if(strIdentifier.equals("regAuthority"))
        {
            strQuery = strREGISTER_AUTHORITY;
        }//
        else if(strIdentifier.equals("providerType"))
        {
            strQuery = strPROVIDER_TYPE;
        }//
        else if(strIdentifier.equals("primaryNetwork"))
        {
            strQuery = strPRIMARY_NETWORK;
        }
        else if(strIdentifier.equals("primaryNetworkCheckBox"))
        {
            strQuery = strPRIMARY_NETWORK_CHECKBOX;
        }
        else if(strIdentifier.equals("descriptionCode"))
        {
            strQuery = strDESCRIPTION_CODES;
        }
        else if(strIdentifier.equals("consultTypeCode"))
        {
            strQuery = strCONSULTATION_CODES;
        }
        else if(strIdentifier.equals("nationalityTypeCode"))
        {
            strQuery = strNATIONALITY_CODES;
        }
        else if(strIdentifier.equals("providerGroup"))
        {
            strQuery = strPROVIDER_GROUP;
        }else if(strIdentifier.equals("groupProviderList"))
        {
            strQuery = strGROUPPROVIDER_LIST;
        }else if(strIdentifier.equals("providerSectorList"))
        {
            strQuery = strSECTOR_TYPE;
        }else if(strIdentifier.equals("benifitTypes"))
        {
            strQuery = strBENIFIT_TYPE;
        }else if(strIdentifier.equals("specialityType"))
        {
            strQuery = strSPECIALITY_TYPE;
        }else if(strIdentifier.equals("modeTypes"))
        {
            strQuery = strMODE_TYPE;
        }else if(strIdentifier.equals("payerCode"))
        {
            strQuery = strPAYER_CODE;
        }
        else if(strIdentifier.equals("providerCode"))
        {
            strQuery = strPROVIDER_CODE;
        }
        else if(strIdentifier.equals("networkType"))
        {
            strQuery = strNETWORK_TYPE;
        }
        else if(strIdentifier.equals("corpCode"))
        {
            strQuery = strCORPORATES;
        }else if(strIdentifier.equals("payerCodeSearch"))
        {
            strQuery = strPAYERSEARCH_CODE;
        }
        else if(strIdentifier.equals("providerCodeSearch"))
        {
            strQuery = strPROVIDERSEARCH_CODE;
        }
        else if(strIdentifier.equals("networkTypeSearch"))
        {
            strQuery = strNETWORKSEARCH_TYPE;
        }
        else if(strIdentifier.equals("corpCodeSearch"))
        {
            strQuery = strCORPORATESSEARCH;
        } else if(strIdentifier.equals("serviceName"))
        {
            strQuery = strSERVICENAME;
        }else if(strIdentifier.equals("ProfessionalsNames"))
        {
            strQuery = strProfessionalsNames;
        }else if(strIdentifier.equals("providerNames"))
        {
            strQuery = strProviderNames;
        }else if(strIdentifier.equals("maternityEncounters"))
        {
            strQuery = strMaternityEncounters;
        }else if(strIdentifier.equals("haadGroup"))
        {
            strQuery = strHaadGroup;
        }else if(strIdentifier.equals("haadfactor"))
        {
            strQuery = strHaadfactor;
        }else if(strIdentifier.equals("alspeciality"))
        {
            strQuery = strSpeciality;
        }
        else if(strIdentifier.equals("activityServiceTypes"))
        {
            strQuery = strActivityServiceTypes;
        }
        else if(strIdentifier.equals("activityServiceCodes"))
        {
            strQuery = strActivityServiceCodes;
        } else if(strIdentifier.equals("provDocsType"))
        {
            strQuery = strProvDocsType;
        }
        else if(strIdentifier.equals("groupCountry"))
        {
            strQuery = strGroupCountry;
        }
        else if(strIdentifier.equals("ethnicProfile"))
        {
            strQuery = strEthnicProfile;
        }
        else if(strIdentifier.equals("groupCurrency"))
        {
            strQuery = strGroupCurrency;
        }
        else if(strIdentifier.equals("noofEmployees"))
        {
            strQuery = strNoOfEmployees;
        }
        else if(strIdentifier.equals("averageAgeEmployees"))
        {
            strQuery = strAverageAgeEmployees;
        }
        else if(strIdentifier.equals("employeeGenderBreak"))
        {
            strQuery = strEmployeeGenderBreak;
        }
        else if(strIdentifier.equals("globalCoverge"))
        {
            strQuery = strGlobalCoverge;
        }
        else if(strIdentifier.equals("familyCoverage"))
        {
            strQuery = strFamilyCoverage;
        }
        else if(strIdentifier.equals("nameOfInsurer"))
        {
            strQuery = strNameOfInsurer;
        }
        else if(strIdentifier.equals("nameOfTPA"))
        {
            strQuery = strNameOfTPA;
        }
        else if(strIdentifier.equals("eligibility"))
        {
            strQuery = strEligibility;
        }
        else if(strIdentifier.equals("planName"))
        {
            strQuery = strPlanName;
        }
        else if(strIdentifier.equals("areaOfCover"))
        {
            strQuery = strAreaOfCover;
        }
        else if(strIdentifier.equals("systemOfMedicineGroup"))
        {
            strQuery = strSystemOfMedicineGroup;
        } 
        
        else if(strIdentifier.equals("partnerEncounterTypes"))
	    {
	    	strQuery = strPartnerEncounterTypes;
	    } 
        else if(strIdentifier.equals("main4benifitTypes"))
	    {
	        strQuery = strMain4benifitTypes;
	    } 
        
        
        else if(strIdentifier.equals("capitationCategory"))
        {
            strQuery = strCapitationCategory;
        }
        
        else if(strIdentifier.equals("XMLDashboards"))
        {
            strQuery = strXMLDashboards;
        }
        
        
        else if(strIdentifier.equals("pbenifitTypes"))
	    {
	        strQuery = strapbenifitTypes;
	    } 
        
        //bikki
        else if(strIdentifier.equals("maxBenifitList"))
	    {
	        strQuery = stralmaxBenifitList;
	    } 
        else if(strIdentifier.equals("networkList"))
	    {
	        strQuery = stralnetworkList;
	    } 
        else if(strIdentifier.equals("inpatientAreaOfCover"))
	    {
	        strQuery = stralinpatientAreaOfCover;
	    } 
        else if(strIdentifier.equals("roomType1"))
	    {
	        strQuery = stralroomType;
	    } 
        else if(strIdentifier.equals("maxChildAgeLimit"))
	    {
	        strQuery = stralmaxChildAgeLimit;
	    } 
        else if(strIdentifier.equals("companionCharges"))
	    {
	        strQuery = stralcompanionCharges;
	    } 
        
        else if(strIdentifier.equals("countryCurrencyCode"))
	    {
	        strQuery = strCountryCurrencyCode;
	    } 
        else if(strIdentifier.equals("outpatientAreaOfCover"))
	    {
	        strQuery = straloutpatientAreaOfCover;
	    } 
        else if(strIdentifier.equals("additionalHospitalCoverage"))
	    {
	        strQuery = straladditionalHospitalCoverage;
	    } 
        else if(strIdentifier.equals("consultationCD"))
	    {
	        strQuery = stralconsultationCD;
	    } 
        else if(strIdentifier.equals("drugsLimit"))
	    {
	        strQuery = straldrugsLimit;
	    } 
        else if(strIdentifier.equals("drugsCopay"))
	    {
	        strQuery = straldrugsCopay;
	    } 
        else if(strIdentifier.equals("physiotherapyLimit"))
	    {
	        strQuery = stralphysiotherapyLimit;
	    } 
        else if(strIdentifier.equals("physiotherapyCopay"))
	    {
	        strQuery = stralphysiotherapyCopay;
	    } 
        else if(strIdentifier.equals("laboratoryCD"))
	    {
	        strQuery = strallaboratoryCD;
	    } 
        
        else if(strIdentifier.equals("submissionCatagory"))
        {
            strQuery = strSubmissionCatagory;      
        }//end of else if submissionCatagory 
        
        else if(strIdentifier.equals("prebenefitTypes"))
        {
            strQuery = STR_PrebenefitTypes;      
        }//end of else if(strIdentifier.equals("claimStatusAprRejFlow"))//1274A      
        else if(strIdentifier.equals("paymentTo"))
        {
        	strQuery = strPaymentTo;
        }
        
        else if(strIdentifier.equals("claimBatchProviderList"))
        {
        	strQuery = strClaimBatchProviderList;
        }
        
        else if(strIdentifier.equals("auditUserRoleList"))
        {
        	strQuery = strAuditUserRoleList;
        }
        
        
         
        else if(strIdentifier.equals("normalDeliveryLimit"))
	    {
	        strQuery = stralnormalDeliveryLimit;
	    }
        
        else if(strIdentifier.equals("incomeGroup"))
	    {
	        strQuery = stralincomeGroup;
	    }
        else if(strIdentifier.equals("CSectionLimit"))
	    {
	        strQuery = stralCSectionLimit;
	    }
        
        else if(strIdentifier.equals("maternityOutpatientCopay"))
	    {
	        strQuery = stralmaternityOutpatientCopay;
	    }
        else if(strIdentifier.equals("maternityInpatientCopay"))
	    {
	        strQuery = stralmaternityInpatientCopay;
	    }
        else if(strIdentifier.equals("maternityOutpatientVisits"))
	    {
	        strQuery = stralmaternityOutpatientVisits;
	    }
        else if(strIdentifier.equals("dinpatientCopay"))
	    {
	        strQuery = straldinpatientCopay;
	    }
        else if(strIdentifier.equals("inpatientCopay"))
	    {
	        strQuery = stralinpatientCopay;
	    }
        else if(strIdentifier.equals("premiumRefundApplicable"))
	    {
	        strQuery = stralpremiumRefundApplicable;
	    }
        else if(strIdentifier.equals("inpatientBenefit"))
	    {
	        strQuery = stralinpatientBenefit;
	    }
        
        else if(strIdentifier.equals("outpatientBenefit"))
	    {
	        strQuery = straloutpatientBenefit;
	        
	    }
        
        //b
        else if(strIdentifier.equals("renewalYN"))
	    {
	        strQuery = stralrenewalYN;
	        
	    }
        else if(strIdentifier.equals("administrativeServiceType"))
	    {
	        strQuery = straladministrativeServiceType;
	        
	    }
        else if(strIdentifier.equals("authorityType"))
	    {
	        strQuery = stralauthorityType;
	        
	    }
      
        else if(strIdentifier.equals("maternityPricing"))
	    {
	        strQuery = stralmaternityPricing;
	        
	    }else if(strIdentifier.equals("modeofpreapprovalforEnhanced")){
	    	strQuery = strmodeofpreapprovalforEnhanced;
	    }
        
        else if(strIdentifier.equals("ipClmsPmtMethod"))
	    {
	        strQuery = strIpClmsPmtMethod;  
	        
	    }else if(strIdentifier.equals("policyStatusForProductSync")){
	    	strQuery = strpolicyStatusForProductSync;
	    }
	    else if(strIdentifier.equals("policyStatusForScheme")){
	    	strQuery = strPOLICY_STATUS_FOR_SCHEME;
	    }else if(strIdentifier.equals("partnersList")){
	    	strQuery = strPARTNER_LIST;
	    }
	    else if(strIdentifier.equals("insNetworkType")){
	    	strQuery = str_Ins_Network_Type;
	    }
	    else if(strIdentifier.equals("residentailLocation")||strIdentifier.equals("workLocation")){
	    	strQuery = strMemberLocation;
	    }else if(strIdentifier.equals("networkTypeForAMT")){
	    	strQuery = str_Network_Type_For_AMT;
	    }else if(strIdentifier.equals("networkTypeForNIA")){
	    	strQuery = str_Network_Type_For_NIA;;
	    }else if(strIdentifier.equals("networkTypeForOIC")){
	    	strQuery = str_Network_Type_For_OIC;;
	    }else if(strIdentifier.equals("passportIssuedCountry")){
	    	strQuery = str_Passport_Issued_Country;
	    }else if(strIdentifier.equals("applicableInsCompany")){
	    	strQuery = str_Applicable_Ins_Company;
	    }
        
	    else if(strIdentifier.equals("group_accounts")){
	    	strQuery = strGroup_Accounts;
	    }
	    else if(strIdentifier.equals("productSubType")){
	    	strQuery = strProductSubType;
	    }        
	    else if(strIdentifier.equals("mapped_codes")){
	    	strQuery = strMapped_Codes;
	    }
        
	    else if(strIdentifier.equals("admissionType")){
	    	strQuery = strAdmission_Type;
	    }
        
        
         //end bikki
        return findAll(strQuery);
    }//end of loadObjects(String strIdentifier)
    
  
 /*   public Collection loadDynamicObjects(String strIdentifier,String strDynParam) throws TTKException
    {
           String strQuery = "";
        
          
           if (strIdentifier.equals("AuthInsurance"))
           {
        	   strQuery = strAuthInsuList+"'"+strDynParam+"' UNION ALL select 'OTHERS' AS INS_COMPANY_NAME,'OTHERS' AS  INS_COMPANY_NAME FROM DUAL";
           } 
           
           if (strIdentifier.equals("outpatientAreaOfCover"))
           {
        	   if("".equals(strDynParam) ){
        		   strQuery = straloutpatientAreaOfCover;
        		   
        	   }else{
            	   
        		   strQuery = straloutpatientAreaOfCover2+"'%"+strDynParam+"%' order by a.sort_number";   // '%"+networkList+"%' order by a.sort_number
           	    
               }
        	   log.info("strDynParam:"+strDynParam);
        	   log.info("strQuery:"+strQuery);
           } 

           
           if (strIdentifier.equals("PreviousProduct"))
           {
        	   if(strDynParam != ""){
        		   
        		   strQuery = strPreviousProductListPL+"'%,'||'"+strDynParam+"'||',%'";
        	   }else{
        		   
        		   strQuery = strPreviousProductList;
        	   }
               
               
           }
           return findAll(strQuery);
    } */

    public Collection loadDynamicObjects(String strIdentifier,String strDynParam) throws TTKException
    {
           String strQuery = "";
        
           if (strIdentifier.equals("GeoCountryList"))
           {
               strQuery = strGeoCountryList+"'"+strDynParam+"'";
           } 
           else if (strIdentifier.equals("EmirateList"))
           {
               strQuery = strEmirateList+"'"+strDynParam+"'";
           } 
           
           /*else if (strIdentifier.equals("AuthInsurance"))
           {
               strQuery = strAuthInsuList+"'"+strDynParam+"' "+" ORDER BY INS_COMP_NAME";
           }*/  //bk
           
           //govid
           else  if (strIdentifier.equals("AuthInsurance"))
           {
        	   strQuery = strAuthInsuList1+"'"+strDynParam+"' UNION ALL select 'OTHERS' AS INS_COMPANY_NAME,'OTHERS' AS  INS_COMPANY_NAME";
           } 
           
           else if (strIdentifier.equals("outpatientAreaOfCover"))
           {
        	   if("".equals(strDynParam) ){
        		   strQuery = straloutpatientAreaOfCover;
        		   
        	   }else{
            	   
        		   strQuery = straloutpatientAreaOfCover2+"'%"+strDynParam+"%' order by a.sort_number";   // '%"+networkList+"%' order by a.sort_number
           	    
               }
        	 
           } 

           
           else if (strIdentifier.equals("PreviousProduct"))
           {
        	   if(strDynParam != ""){
        		   
        		   strQuery = strPreviousProductListPL+"'%,'||'"+strDynParam+"'||',%'";
        	   }else{
        		   
        		   strQuery = strPreviousProductList;
        	   }
               
               
           }
           return findAll(strQuery);
    }
    public Collection loadObjectsINS(String strIdentifier,String authType) throws TTKException 
    {
    	 String strQuery = "";
    	 if(strIdentifier.equals("insuranceCompanyName"))
          {
    		 strQuery = stralinsuranceCompanyName1;
          }//end of else if(strIdentifier.equals("claimShortfallTemplateType"))
    	 return findIns(strQuery,authType);
    }
    
    public Collection findIns(String strQuery,String authType) throws TTKException {
       
        Connection conn = null; 
        PreparedStatement pStmt = null;
        ResultSet rs = null;
        try 
        { 
            conn = ResourceManager.getConnection();
            pStmt = conn.prepareStatement(strQuery);
            pStmt.setString(1,authType);
            rs = pStmt.executeQuery();
            return fetchMultiResults(rs);
        }//end of try 
        catch (SQLException sqlExp) 
        {
            throw new TTKException(sqlExp, "cache");
        }//end of catch (SQLException sqlExp)
        catch (Exception exp) 
        {
            throw new TTKException(exp, "error.cache");
        }//end of catch (Exception exp)
        finally
		{
			/* Nested Try Catch to ensure resource closure */ 
			try // First try closing the result set
			{
				try
				{
					if (rs != null) rs.close();
				}//end of try
				catch (SQLException sqlExp)
				{
					log.error("Error while closing the Resultset in CacheDAOImpl",sqlExp);
					throw new TTKException(sqlExp, "cache");
				}//end of catch (SQLException sqlExp)
				finally // Even if result set is not closed, control reaches here. Try closing the statement now.
				{
					try
					{
						if (pStmt != null)	pStmt.close();
					}//end of try
					catch (SQLException sqlExp)
					{
						log.error("Error while closing the Statement in CacheDAOImpl",sqlExp);
						throw new TTKException(sqlExp, "cache");
					}//end of catch (SQLException sqlExp)
					finally // Even if statement is not closed, control reaches here. Try closing the connection now.
					{
						try
						{
							if(conn != null) conn.close();
						}//end of try
						catch (SQLException sqlExp)
						{
							log.error("Error while closing the Connection in CacheDAOImpl",sqlExp);
							throw new TTKException(sqlExp, "cache");
						}//end of catch (SQLException sqlExp)
					}//end of finally Connection Close
				}//end of finally Statement Close
			}//end of try
			catch (TTKException exp)
			{
				throw new TTKException(exp, "cache");
			}//end of catch (TTKException exp)
			finally // Control will reach here in anycase set null to the objects 
			{
				rs = null;
				pStmt = null;
				conn = null;
			}//end of finally
		}//end of finally
    }//end of findAll(String strQuery)
	 // Shortfall CR KOC1179
    public Collection loadObjects1(String strIdentifier,Long strClaimSeqId) throws TTKException 
    {
    	 String strQuery = "";
    	 if(strIdentifier.equals("claimShortfallUnderClause"))
          {
              strQuery = strCLAIM_SHORTFALL_UNDER_CLAUSE;
          }//end of else if(strIdentifier.equals("claimShortfallTemplateType"))
    	 return findAll1(strQuery,strClaimSeqId);
    }
   // Shortfall CR KOC1179
    
    
    //INTX
  //Tariff - blocking Network types based on nase network
    public Collection loadObjects1(String strIdentifier,String strCondParam,HttpServletRequest request) throws TTKException 
    {
    	 String strQuery = "";
    	 if(strIdentifier.equals("networkTypeForTariff"))
          {
              strQuery = strNETWIRKTYPEFOR_TARIFF;
          }//end of else if(strIdentifier.equals("claimShortfallTemplateType"))
    	 if(strIdentifier.equals("insuranceCompany111"))
         {
             strQuery = strINS;
         }//end of else if(strIdentifier.equals("claimShortfallTemplateType"))
    	 if(strIdentifier.equals("providerCodeAdminTariff"))
         {
             strQuery = strPROVIDERCODEADMINTARIFF;
         }//end of else if(strIdentifier.equals("claimShortfallTemplateType"))
    	 
    	 return findAllNetworksForTariff(strQuery,strCondParam,request);
    }
   // Shortfall CR KOC1179
  /**
     * This method returns the collection of value objects  
     * @param strQuery String which contains the SQL statement to be executed
     * @exception throws TTKException
     */
    public Collection findAll1(String strQuery,Long strClaimSeqId) throws TTKException {
     
        Connection conn = null; 
        PreparedStatement pStmt = null;
        ResultSet rs = null;
        try 
        { 
            conn = ResourceManager.getConnection();
            pStmt = conn.prepareStatement(strQuery);
            pStmt.setLong(1,strClaimSeqId);
            rs = pStmt.executeQuery();
            return fetchMultiResults(rs);
        }//end of try 
        catch (SQLException sqlExp) 
        {
            throw new TTKException(sqlExp, "cache");
        }//end of catch (SQLException sqlExp)
        catch (Exception exp) 
        {
            throw new TTKException(exp, "error.cache");
        }//end of catch (Exception exp)
        finally
		{
			/* Nested Try Catch to ensure resource closure */ 
			try // First try closing the result set
			{
				try
				{
					if (rs != null) rs.close();
				}//end of try
				catch (SQLException sqlExp)
				{
					log.error("Error while closing the Resultset in CacheDAOImpl",sqlExp);
					throw new TTKException(sqlExp, "cache");
				}//end of catch (SQLException sqlExp)
				finally // Even if result set is not closed, control reaches here. Try closing the statement now.
				{
					try
					{
						if (pStmt != null)	pStmt.close();
					}//end of try
					catch (SQLException sqlExp)
					{
						log.error("Error while closing the Statement in CacheDAOImpl",sqlExp);
						throw new TTKException(sqlExp, "cache");
					}//end of catch (SQLException sqlExp)
					finally // Even if statement is not closed, control reaches here. Try closing the connection now.
					{
						try
						{
							if(conn != null) conn.close();
						}//end of try
						catch (SQLException sqlExp)
						{
							log.error("Error while closing the Connection in CacheDAOImpl",sqlExp);
							throw new TTKException(sqlExp, "cache");
						}//end of catch (SQLException sqlExp)
					}//end of finally Connection Close
				}//end of finally Statement Close
			}//end of try
			catch (TTKException exp)
			{
				throw new TTKException(exp, "cache");
			}//end of catch (TTKException exp)
			finally // Control will reach here in anycase set null to the objects 
			{
				rs = null;
				pStmt = null;
				conn = null;
			}//end of finally
		}//end of finally
    }//end of findAll(String strQuery)
    
    
    
    /**intx
     * This method returns the collection of value objects  
     * @param strQuery String which contains the SQL statement to be executed
     * @exception throws TTKException
     */
    public Collection findAllNetworksForTariff(String strQuery,String strCondParam,HttpServletRequest request) throws TTKException {
     
        Connection conn = null; 
        PreparedStatement pStmt = null;
        ResultSet rs = null;
    	CallableStatement cStmtObject=null;
        try 
        { 
        	if(!"Tariff".equals(TTKCommon.getActiveSubLink(request)))//EMPANELMENT MODULE TARIFF
        	{
        		/* conn = ResourceManager.getConnection();
	            pStmt = conn.prepareStatement(strQuery);
	            pStmt.setString(1,strCondParam);
	            rs = pStmt.executeQuery();*/
        		//System.out.println("strQuery.."+strQuery);
	            conn = ResourceManager.getConnection();
	            cStmtObject = (java.sql.CallableStatement)conn.prepareCall(strQuery);
	            cStmtObject.setString(1, "|"+strCondParam.substring(strCondParam.indexOf(",")+1,strCondParam.length())+"|");
	            //cStmtObject.registerOutParameter(2,OracleTypes.CURSOR);	//Networks
	            cStmtObject.registerOutParameter(2,Types.OTHER);	//Networks
	            cStmtObject.execute();
				rs = (java.sql.ResultSet)cStmtObject.getObject(2);
						
        	}else//to get the Group or Individuals providers
        	{
        		String[] strArray	=	null;
        		conn = ResourceManager.getConnection();
        		if(!"IND".equals(strCondParam) && !strCondParam.contains("adminTariffNetwork"))//THIS CONDITION TO GET THE PROVIDERS IN THE GROUP
        		{
        			strArray	=	strCondParam.split(",");
		            pStmt = conn.prepareStatement("SELECT HI.HOSP_LICENC_NUMB,HI.HOSP_NAME FROM APP.TPA_HOSP_INFO HI JOIN APP.TPA_HOSP_EMPANEL_STATUS ES ON (HI.HOSP_SEQ_ID=ES.HOSP_SEQ_ID) WHERE HI.HOSP_CATAGORY=? AND HI.HOSP_GROUP_SEQ_ID=? ORDER BY HI.HOSP_LICENC_NUMB");
		            pStmt.setString(1,strArray[0]);
		            pStmt.setString(2,strArray[1]);
		            rs = pStmt.executeQuery();
        		}else if(strCondParam.contains("adminTariffNetwork"))
        		{
        			strArray	=	strCondParam.split(",");
        			
		            cStmtObject = (java.sql.CallableStatement)conn.prepareCall(strQuery);
		            if(strArray.length==1){
		            	cStmtObject.setString(1,"|"+strArray[0]+"|");
		            }else{
		            cStmtObject.setString(1,"|"+strArray[1]+"|");
		           
		            }
		            cStmtObject.registerOutParameter(2,Types.OTHER);	//Networks
		            cStmtObject.execute();
					rs = (java.sql.ResultSet)cStmtObject.getObject(2);
        		}
        		else// TO FETCH THE INDIVIDUAL PROVIDERS
        		{
     	            pStmt = conn.prepareStatement(strQuery);
     	            pStmt.setString(1,strCondParam);
     	           rs = pStmt.executeQuery();
        		}
        		
        	}
            return fetchMultiResults(rs);
        }//end of try 
        catch (SQLException sqlExp) 
        {
            throw new TTKException(sqlExp, "cache");
        }//end of catch (SQLException sqlExp)
        catch (Exception exp) 
        {
            throw new TTKException(exp, "error.cache");
        }//end of catch (Exception exp)
        finally
		{
			 //Nested Try Catch to ensure resource closure  
			try // First try closing the result set
			{
				try
				{
					if (rs != null) rs.close();
				}//end of try
				catch (SQLException sqlExp)
				{
					log.error("Error while closing the Resultset in CacheDAOImpl",sqlExp);
					throw new TTKException(sqlExp, "cache");
				}//end of catch (SQLException sqlExp)
				finally
				{
			    try{
					if(cStmtObject!=null) cStmtObject.close();	
					}
				    catch(SQLException sqlExp){
				    	log.error("Error while closing the Statement in CacheDAOImpl",sqlExp);
				    }
				
				finally // Even if result set is not closed, control reaches here. Try closing the statement now.
				{
					try
					{
						if (pStmt != null)	pStmt.close();
						if (cStmtObject != null)	cStmtObject.close();
					}//end of try
					catch (SQLException sqlExp)
					{
						log.error("Error while closing the Statement in CacheDAOImpl",sqlExp);
						throw new TTKException(sqlExp, "cache");
					}//end of catch (SQLException sqlExp)
					finally // Even if statement is not closed, control reaches here. Try closing the connection now.
					{
						try
						{
							if(conn != null) conn.close();
						}//end of try
						catch (SQLException sqlExp)
						{
							log.error("Error while closing the Connection in CacheDAOImpl",sqlExp);
							throw new TTKException(sqlExp, "cache");
						}//end of catch (SQLException sqlExp)
					}//end of finally Connection Close
				}//end of finally Statement Close
			}//end of try
			}
			catch (TTKException exp)
			{
				throw new TTKException(exp, "cache");
			}//end of catch (TTKException exp)
			finally // Control will reach here in anycase set null to the objects 
			{
				rs = null;
				pStmt = null;
				cStmtObject=null;
				conn = null;
			}//end of finally
		}//end of finally
    }//end of findAllNetworksForTariff(String strQuery)

    /**
     * This method returns the collection of value objects
     * @param strQuery String which contains the SQL statement to be executed
     * @exception throws TTKException
     */
    public Collection findAll(String strQuery) throws TTKException {

        Connection conn = null;
        PreparedStatement pStmt = null;
        ResultSet rs = null;
        try
        {
           // System.out.println("strQuery==="+strQuery);
        	conn = ResourceManager.getConnection();
            pStmt = conn.prepareStatement(strQuery);
            
            rs = pStmt.executeQuery();
           
            return fetchMultiResults(rs);
        }//end of try
        catch (SQLException sqlExp)
        {    
        	System.out.println("strQuery'''''''''="+strQuery);
            throw new TTKException(sqlExp, "cache");
            
        }//end of catch (SQLException sqlExp)
        catch (Exception exp)
        {
            throw new TTKException(exp, "error.cache");
        }//end of catch (Exception exp)
        finally
		{
			/* Nested Try Catch to ensure resource closure */
			try // First try closing the result set
			{
				try
				{
					if (rs != null) rs.close();
				}//end of try
				catch (SQLException sqlExp)
				{
					log.error("Error while closing the Resultset in CacheDAOImpl",sqlExp);
					throw new TTKException(sqlExp, "cache");
				}//end of catch (SQLException sqlExp)
				finally // Even if result set is not closed, control reaches here. Try closing the statement now.
				{
					try
					{
						if (pStmt != null)	pStmt.close();
					}//end of try
					catch (SQLException sqlExp)
					{
						log.error("Error while closing the Statement in CacheDAOImpl",sqlExp);
						throw new TTKException(sqlExp, "cache");
					}//end of catch (SQLException sqlExp)
					finally // Even if statement is not closed, control reaches here. Try closing the connection now.
					{
						try
						{
							if(conn != null) conn.close();
						}//end of try
						catch (SQLException sqlExp)
						{
							log.error("Error while closing the Connection in CacheDAOImpl",sqlExp);
							throw new TTKException(sqlExp, "cache");
						}//end of catch (SQLException sqlExp)
					}//end of finally Connection Close
				}//end of finally Statement Close
			}//end of try
			catch (TTKException exp)
			{
				throw new TTKException(exp, "cache");
			}//end of catch (TTKException exp)
			finally // Control will reach here in anycase set null to the objects
			{
				rs = null;
				pStmt = null;
				conn = null;
			}//end of finally
		}//end of finally
    }//end of findAll(String strQuery)

    /**
     * This method populates the basebean with the information contained in the resultset object
     * @param rs ResultSet object which contains the information from the database
     * @return Collection of value objects
     * @exception throws TTKException
     */
    protected Collection fetchMultiResults(ResultSet rs) throws SQLException {
        Collection<Object> resultList = new ArrayList<Object>();
        BaseVO bvo = null;
        if(rs != null){
            while (rs.next()) {
                bvo = new CacheObject();
                populateBean(bvo, rs);
                resultList.add(bvo);
            }//end of while
        }//end of if(rs != null)
        return resultList;
    }//end of fetchMultiResults(ResultSet rs)

    /**
     * This method populates the basebean with the information contained in the resultset object
     * @param baseVO BaseVO object which has to be populated
     * @param rs ResultSet object which has to be populated
     * @exception throws TTKException
     */
    protected void populateBean(BaseVO BaseVO, ResultSet rs) throws SQLException {
        CacheObject voBean = (CacheObject) BaseVO;
        voBean.setCacheId(TTKCommon.checkNull(rs.getString(1)));
        voBean.setCacheDesc(TTKCommon.checkNull(rs.getString(2)));
    }//end of populateBean method

}//end of class CacheDAOImpl
